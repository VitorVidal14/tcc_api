var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Animal.html",[0,0.044,1,0.779]],["body/classes/Animal.html",[0,0.038,1,0.969,2,1.036,3,0.269,4,0.233,5,0.233,6,2.334,7,2.297,8,2.967,9,0.307,10,1.468,11,3.341,12,2.206,13,1.446,14,1.454,15,3.842,16,2.206,17,2.323,18,3.842,19,0.825,20,0.033,21,1.334,22,1.668,23,3.228,24,3.962,25,3.962,26,1.08,27,2.796,28,3.308,29,2.796,30,2.554,31,3.962,32,2.796,33,2.876,34,2.796,35,2.32,36,3.308,37,2.967,38,2.796,39,3.308,40,2.796,41,2.029,42,2.876,43,2.029,44,3.962,45,2.796,46,2.534,47,2.796,48,0.55,49,1.802,50,1.802,51,3.407,52,2.876,53,3.842,54,2.876,55,1.036,56,2.796,57,2.796,58,2.796,59,2.796,60,0.269,61,2.796,62,2.029,63,2.796,64,2.334,65,0.014,66,0.02,67,0.014]],["title/controllers/AnimalsController.html",[68,1.283,69,2.053]],["body/controllers/AnimalsController.html",[0,0.026,1,1.412,3,0.179,4,0.155,5,0.155,9,0.204,13,1.847,14,1.152,19,0.566,20,0.032,21,1.177,22,1.284,26,0.831,48,0.518,60,0.179,65,0.009,66,0.014,67,0.009,68,0.749,69,1.883,70,0.749,71,1.552,72,1.199,73,1.552,74,1.082,75,2.438,76,2.438,77,2.438,78,3.411,79,2.438,80,1.552,81,2.732,82,2.863,83,2.921,84,3.463,85,1.883,86,2.443,87,2.148,88,3.411,89,2.966,90,1.552,91,1.883,92,1.814,93,3.684,94,1.86,95,1.86,96,1.514,97,1.514,98,1.645,99,1.991,100,1.552,101,2.438,102,1.86,103,2.921,104,2.959,105,2.575,106,3.9,107,1.883,108,1.86,109,1.86,110,1.552,111,1.552,112,2.12,113,2.12,114,1.86,115,1.86,116,3.291,117,3.411,118,2.966,119,4.93,120,1.86,121,1.86,122,1.86,123,1.552,124,3.011,125,2.921,126,2.148,127,1.552,128,1.86,129,1.86,130,2.12,131,1.883,132,1.199,133,1.199,134,1.35,135,1.35,136,1.35,137,2.966,138,1.35,139,0.455,140,1.729,141,1.552,142,0.816,143,1.552,144,1.35,145,1.35,146,3.038,147,2.618,148,3.178,149,1.199,150,0.689,151,1.35,152,0.978,153,1.86,154,3.038,155,1.199,156,0.891,157,1.35,158,1.86,159,1.35,160,1.199,161,2.863,162,1.883,163,1.552,164,3.224,165,1.35,166,1.86,167,1.645,168,1.86,169,1.86,170,1.86,171,1.86,172,1.86,173,1.583,174,1.86,175,1.35,176,1.86,177,1.86,178,1.86,179,1.35,180,1.86,181,1.86]],["title/modules/AnimalsModule.html",[182,1.086,183,1.527]],["body/modules/AnimalsModule.html",[0,0.05,1,0.896,3,0.353,4,0.306,5,0.306,20,0.032,48,0.654,60,0.353,65,0.018,66,0.024,67,0.018,69,3.411,70,1.919,139,0.896,140,3.043,141,3.059,144,2.66,182,1.805,183,2.977,184,1.608,185,1.608,186,1.926,187,1.926,188,1.608,189,2.781,190,2.781,191,3.059,192,3.059,193,3.059,194,3.059,195,2.612,196,2.504,197,1.926,198,1.926,199,3.665,200,2.761,201,3.665,202,2.125,203,1.25,204,2.66,205,3.665]],["title/injectables/AnimalsService.html",[140,1.527,206,1.086]],["body/injectables/AnimalsService.html",[0,0.034,1,1.335,3,0.241,4,0.209,5,0.209,9,0.275,11,2.655,12,1.199,13,1.494,14,1.335,16,1.199,17,1.474,19,0.702,20,0.033,21,1.28,26,0.99,48,0.581,55,0.927,60,0.241,65,0.012,66,0.018,67,0.012,74,1.355,75,3.053,76,3.053,77,3.053,78,3.971,79,3.053,80,3.053,81,3.064,96,1.875,97,1.875,98,1.875,99,2.15,100,3.053,105,1.199,107,1.613,110,3.053,123,3.053,130,3.453,139,0.612,140,1.753,142,1.098,143,2.088,144,1.816,156,1.199,167,1.762,173,1.605,203,0.853,206,1.247,207,1.315,208,2.088,209,3.207,210,2.12,211,2.502,212,2.5,213,4.324,214,2.28,215,2.502,216,3.658,217,2.502,218,2.502,219,2.502,220,2.502,221,2.502,222,1.816,223,1.45,224,2.502,225,2.502,226,2.12,227,2.273,228,2.502,229,2.502,230,2.502,231,2.502,232,2.502,233,2.502,234,2.088,235,2.779,236,2.502,237,2.502,238,3.658,239,3.658,240,3.053,241,2.502,242,2.502,243,1.613,244,2.502,245,2.088,246,2.502]],["title/modules/AppModule.html",[182,1.086,247,2.053]],["body/modules/AppModule.html",[0,0.05,3,0.352,4,0.305,5,0.305,20,0.032,48,0.665,60,0.352,65,0.018,66,0.023,67,0.018,139,0.893,182,1.802,183,2.851,184,1.604,185,1.604,186,1.921,187,1.921,188,1.604,189,1.921,190,1.921,195,2.61,196,2.499,197,1.921,198,1.921,200,2.756,202,2.118,203,1.246,247,4.09,248,3.051,249,3.051,250,3.447,251,3.447,252,3.655,253,2.653,254,3.655,255,3.655,256,3.655,257,3.655,258,3.655,259,3.655]],["title/classes/CreateAnimalDto.html",[0,0.044,81,1.846]],["body/classes/CreateAnimalDto.html",[0,0.056,1,1.357,2,1.071,3,0.279,4,0.241,5,0.241,9,0.318,10,1.503,11,3.403,12,2.247,13,1.596,14,1.146,16,2.247,19,0.742,20,0.032,21,1.305,22,1.548,26,1.002,33,2.946,48,0.515,60,0.279,65,0.014,66,0.02,67,0.014,81,2.352,86,2.553,87,2.917,92,1.681,126,2.464,130,3.403,150,1.071,260,4.633,261,2.414,262,3.451,263,3.387,264,3.387,265,3.861,266,2.892,267,2.892,268,3.69,269,2.414,270,2.892,271,2.892,272,2.892,273,3.913,274,4.058,275,3.387,276,2.946,277,2.892,278,2.892,279,2.892,280,2.892,281,3.578,282,3.103,283,3.217,284,2.414,285,3.387,286,1.52,287,2.892,288,2.892,289,2.892,290,2.892,291,2.892,292,2.892,293,2.892,294,2.892]],["title/classes/CreateNoteDto.html",[0,0.044,295,1.846]],["body/classes/CreateNoteDto.html",[0,0.053,1,1.101,2,0.996,3,0.259,4,0.224,5,0.224,9,0.295,10,1.428,13,1.545,19,0.751,20,0.032,21,1.323,22,1.567,26,1.015,35,1.18,48,0.495,60,0.259,65,0.013,66,0.019,67,0.013,86,1.691,87,2.025,92,1.825,150,0.996,262,3.493,263,3.217,265,3.888,281,3.597,282,3.235,283,3.235,284,2.244,285,3.217,286,1.413,295,2.234,296,4.659,297,2.244,298,3.269,299,3.269,300,3.269,301,3.269,302,3.269,303,2.688,304,2.688,305,3.853,306,4.923,307,4.923,308,3.853,309,3.853,310,4.919,311,3.853,312,2.688,313,3.853,314,2.688,315,2.688,316,3.217,317,2.688,318,2.688,319,3.217,320,3.853,321,2.688,322,2.688,323,3.853,324,2.688,325,2.244,326,2.688,327,2.688,328,3.853,329,2.688,330,2.244,331,2.688,332,2.688,333,2.688,334,2.688]],["title/classes/CreateUserDto.html",[0,0.044,335,1.846]],["body/classes/CreateUserDto.html",[0,0.063,2,1.287,3,0.335,4,0.29,5,0.29,9,0.381,10,1.703,19,0.637,20,0.032,21,1.23,22,1.33,26,0.861,48,0.505,60,0.335,65,0.017,66,0.023,67,0.017,92,1.444,126,2.884,150,1.287,262,2.964,265,3.536,281,3.323,282,2.988,283,2.988,286,1.826,335,2.665,336,4.303,337,2.899,338,3,339,3.323,340,3.473,341,5.864,342,4.598,343,5.486,344,5.486,345,3.838,346,4.598,347,4.598,348,3.473,349,3.536,350,3.473,351,4.598,352,4.598,353,4.598,354,4.598,355,3.473,356,3.473,357,3.473,358,3.473,359,3.473,360,3.473]],["title/classes/CreateVaccineDto.html",[0,0.044,361,1.846]],["body/classes/CreateVaccineDto.html",[0,0.06,1,1.401,2,1.189,3,0.309,4,0.268,5,0.268,9,0.352,10,1.615,12,2.374,14,1.211,16,2.374,19,0.736,20,0.032,21,1.338,22,1.536,26,0.995,33,3.857,48,0.479,60,0.309,65,0.016,66,0.022,67,0.016,92,1.669,150,1.189,262,3.425,264,4.134,265,3.845,268,3.857,269,3.639,276,3.165,281,3.581,282,3.08,283,3.221,286,1.686,306,4.435,361,2.527,362,4.638,363,2.678,364,3.595,365,3.208,366,5.313,367,5.313,368,3.208,369,3.208,370,4.134,371,3.208,372,3.208,373,4.36,374,3.208]],["title/classes/GetVaccinesDto.html",[0,0.044,375,1.846]],["body/classes/GetVaccinesDto.html",[0,0.069,1,1.217,2,1.455,3,0.378,4,0.328,5,0.328,9,0.431,10,1.845,12,2.621,16,2.621,19,0.69,20,0.032,21,1.289,22,1.44,26,0.932,48,0.547,60,0.378,65,0.019,66,0.025,67,0.019,92,1.564,150,1.455,268,3.614,276,3.614,282,3.169,283,3.169,286,2.064,375,2.886,376,4.564,377,3.279,378,4.979,379,4.979,380,3.928,381,3.928,382,5.467,383,5.467]],["title/interfaces/JwtPayload.html",[384,2.053,385,1.846]],["body/interfaces/JwtPayload.html",[3,0.448,4,0.388,5,0.388,9,0.511,10,2.047,19,0.645,20,0.031,21,1.322,60,0.448,65,0.023,66,0.027,67,0.023,338,3.204,384,2.999,385,3.202,386,4.652,387,3.883,388,3.883]],["title/injectables/JwtStrategy.html",[206,1.086,389,1.846]],["body/injectables/JwtStrategy.html",[0,0.046,3,0.325,4,0.281,5,0.281,7,1.954,9,0.37,14,1.102,17,2.184,19,0.625,20,0.033,26,0.844,48,0.652,55,1.249,60,0.325,65,0.017,66,0.022,67,0.017,74,1.67,96,1.67,97,1.67,98,1.249,99,1.67,139,0.824,152,1.772,167,1.249,173,1.479,203,1.15,206,1.537,207,1.772,209,2.669,210,2.613,212,2.85,223,1.954,226,1.954,227,2.369,235,1.772,243,2.173,338,2.369,385,3.143,389,2.613,390,2.814,391,4.508,392,2.814,393,3.371,394,3.763,395,4.508,396,3.371,397,3.763,398,3.763,399,3.371,400,3.371,401,3.371,402,2.814,403,2.906,404,2.814,405,2.173,406,3.371,407,2.814,408,3.371,409,3.371,410,3.371,411,3.371,412,2.814,413,2.814]],["title/classes/Note.html",[0,0.044,35,1.398]],["body/classes/Note.html",[0,0.039,1,1.419,2,1.062,3,0.276,4,0.239,5,0.239,7,2.337,8,3.007,9,0.315,10,1.494,13,1.465,14,1.442,19,0.805,20,0.032,21,1.368,22,1.678,23,3.439,26,1.087,30,2.599,35,1.769,37,1.847,41,2.08,42,2.927,43,2.08,48,0.443,49,1.847,50,1.847,51,3.567,52,2.927,54,2.927,55,1.062,60,0.276,62,2.927,65,0.014,66,0.02,67,0.014,86,1.258,92,1.465,162,1.847,299,3.386,300,3.386,301,3.386,302,3.386,316,3.366,319,3.366,414,2.392,415,4.665,416,3.366,417,2.866,418,2.866,419,4.032,420,2.866,421,4.032,422,2.866,423,4.032,424,2.866,425,4.032,426,2.866,427,4.032,428,2.866,429,2.866,430,4.032,431,2.866,432,4.032,433,2.08,434,2.866,435,2.866,436,2.392,437,2.866,438,2.866]],["title/controllers/NotesController.html",[68,1.283,439,2.053]],["body/controllers/NotesController.html",[0,0.027,1,1.186,3,0.192,4,0.166,5,0.166,9,0.219,13,1.906,14,1.237,15,1.665,19,0.588,20,0.032,21,1.203,22,1.227,26,0.795,35,0.876,48,0.533,60,0.192,65,0.01,66,0.015,67,0.01,68,0.804,70,0.804,72,1.286,74,1.143,82,2.736,84,2.736,86,2.405,87,2.231,91,1.989,92,1.84,93,3.533,96,1.573,97,1.573,98,1.573,99,1.936,101,2.575,104,2.813,105,1.479,106,3.978,112,3.522,113,3.522,116,1.989,126,1.049,127,1.665,131,1.989,132,1.286,133,1.286,134,1.448,135,1.448,136,1.448,137,3.081,138,1.448,139,0.488,142,0.876,145,1.448,146,2.958,147,3.081,148,3.128,149,1.286,150,0.739,151,1.448,152,1.049,154,2.958,155,1.286,156,0.956,157,1.448,159,1.448,160,1.286,161,2.736,164,3.081,165,1.448,167,1.573,173,1.655,175,1.448,179,1.448,295,2.813,298,2.239,307,4.789,439,1.989,440,1.665,441,2.575,442,2.575,443,2.575,444,2.575,445,1.665,446,4.245,447,4.245,448,4.245,449,4.843,450,1.995,451,1.995,452,1.665,453,3.085,454,3.085,455,1.995,456,1.995,457,1.665,458,1.995,459,1.995,460,1.995,461,3.085,462,1.995,463,1.995,464,1.995,465,1.995,466,1.983,467,1.665,468,1.665,469,1.448,470,1.995,471,1.995,472,1.995,473,1.995,474,1.995,475,1.995,476,1.995,477,1.995,478,1.995,479,1.995,480,1.995,481,1.995,482,1.995]],["title/modules/NotesModule.html",[182,1.086,250,1.846]],["body/modules/NotesModule.html",[0,0.05,3,0.351,4,0.304,5,0.304,20,0.032,35,1.599,48,0.665,60,0.351,65,0.018,66,0.023,67,0.018,70,1.912,139,0.891,182,1.8,183,2.848,184,1.599,185,1.599,186,1.915,187,1.915,188,1.599,189,2.774,190,1.915,195,2.608,196,2.494,197,1.915,198,1.915,200,2.751,202,2.112,203,1.243,204,2.645,250,3.628,439,3.401,466,3.123,467,3.042,469,2.645,483,3.042,484,3.644,485,3.042,486,3.644,487,3.644,488,3.042,489,3.644]],["title/injectables/NotesService.html",[206,1.086,466,1.674]],["body/injectables/NotesService.html",[0,0.035,1,1.072,3,0.247,4,0.214,5,0.214,9,0.281,13,1.511,14,1.249,19,0.708,20,0.033,21,1.288,26,0.957,35,1.924,48,0.586,55,0.949,60,0.247,64,2.139,65,0.013,66,0.018,67,0.013,74,1.379,92,1.169,96,1.893,97,1.893,98,1.782,99,2.088,105,1.228,107,1.652,139,0.627,140,2.306,142,1.125,156,1.228,167,1.624,173,1.634,203,0.874,206,1.27,207,1.347,209,3.141,210,2.158,212,2.529,222,1.86,223,1.486,226,2.158,227,2.529,235,2.686,240,2.139,243,1.652,295,3.09,298,3.71,299,2.702,300,2.702,301,1.86,302,2.702,441,3.107,442,3.107,443,3.107,444,3.107,445,3.107,452,3.107,457,3.107,466,1.957,468,2.139,469,1.86,490,2.139,491,2.563,492,4.384,493,2.563,494,3.723,495,2.563,496,2.563,497,2.563,498,3.723,499,2.563,500,2.563,501,2.563,502,2.563,503,2.563,504,2.563,505,2.563,506,2.563,507,2.563,508,2.563,509,2.563,510,2.563,511,2.563,512,2.563,513,3.66,514,2.563,515,2.563,516,2.563,517,2.563]],["title/classes/User.html",[0,0.044,17,1.283]],["body/classes/User.html",[0,0.042,1,1.337,2,1.137,3,0.296,4,0.256,5,0.256,7,2.451,8,3.119,9,0.337,10,1.566,13,1.519,14,1.337,17,1.703,19,0.784,20,0.032,21,1.373,22,1.582,23,2.725,26,1.059,30,2.725,36,2.561,37,1.977,48,0.531,49,1.977,50,1.977,51,3.525,53,3.529,55,1.137,60,0.296,65,0.015,66,0.021,67,0.015,73,4.039,74,1.566,96,1.137,97,1.137,98,1.137,99,1.566,104,2.451,167,1.137,209,2.543,227,1.612,234,2.561,235,1.612,338,2.543,339,3.361,349,2.725,433,2.227,518,2.561,519,4.838,520,4.228,521,3.068,522,3.068,523,4.228,524,3.068,525,4.228,526,3.068,527,4.228,528,3.068,529,4.228,530,3.068,531,3.068,532,3.069,533,3.068,534,3.068,535,4.228,536,2.561,537,3.068,538,3.068]],["title/controllers/UsersController.html",[68,1.283,539,2.053]],["body/controllers/UsersController.html",[0,0.026,3,0.183,4,0.158,5,0.158,9,0.208,13,1.781,14,1.162,17,0.764,19,0.572,20,0.032,21,1.066,22,1.296,26,0.839,48,0.492,60,0.183,65,0.009,66,0.015,67,0.009,68,0.764,70,0.764,72,1.222,74,1.099,82,2.889,84,3.773,85,1.911,86,2.569,87,2.701,88,2.475,89,2.153,90,1.583,91,2.662,92,1.839,93,3.606,96,1.53,97,1.53,98,1.66,99,2.002,104,2.394,105,1.421,106,2.153,111,1.583,112,2.153,113,2.153,116,1.911,117,2.475,118,2.998,124,3.048,126,2.941,131,1.911,132,1.222,133,1.222,134,1.376,135,1.376,136,1.376,137,2.651,139,0.464,142,0.832,146,3.063,147,2.651,148,3.201,149,1.222,150,0.702,154,3.063,155,1.911,160,1.222,161,2.889,162,1.222,163,2.475,165,1.376,167,1.66,173,1.301,175,1.376,179,1.376,214,1.75,335,3.191,338,2.171,349,2.662,405,1.222,436,2.475,449,2.475,539,1.911,540,1.583,541,1.896,542,2.475,543,2.475,544,2.475,545,3.447,546,3.447,547,1.583,548,4.13,549,3.652,550,1.896,551,2.965,552,3.447,553,4.13,554,3.447,555,1.896,556,1.896,557,1.583,558,1.896,559,4.13,560,1.896,561,1.896,562,1.583,563,1.896,564,1.896,565,4.13,566,1.896,567,1.896,568,1.896,569,2.965,570,2.965,571,1.896,572,1.896,573,1.896,574,1.583,575,1.583,576,1.896,577,1.896,578,1.896,579,1.896,580,1.896,581,2.475,582,1.896,583,1.896,584,1.896,585,1.896,586,1.896,587,1.896,588,1.896]],["title/modules/UsersModule.html",[182,1.086,195,1.398]],["body/modules/UsersModule.html",[0,0.046,3,0.325,4,0.281,5,0.281,17,1.358,20,0.033,48,0.663,60,0.325,65,0.017,66,0.022,67,0.017,70,1.816,139,0.824,152,1.772,182,1.732,184,1.479,185,1.479,186,1.772,187,1.772,188,1.479,189,2.669,190,2.669,195,2.709,196,2.369,197,1.772,198,1.772,200,1.954,202,1.954,203,1.15,214,3.005,389,3.634,403,2.173,405,2.173,412,2.814,539,3.273,574,2.814,589,2.814,590,2.814,591,2.814,592,3.371,593,3.371,594,4.508,595,3.371,596,2.447,597,3.371,598,3.371,599,3.371,600,3.371,601,3.371,602,3.371,603,3.371,604,3.371,605,3.371]],["title/injectables/UsersService.html",[206,1.086,214,1.527]],["body/injectables/UsersService.html",[0,0.029,3,0.2,4,0.173,5,0.173,9,0.227,13,1.359,14,1.204,17,2.131,19,0.683,20,0.033,21,1.104,26,0.96,48,0.581,55,0.767,60,0.2,65,0.021,66,0.016,67,0.01,74,1.176,84,2.046,85,1.335,86,0.909,87,1.088,96,1.825,97,1.825,98,1.825,99,2.116,105,1.522,107,1.335,139,0.506,142,0.909,156,0.992,167,1.825,173,1.899,203,0.706,206,1.083,207,1.088,209,3.172,210,1.84,212,2.275,214,1.522,222,1.503,223,1.2,226,1.84,227,2.78,235,2.851,243,2.488,245,1.728,335,3.311,338,2.78,339,2.046,349,1.335,385,1.84,392,1.728,394,2.65,397,1.728,398,1.728,403,1.335,404,1.728,405,1.335,407,1.728,413,1.728,513,3.223,532,2.304,536,1.728,542,2.65,543,2.65,544,2.65,545,3.613,546,2.65,547,2.65,552,1.728,554,1.728,557,2.65,562,2.65,575,1.728,581,1.728,596,1.503,606,1.728,607,3.174,608,5.127,609,2.071,610,2.071,611,2.071,612,2.071,613,2.071,614,3.174,615,2.071,616,2.071,617,3.174,618,2.071,619,3.174,620,2.071,621,2.071,622,2.071,623,2.071,624,3.861,625,3.174,626,2.071,627,2.071,628,2.071,629,2.071,630,2.071,631,2.071,632,2.071,633,2.071,634,2.071,635,2.071,636,2.071,637,2.071,638,2.071,639,3.174,640,2.071,641,2.071,642,2.071,643,2.071]],["title/classes/Vaccine.html",[0,0.044,46,1.527]],["body/classes/Vaccine.html",[0,0.044,1,1.454,2,1.174,3,0.305,4,0.264,5,0.264,7,2.505,8,3.171,9,0.348,10,1.601,12,2.358,13,1.545,14,1.491,16,2.358,19,0.791,20,0.032,21,1.334,22,1.651,23,3.407,26,1.069,28,3.608,30,2.786,37,2.042,39,3.608,41,2.3,42,3.138,43,2.3,46,2.072,48,0.475,49,2.042,50,2.042,51,3.566,52,3.138,54,3.138,55,1.174,60,0.305,62,2.3,65,0.016,66,0.021,67,0.016,364,3.571,416,3.608,433,2.3,644,2.644,645,3.168,646,3.168,647,4.322,648,4.322,649,3.168,650,4.322,651,3.168,652,4.322,653,3.168,654,3.168,655,3.168,656,3.168]],["title/controllers/VaccinesController.html",[68,1.283,657,2.053]],["body/controllers/VaccinesController.html",[0,0.039,3,0.272,4,0.235,5,0.235,9,0.31,14,0.975,18,2.355,19,0.553,20,0.032,22,1.153,26,0.747,46,1.352,48,0.622,60,0.272,65,0.014,66,0.02,67,0.014,68,1.136,70,1.136,72,1.818,74,1.477,82,2.57,85,2.57,86,2.537,89,2.894,91,2.57,92,1.666,93,2.57,96,1.477,97,1.477,98,1.477,99,1.862,104,2.311,105,2.41,116,2.57,118,2.894,126,1.483,131,2.57,132,1.818,133,1.818,138,2.048,139,0.69,142,1.238,145,2.048,146,2.981,148,3.24,149,1.818,150,1.045,151,2.048,152,1.483,154,2.981,155,1.818,156,1.352,157,2.048,159,2.048,160,1.818,161,2.57,162,1.818,164,2.894,167,1.477,275,3.861,361,3.191,370,3.329,375,2.914,657,2.57,658,2.355,659,3.329,660,3.329,661,2.355,662,3.988,663,5.506,664,2.821,665,3.988,666,2.821,667,2.821,668,2.355,669,2.821,670,3.988,671,2.821,672,2.821,673,3.329,674,2.355,675,2.355,676,2.355,677,2.355,678,2.048,679,2.431,680,2.355,681,2.821,682,2.821,683,2.821,684,2.821,685,2.821,686,2.821,687,2.821,688,2.821]],["title/modules/VaccinesModule.html",[182,1.086,251,1.846]],["body/modules/VaccinesModule.html",[0,0.049,3,0.34,4,0.295,5,0.295,20,0.032,46,1.693,48,0.66,60,0.34,65,0.017,66,0.023,67,0.017,70,1.873,139,0.863,182,1.772,183,2.824,184,1.55,185,1.55,186,1.856,187,1.856,188,1.55,189,2.732,190,2.732,195,2.585,196,2.444,197,1.856,198,1.856,200,2.695,202,2.047,203,1.204,204,2.564,251,3.636,488,2.948,657,3.35,678,2.564,679,3.318,680,2.948,689,2.948,690,2.948,691,3.532,692,2.948,693,3.532,694,3.532,695,3.532]],["title/injectables/VaccinesService.html",[206,1.086,679,1.674]],["body/injectables/VaccinesService.html",[0,0.043,3,0.304,4,0.263,5,0.263,9,0.346,12,1.511,14,1.289,16,2.647,19,0.68,20,0.033,26,0.919,46,1.511,48,0.626,55,1.168,60,0.304,65,0.016,66,0.021,67,0.016,74,1.596,96,1.818,97,1.818,98,1.596,99,1.954,139,0.771,142,1.383,167,1.596,203,1.075,206,1.469,207,1.657,209,2.996,210,2.497,212,2.772,223,1.827,226,1.827,227,1.657,235,2.579,361,3.201,364,2.288,375,3.057,659,3.596,660,3.596,661,3.596,668,3.596,673,2.631,674,2.631,675,2.631,676,2.631,677,2.631,678,2.288,679,2.264,696,2.631,697,3.152,698,3.152,699,4.308,700,3.152,701,3.152,702,3.152,703,3.152,704,4.907,705,4.308,706,3.152,707,3.152,708,3.152,709,3.152,710,3.152,711,3.152,712,3.152,713,3.152]],["title/coverage.html",[714,3.149]],["body/coverage.html",[0,0.083,1,0.794,5,0.271,6,2.713,17,1.309,19,0.45,20,0.032,35,1.426,46,1.558,65,0.016,66,0.022,67,0.016,68,2.152,69,2.095,71,2.713,81,1.884,140,1.558,173,1.426,188,1.426,206,1.903,208,2.713,214,1.558,253,2.359,260,2.713,261,2.713,295,1.884,296,2.713,297,2.713,335,1.884,336,2.713,337,2.713,345,5.396,361,1.884,362,2.713,363,2.713,375,1.884,376,2.713,377,2.713,384,2.095,385,1.884,387,2.713,388,2.713,389,1.884,390,2.713,414,2.713,439,2.095,440,2.713,466,1.708,490,2.713,518,2.713,539,2.095,540,2.713,606,2.713,644,2.713,657,2.095,658,2.713,679,1.708,696,2.713,714,2.359,715,3.25,716,3.25,717,3.25,718,4.398,719,5.341,720,5.341,721,2.713,722,3.25,723,4.398,724,2.713,725,3.25,726,4.398,727,5.341,728,3.25,729,3.25,730,3.25,731,3.25,732,3.25]],["title/dependencies.html",[185,1.68,733,2.665]],["body/dependencies.html",[0,0.069,20,0.033,55,1.478,65,0.02,66,0.025,67,0.02,139,0.975,150,1.478,152,2.097,185,1.751,203,1.361,286,2.097,402,4.597,403,2.572,532,2.896,596,2.896,734,5.507,735,3.99,736,5.507,737,3.99,738,5.029,739,3.99,740,3.99,741,3.99,742,3.99,743,3.99,744,3.99,745,3.99,746,3.99,747,3.99,748,3.99,749,3.99,750,3.99,751,3.99,752,3.99,753,3.99,754,3.99,755,3.99,756,3.99,757,3.99,758,3.99,759,3.99,760,3.99,761,3.99,762,3.99]],["title/miscellaneous/enumerations.html",[763,1.401,764,3.196]],["body/miscellaneous/enumerations.html",[9,0.468,20,0.032,65,0.021,66,0.026,67,0.021,156,2.042,273,4.372,325,4.372,330,3.555,763,2.239,764,3.555,765,4.259,766,5.238,767,4.259,768,5.238,769,4.259,770,5.238,771,5.283,772,5.238,773,4.259,774,4.259,775,5.238,776,4.259,777,4.259,778,4.259,779,4.259,780,4.259,781,4.259,782,4.259,783,4.259,784,4.259]],["title/miscellaneous/functions.html",[763,1.401,785,3.196]],["body/miscellaneous/functions.html",[9,0.543,20,0.028,65,0.024,66,0.028,67,0.024,188,2.652,724,4.127,763,2.599,785,4.127,786,4.944]],["title/index.html",[9,0.293,787,2.665,788,2.665]],["body/index.html",[4,0.308,20,0.032,65,0.018,66,0.024,67,0.018,92,1.158,212,1.938,714,2.676,789,3.687,790,3.687,791,4.781,792,3.687,793,3.687,794,3.687,795,3.687,796,3.687,797,3.687,798,3.687,799,3.687,800,3.687,801,5.306,802,3.687,803,3.687,804,3.687,805,6.068,806,3.687,807,3.687,808,3.687,809,5.961,810,3.687,811,3.687,812,4.781,813,3.687,814,3.687,815,3.687,816,3.687,817,4.781,818,4.781,819,3.687,820,3.687,821,3.687,822,4.781,823,4.781,824,3.687,825,3.687,826,3.687,827,3.687,828,3.687,829,3.077,830,3.687,831,3.687,832,3.687,833,3.687,834,3.687,835,3.687,836,3.687,837,3.687,838,3.687,839,3.687,840,3.687,841,3.687,842,3.687,843,3.687,844,3.687,845,3.687,846,3.687,847,3.687]],["title/modules.html",[184,1.904]],["body/modules.html",[20,0.027,65,0.023,66,0.027,67,0.023,183,2.214,184,2.027,195,2.027,247,2.977,250,2.677,251,2.677,829,5.186,848,6.213,849,6.213,850,6.213]],["title/overview.html",[851,3.622]],["body/overview.html",[2,1.22,20,0.032,65,0.016,66,0.022,67,0.016,70,1.326,140,2.829,182,1.123,183,2.946,184,1.445,185,1.445,186,1.73,187,1.73,188,1.445,189,1.73,190,1.73,191,2.748,192,2.748,193,2.748,194,2.748,195,2.741,196,2.332,197,1.73,198,1.73,207,1.73,214,2.829,247,3.961,248,2.748,249,2.748,250,3.525,251,3.562,384,2.122,389,3.421,466,2.637,483,2.748,485,2.748,589,2.748,590,2.748,591,2.748,679,3.102,689,2.748,690,2.748,692,2.748,851,2.748,852,4.436,853,3.292,854,3.292,855,3.292]],["title/miscellaneous/variables.html",[763,1.401,856,3.196]],["body/miscellaneous/variables.html",[9,0.495,19,0.751,20,0.031,65,0.022,66,0.027,67,0.022,253,3.933,339,3.492,721,3.759,763,2.367,771,3.759,856,3.759,857,4.503,858,4.503,859,4.503,860,5.418,861,4.503,862,4.503,863,4.503,864,4.503,865,4.503,866,4.503,867,4.503,868,4.503,869,4.503,870,4.503,871,4.503,872,4.503]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":345,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["0.1.13",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["0.2.25",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["02/10/2020",{"_index":329,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["02/10/2020'})@isstring()@isnotempty",{"_index":317,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["1",{"_index":855,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["2/10/2020",{"_index":290,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["2/10/2020'})@isnotempty",{"_index":266,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["200",{"_index":104,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["201",{"_index":91,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["3.0.2",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["3600",{"_index":604,"title":{},"body":{"modules/UsersModule.html":{}}}],["4",{"_index":853,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["4.6.1",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":551,"title":{},"body":{"controllers/UsersController.html":{}}}],["401",{"_index":155,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["5",{"_index":852,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.5.4",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":854,"title":{},"body":{"overview.html":{}}}],["9]+\\.)+[a",{"_index":346,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9]{1,3}\\.[0",{"_index":341,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9]{1,3}\\])|(([a",{"_index":342,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["__dirname",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":639,"title":{},"body":{"injectables/UsersService.html":{}}}],["acesso",{"_index":570,"title":{},"body":{"controllers/UsersController.html":{}}}],["acordo",{"_index":670,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["amazing",{"_index":830,"title":{},"body":{"index.html":{}}}],["andwhere('note.animal",{"_index":512,"title":{},"body":{"injectables/NotesService.html":{}}}],["angular",{"_index":800,"title":{},"body":{"index.html":{}}}],["animais",{"_index":119,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["animais'})@get()@apibearerauth('jwt",{"_index":121,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["animal",{"_index":1,"title":{"classes/Animal.html":{}},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"classes/Vaccine.html":{},"coverage.html":{}}}],["animal'})@apiparam({name",{"_index":462,"title":{},"body":{"controllers/NotesController.html":{}}}],["animal'})@apiresponse({status",{"_index":463,"title":{},"body":{"controllers/NotesController.html":{}}}],["animal'})@isstring()@isnotempty",{"_index":269,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{}}}],["animal'})@isstring()@isnotempty()@isin(undefined",{"_index":277,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animal'})@isstring()@isnotempty()@isuuid",{"_index":303,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["animal'})@isstring()@isoptional()@isnotempty",{"_index":379,"title":{},"body":{"classes/GetVaccinesDto.html":{}}}],["animal.'})@apiresponse({status",{"_index":103,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["animal.birthdate",{"_index":229,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["animal.breed",{"_index":232,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["animal.dto",{"_index":143,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["animal.dto.ts",{"_index":261,"title":{},"body":{"classes/CreateAnimalDto.html":{},"coverage.html":{}}}],["animal.dto.ts:13",{"_index":267,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animal.dto.ts:19",{"_index":278,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animal.dto.ts:24",{"_index":270,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animal.dto.ts:30",{"_index":280,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animal.dto.ts:9",{"_index":272,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animal.entity",{"_index":144,"title":{},"body":{"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{}}}],["animal.name",{"_index":228,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["animal.notes",{"_index":438,"title":{},"body":{"classes/Note.html":{}}}],["animal.species",{"_index":230,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["animal.user",{"_index":234,"title":{},"body":{"injectables/AnimalsService.html":{},"classes/User.html":{}}}],["animal.vaccines",{"_index":656,"title":{},"body":{"classes/Vaccine.html":{}}}],["animal_id_animal",{"_index":416,"title":{},"body":{"classes/Note.html":{},"classes/Vaccine.html":{}}}],["animalid",{"_index":298,"title":{},"body":{"classes/CreateNoteDto.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["animalrepository",{"_index":216,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["animals",{"_index":73,"title":{},"body":{"controllers/AnimalsController.html":{},"classes/User.html":{}}}],["animals.controller",{"_index":201,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["animals.service",{"_index":141,"title":{},"body":{"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{}}}],["animals/animals.module",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["animalscontroller",{"_index":69,"title":{"controllers/AnimalsController.html":{}},"body":{"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"coverage.html":{}}}],["animalservice",{"_index":492,"title":{},"body":{"injectables/NotesService.html":{}}}],["animalsmodule",{"_index":183,"title":{"modules/AnimalsModule.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/VaccinesModule.html":{},"modules.html":{},"overview.html":{}}}],["animalspecies",{"_index":273,"title":{},"body":{"classes/CreateAnimalDto.html":{},"miscellaneous/enumerations.html":{}}}],["animalspecies.gato",{"_index":292,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animalspecies.nao_informar",{"_index":293,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animalspecies.outro",{"_index":294,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animalsservice",{"_index":140,"title":{"injectables/AnimalsService.html":{}},"body":{"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"injectables/NotesService.html":{},"coverage.html":{},"overview.html":{}}}],["apibearerauth",{"_index":145,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/VaccinesController.html":{}}}],["apibearerauth('jwt",{"_index":164,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/VaccinesController.html":{}}}],["apioperation",{"_index":146,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["apioperation({summary",{"_index":82,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["apiparam",{"_index":147,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":281,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{}}}],["apiproperty({description",{"_index":262,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{}}}],["apipropertyoptional",{"_index":382,"title":{},"body":{"classes/GetVaccinesDto.html":{}}}],["apipropertyoptional({description",{"_index":378,"title":{},"body":{"classes/GetVaccinesDto.html":{}}}],["apiresponse",{"_index":148,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["apitags",{"_index":149,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["apitags('animais",{"_index":153,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["apitags('notas",{"_index":470,"title":{},"body":{"controllers/NotesController.html":{}}}],["apitags('usuários",{"_index":576,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('vacinas",{"_index":681,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["app",{"_index":807,"title":{},"body":{"index.html":{}}}],["applications",{"_index":797,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":247,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["após",{"_index":367,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["assinatura",{"_index":527,"title":{},"body":{"classes/User.html":{}}}],["async",{"_index":209,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{}}}],["authguard",{"_index":151,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/VaccinesController.html":{}}}],["author",{"_index":840,"title":{},"body":{"index.html":{}}}],["autorizado",{"_index":157,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/VaccinesController.html":{}}}],["await",{"_index":235,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{}}}],["backers",{"_index":831,"title":{},"body":{"index.html":{}}}],["banco",{"_index":89,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["banho",{"_index":327,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["banho'})@isstring()@isnotempty",{"_index":321,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["baseentity",{"_index":8,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["bcrypt",{"_index":532,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.gensalt",{"_index":626,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(password",{"_index":536,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["birthdate",{"_index":11,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{}}}],["body",{"_index":132,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["bootstrap",{"_index":188,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":12,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"classes/Vaccine.html":{},"injectables/VaccinesService.html":{}}}],["breed.tolowercase",{"_index":233,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["browse",{"_index":850,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":848,"title":{},"body":{"modules.html":{}}}],["building",{"_index":792,"title":{},"body":{"index.html":{}}}],["cachorro",{"_index":770,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cadastrada",{"_index":665,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["cadastradas",{"_index":275,"title":{},"body":{"classes/CreateAnimalDto.html":{},"controllers/VaccinesController.html":{}}}],["cadastradas'})@apiresponse({status",{"_index":669,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["cadastrado",{"_index":163,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{}}}],["cadastrado'})@post()@apibearerauth('jwt')@usepipes(validationpipe",{"_index":94,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["cadastrado.'})@apiparam({name",{"_index":558,"title":{},"body":{"controllers/UsersController.html":{}}}],["cadastrado.'})@apiresponse({status",{"_index":550,"title":{},"body":{"controllers/UsersController.html":{}}}],["cadastrados",{"_index":124,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{}}}],["cadastrados'})@apiresponse({status",{"_index":120,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["cadastrados'})@get",{"_index":566,"title":{},"body":{"controllers/UsersController.html":{}}}],["cadastro",{"_index":85,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{}}}],["cascade",{"_index":62,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/Vaccine.html":{}}}],["cascade'})@joincolumn({name",{"_index":43,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/Vaccine.html":{}}}],["catch",{"_index":630,"title":{},"body":{"injectables/UsersService.html":{}}}],["class",{"_index":0,"title":{"classes/Animal.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Animal.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{},"overview.html":{}}}],["cluster_animalsmodule",{"_index":191,"title":{},"body":{"modules/AnimalsModule.html":{},"overview.html":{}}}],["cluster_animalsmodule_exports",{"_index":192,"title":{},"body":{"modules/AnimalsModule.html":{},"overview.html":{}}}],["cluster_animalsmodule_imports",{"_index":194,"title":{},"body":{"modules/AnimalsModule.html":{},"overview.html":{}}}],["cluster_animalsmodule_providers",{"_index":193,"title":{},"body":{"modules/AnimalsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_notesmodule",{"_index":483,"title":{},"body":{"modules/NotesModule.html":{},"overview.html":{}}}],["cluster_notesmodule_imports",{"_index":484,"title":{},"body":{"modules/NotesModule.html":{}}}],["cluster_notesmodule_providers",{"_index":485,"title":{},"body":{"modules/NotesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":589,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":591,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":590,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_vaccinesmodule",{"_index":689,"title":{},"body":{"modules/VaccinesModule.html":{},"overview.html":{}}}],["cluster_vaccinesmodule_exports",{"_index":692,"title":{},"body":{"modules/VaccinesModule.html":{},"overview.html":{}}}],["cluster_vaccinesmodule_imports",{"_index":691,"title":{},"body":{"modules/VaccinesModule.html":{}}}],["cluster_vaccinesmodule_providers",{"_index":690,"title":{},"body":{"modules/VaccinesModule.html":{},"overview.html":{}}}],["column",{"_index":51,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["column({name",{"_index":23,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["com",{"_index":105,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{}}}],["comprar",{"_index":310,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["conectados",{"_index":437,"title":{},"body":{"classes/Note.html":{}}}],["config/typeorm.config",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":620,"title":{},"body":{"injectables/UsersService.html":{}}}],["conflictexception(`j",{"_index":633,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log('request",{"_index":169,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["console.log(error",{"_index":632,"title":{},"body":{"injectables/UsersService.html":{}}}],["const",{"_index":227,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{}}}],["constructor",{"_index":210,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{}}}],["constructor(animalrepository",{"_index":211,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["constructor(noterepository",{"_index":491,"title":{},"body":{"injectables/NotesService.html":{}}}],["constructor(private",{"_index":160,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["constructor(userrepository",{"_index":392,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(vaccinerepository",{"_index":697,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["controller",{"_index":68,"title":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{},"coverage.html":{}}}],["controller('animals",{"_index":158,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["controller('notes",{"_index":471,"title":{},"body":{"controllers/NotesController.html":{}}}],["controller('users",{"_index":577,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('vaccines",{"_index":682,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["controllers",{"_index":70,"title":{},"body":{"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["coverage",{"_index":714,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createanimal",{"_index":75,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["createanimal(@body",{"_index":166,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["createanimal(createanimaldto",{"_index":80,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["createanimaldto",{"_index":81,"title":{"classes/CreateAnimalDto.html":{}},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"coverage.html":{}}}],["createdatecolumn",{"_index":432,"title":{},"body":{"classes/Note.html":{}}}],["createdatecolumn({name",{"_index":418,"title":{},"body":{"classes/Note.html":{}}}],["createnote",{"_index":441,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["createnote(@body",{"_index":472,"title":{},"body":{"controllers/NotesController.html":{}}}],["createnote(createnotedto",{"_index":445,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["createnotedto",{"_index":295,"title":{"classes/CreateNoteDto.html":{}},"body":{"classes/CreateNoteDto.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"coverage.html":{}}}],["createuser",{"_index":542,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser(@body(validationpipe",{"_index":582,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(createuserdto",{"_index":547,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":335,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createvaccine",{"_index":659,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["createvaccine(@body(validationpipe",{"_index":687,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["createvaccine(createvaccinedto",{"_index":661,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["createvaccinedto",{"_index":361,"title":{"classes/CreateVaccineDto.html":{}},"body":{"classes/CreateVaccineDto.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{},"coverage.html":{}}}],["createvaccinedto.breed",{"_index":711,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["createvaccinedto.monthsafterbirth",{"_index":712,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["createvaccinedto.name",{"_index":709,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["createvaccinedto.species",{"_index":710,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["creationdate",{"_index":415,"title":{},"body":{"classes/Note.html":{}}}],["cria",{"_index":446,"title":{},"body":{"controllers/NotesController.html":{}}}],["da",{"_index":306,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/CreateVaccineDto.html":{}}}],["dado",{"_index":106,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["dados",{"_index":162,"title":{},"body":{"controllers/AnimalsController.html":{},"classes/Note.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["dados'})@apiresponse({status",{"_index":664,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["dados.'})@apiparam({name",{"_index":102,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["dados.'})@apiresponse({status",{"_index":90,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{}}}],["dar",{"_index":320,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["data",{"_index":263,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{}}}],["data_criacao",{"_index":419,"title":{},"body":{"classes/Note.html":{}}}],["data_nascimento",{"_index":24,"title":{},"body":{"classes/Animal.html":{}}}],["data_nota",{"_index":427,"title":{},"body":{"classes/Note.html":{}}}],["database",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":316,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/Note.html":{}}}],["day",{"_index":777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["de",{"_index":86,"title":{},"body":{"controllers/AnimalsController.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{}}}],["declarations",{"_index":187,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["decorators",{"_index":22,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{}}}],["default",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":599,"title":{},"body":{"modules/UsersModule.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["delete",{"_index":136,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":179,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["deleteanimal",{"_index":76,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["deleteanimal(@param('id",{"_index":180,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["deleteanimal(id",{"_index":100,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["deletenote",{"_index":442,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["deletenote(@param('id",{"_index":481,"title":{},"body":{"controllers/NotesController.html":{}}}],["deletenote(id",{"_index":452,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["deleteuser",{"_index":543,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@param('id",{"_index":587,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(id",{"_index":557,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":185,"title":{"dependencies.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descricao",{"_index":421,"title":{},"body":{"classes/Note.html":{}}}],["description",{"_index":92,"title":{},"body":{"controllers/AnimalsController.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{},"index.html":{}}}],["descrição",{"_index":305,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["development",{"_index":808,"title":{},"body":{"index.html":{}}}],["dia",{"_index":330,"title":{},"body":{"classes/CreateNoteDto.html":{},"miscellaneous/enumerations.html":{}}}],["dia'})@isstring()@isnotempty()@isin(undefined",{"_index":314,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["documentation",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":142,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["dto/get",{"_index":676,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["e2e",{"_index":819,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":793,"title":{},"body":{"index.html":{}}}],["email",{"_index":338,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["encontrada",{"_index":516,"title":{},"body":{"injectables/NotesService.html":{}}}],["encontrado",{"_index":245,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/UsersService.html":{}}}],["entities",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":49,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["entity('animal",{"_index":59,"title":{},"body":{"classes/Animal.html":{}}}],["entity('nota",{"_index":434,"title":{},"body":{"classes/Note.html":{}}}],["entity('usuario",{"_index":533,"title":{},"body":{"classes/User.html":{}}}],["entity('vacina",{"_index":655,"title":{},"body":{"classes/Vaccine.html":{}}}],["entity.{js,ts",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum/animal",{"_index":287,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["enumerations",{"_index":764,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviados",{"_index":553,"title":{},"body":{"controllers/UsersController.html":{}}}],["error",{"_index":631,"title":{},"body":{"injectables/UsersService.html":{}}}],["especie",{"_index":373,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["especie_animal",{"_index":39,"title":{},"body":{"classes/Animal.html":{},"classes/Vaccine.html":{}}}],["espécie",{"_index":276,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{}}}],["espécies",{"_index":274,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["estão",{"_index":554,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["example",{"_index":265,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{}}}],["exclui",{"_index":101,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{}}}],["excluido",{"_index":178,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["excluido.'})@delete(':id')@apibearerauth('jwt",{"_index":108,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["exclusão",{"_index":436,"title":{},"body":{"classes/Note.html":{},"controllers/UsersController.html":{}}}],["existe",{"_index":634,"title":{},"body":{"injectables/UsersService.html":{}}}],["expiresin",{"_index":603,"title":{},"body":{"modules/UsersModule.html":{}}}],["export",{"_index":60,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{}}}],["exports",{"_index":190,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["express",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Animal.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["extractjwt",{"_index":400,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":410,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["faz",{"_index":83,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{}}}],["filterdto",{"_index":673,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["filterdto.breed",{"_index":706,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["filterdto.species",{"_index":704,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["foi",{"_index":107,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{}}}],["fornecidos",{"_index":638,"title":{},"body":{"injectables/UsersService.html":{}}}],["found",{"_index":513,"title":{},"body":{"injectables/NotesService.html":{},"injectables/UsersService.html":{}}}],["fraca",{"_index":354,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":791,"title":{},"body":{"index.html":{}}}],["frequencia_de_nota",{"_index":423,"title":{},"body":{"classes/Note.html":{}}}],["frequency",{"_index":299,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/Note.html":{},"injectables/NotesService.html":{}}}],["frequency.enum",{"_index":326,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["frequency.enum.ts",{"_index":768,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["function",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":785,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gato",{"_index":772,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get('/user/:userid",{"_index":171,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["get(':id",{"_index":175,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["get('animal/:animalid",{"_index":475,"title":{},"body":{"controllers/NotesController.html":{}}}],["getanimalbyid",{"_index":77,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["getanimalbyid(@param('id",{"_index":176,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["getanimalbyid(id",{"_index":110,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["getanimals",{"_index":78,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["getmany",{"_index":240,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/NotesService.html":{}}}],["getnotebyid",{"_index":443,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["getnotebyid(@param('id",{"_index":478,"title":{},"body":{"controllers/NotesController.html":{}}}],["getnotebyid(id",{"_index":457,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["getnotes",{"_index":444,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["getnotes(@param('animalid",{"_index":476,"title":{},"body":{"controllers/NotesController.html":{}}}],["getnotes(animalid",{"_index":498,"title":{},"body":{"injectables/NotesService.html":{}}}],["getnotes(id",{"_index":460,"title":{},"body":{"controllers/NotesController.html":{}}}],["getting",{"_index":787,"title":{"index.html":{}},"body":{}}],["getuseranimals",{"_index":79,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["getuseranimals(@param('userid",{"_index":172,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["getuseranimals(userid",{"_index":123,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["getuserbyid",{"_index":544,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuserbyid(@param('id",{"_index":579,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(id",{"_index":562,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getusers",{"_index":545,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getvaccines",{"_index":660,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["getvaccines(@query(validationpipe",{"_index":684,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["getvaccines(filterdto",{"_index":668,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["getvaccinesdto",{"_index":375,"title":{"classes/GetVaccinesDto.html":{}},"body":{"classes/GetVaccinesDto.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{},"coverage.html":{}}}],["grow",{"_index":826,"title":{},"body":{"index.html":{}}}],["hash",{"_index":535,"title":{},"body":{"classes/User.html":{}}}],["heavily",{"_index":798,"title":{},"body":{"index.html":{}}}],["here",{"_index":837,"title":{},"body":{"index.html":{}}}],["host",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":844,"title":{},"body":{"index.html":{}}}],["id",{"_index":13,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{}}}],["id'})@apiparam({name",{"_index":453,"title":{},"body":{"controllers/NotesController.html":{}}}],["id.'})@apiparam({name",{"_index":111,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{}}}],["id.'})@apiresponse({status",{"_index":127,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{}}}],["id.'})@get(':id')@apibearerauth('jwt",{"_index":114,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["id.'})@post()@apibearerauth('jwt')@usepipes(validationpipe",{"_index":450,"title":{},"body":{"controllers/NotesController.html":{}}}],["id_animal",{"_index":31,"title":{},"body":{"classes/Animal.html":{}}}],["id_nota",{"_index":425,"title":{},"body":{"classes/Note.html":{}}}],["id_usuario",{"_index":523,"title":{},"body":{"classes/User.html":{}}}],["id_vacina",{"_index":648,"title":{},"body":{"classes/Vaccine.html":{}}}],["identificação",{"_index":559,"title":{},"body":{"controllers/UsersController.html":{}}}],["identifier",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":48,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{}}}],["imports",{"_index":200,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{}}}],["incorretos",{"_index":581,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["incorretos.'})@post('login",{"_index":572,"title":{},"body":{"controllers/UsersController.html":{}}}],["incorretos.'})@post()@usepipes(validationpipe",{"_index":555,"title":{},"body":{"controllers/UsersController.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{}}}],["informar",{"_index":774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["injectable",{"_index":206,"title":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{}},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{},"coverage.html":{}}}],["injectables",{"_index":207,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{},"overview.html":{}}}],["injectrepository",{"_index":223,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{}}}],["injectrepository(animal",{"_index":225,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["injectrepository(note",{"_index":501,"title":{},"body":{"injectables/NotesService.html":{}}}],["injectrepository(user",{"_index":407,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["injectrepository(vaccine",{"_index":702,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["inspired",{"_index":799,"title":{},"body":{"index.html":{}}}],["installation",{"_index":804,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":806,"title":{},"body":{"index.html":{}}}],["interface",{"_index":384,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":386,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["ir",{"_index":308,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["isin",{"_index":284,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{}}}],["isin([animalspecies.cachorro",{"_index":291,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["isin([notefrequency.day",{"_index":331,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["isnotempty",{"_index":283,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{}}}],["isoptional",{"_index":383,"title":{},"body":{"classes/GetVaccinesDto.html":{}}}],["isstring",{"_index":282,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{}}}],["isuuid",{"_index":285,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{}}}],["join",{"_index":833,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":54,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/Vaccine.html":{}}}],["jwt",{"_index":403,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":597,"title":{},"body":{"modules/UsersModule.html":{}}}],["jwtfromrequest",{"_index":409,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":595,"title":{},"body":{"modules/UsersModule.html":{}}}],["jwtmodule.register",{"_index":600,"title":{},"body":{"modules/UsersModule.html":{}}}],["jwtpayload",{"_index":385,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["jwtservice",{"_index":608,"title":{},"body":{"injectables/UsersService.html":{}}}],["jwtstrategy",{"_index":389,"title":{"injectables/JwtStrategy.html":{}},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":841,"title":{},"body":{"index.html":{}}}],["leftjoinandselect('animal.user",{"_index":239,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["leftjoinandselect('note.animal",{"_index":511,"title":{},"body":{"injectables/NotesService.html":{}}}],["legend",{"_index":186,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["length",{"_index":525,"title":{},"body":{"classes/User.html":{}}}],["license",{"_index":847,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":823,"title":{},"body":{"index.html":{}}}],["lista",{"_index":116,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["local",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["localhost",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":546,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["login(@body(validationpipe",{"_index":585,"title":{},"body":{"controllers/UsersController.html":{}}}],["login(createuserdto",{"_index":568,"title":{},"body":{"controllers/UsersController.html":{}}}],["login(loginuserdto",{"_index":614,"title":{},"body":{"injectables/UsersService.html":{}}}],["loginuserdto",{"_index":616,"title":{},"body":{"injectables/UsersService.html":{}}}],["manytoone",{"_index":52,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/Vaccine.html":{}}}],["manytoone(undefined",{"_index":41,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/Vaccine.html":{}}}],["matches",{"_index":356,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":360,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":358,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":66,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mercado",{"_index":309,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["meses",{"_index":366,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["meses_apos_nascimento",{"_index":650,"title":{},"body":{"classes/Vaccine.html":{}}}],["message",{"_index":352,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":74,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["miscellaneous",{"_index":763,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":822,"title":{},"body":{"index.html":{}}}],["mode",{"_index":812,"title":{},"body":{"index.html":{}}}],["module",{"_index":182,"title":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["modules",{"_index":184,"title":{"modules.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":780,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["monthsafterbirth",{"_index":364,"title":{},"body":{"classes/CreateVaccineDto.html":{},"classes/Vaccine.html":{},"injectables/VaccinesService.html":{}}}],["more",{"_index":836,"title":{},"body":{"index.html":{}}}],["muito",{"_index":353,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["myśliwiec",{"_index":842,"title":{},"body":{"index.html":{}}}],["mês",{"_index":781,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["name",{"_index":14,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["nao",{"_index":783,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nao_informar",{"_index":773,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nascimento",{"_index":264,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{}}}],["nascimento'})@isnotempty",{"_index":368,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["nest",{"_index":801,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":846,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":139,"title":{},"body":{"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":596,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":152,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"modules/UsersModule.html":{},"controllers/VaccinesController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":150,"title":{},"body":{"controllers/AnimalsController.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":203,"title":{},"body":{"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"dependencies.html":{}}}],["new",{"_index":173,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":790,"title":{},"body":{"index.html":{}}}],["nome",{"_index":33,"title":{},"body":{"classes/Animal.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{}}}],["nome_vacina",{"_index":652,"title":{},"body":{"classes/Vaccine.html":{}}}],["none",{"_index":782,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nota",{"_index":307,"title":{},"body":{"classes/CreateNoteDto.html":{},"controllers/NotesController.html":{}}}],["nota'})@apiresponse({status",{"_index":454,"title":{},"body":{"controllers/NotesController.html":{}}}],["nota'})@get(':id')@apibearerauth('jwt",{"_index":458,"title":{},"body":{"controllers/NotesController.html":{}}}],["notas",{"_index":474,"title":{},"body":{"controllers/NotesController.html":{}}}],["notas'})@get('animal/:animalid')@apibearerauth('jwt",{"_index":464,"title":{},"body":{"controllers/NotesController.html":{}}}],["note",{"_index":35,"title":{"classes/Note.html":{}},"body":{"classes/Animal.html":{},"classes/CreateNoteDto.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"coverage.html":{}}}],["note.animal",{"_index":64,"title":{},"body":{"classes/Animal.html":{},"injectables/NotesService.html":{}}}],["note.controller",{"_index":487,"title":{},"body":{"modules/NotesModule.html":{}}}],["note.description",{"_index":506,"title":{},"body":{"injectables/NotesService.html":{}}}],["note.dto",{"_index":468,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["note.dto.ts",{"_index":297,"title":{},"body":{"classes/CreateNoteDto.html":{},"coverage.html":{}}}],["note.dto.ts:14",{"_index":324,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:19",{"_index":312,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:24",{"_index":318,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:30",{"_index":315,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:36",{"_index":304,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:9",{"_index":322,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.entity",{"_index":469,"title":{},"body":{"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{}}}],["note.frequency",{"_index":508,"title":{},"body":{"injectables/NotesService.html":{}}}],["note.notedate",{"_index":507,"title":{},"body":{"injectables/NotesService.html":{}}}],["note.notetype",{"_index":503,"title":{},"body":{"injectables/NotesService.html":{}}}],["note.service",{"_index":467,"title":{},"body":{"controllers/NotesController.html":{},"modules/NotesModule.html":{}}}],["note.title",{"_index":505,"title":{},"body":{"injectables/NotesService.html":{}}}],["notedate",{"_index":300,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/Note.html":{},"injectables/NotesService.html":{}}}],["notefrequency",{"_index":325,"title":{},"body":{"classes/CreateNoteDto.html":{},"miscellaneous/enumerations.html":{}}}],["notefrequency.month",{"_index":333,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["notefrequency.none",{"_index":334,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["notefrequency.week",{"_index":332,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["noterepository",{"_index":494,"title":{},"body":{"injectables/NotesService.html":{}}}],["notes",{"_index":15,"title":{},"body":{"classes/Animal.html":{},"controllers/NotesController.html":{}}}],["notes/note.module",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["notescontroller",{"_index":439,"title":{"controllers/NotesController.html":{}},"body":{"controllers/NotesController.html":{},"modules/NotesModule.html":{},"coverage.html":{}}}],["notesmodule",{"_index":250,"title":{"modules/NotesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules.html":{},"overview.html":{}}}],["notesservice",{"_index":466,"title":{"injectables/NotesService.html":{}},"body":{"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"coverage.html":{},"overview.html":{}}}],["notetype",{"_index":301,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/Note.html":{},"injectables/NotesService.html":{}}}],["notetype.tolowercase",{"_index":504,"title":{},"body":{"injectables/NotesService.html":{}}}],["notfoundexception",{"_index":222,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('usuário",{"_index":623,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception(`nota",{"_index":515,"title":{},"body":{"injectables/NotesService.html":{}}}],["notfoundexception(`o",{"_index":244,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["nova",{"_index":447,"title":{},"body":{"controllers/NotesController.html":{}}}],["novas",{"_index":662,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["novo",{"_index":88,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{}}}],["npm",{"_index":805,"title":{},"body":{"index.html":{}}}],["null",{"_index":642,"title":{},"body":{"injectables/UsersService.html":{}}}],["number",{"_index":647,"title":{},"body":{"classes/Vaccine.html":{}}}],["não",{"_index":156,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"miscellaneous/enumerations.html":{}}}],["o",{"_index":84,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["obriga",{"_index":435,"title":{},"body":{"classes/Note.html":{}}}],["omar",{"_index":289,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["omar'})@isstring()@isnotempty",{"_index":271,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["ondelete",{"_index":42,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/Vaccine.html":{}}}],["onetomany",{"_index":53,"title":{},"body":{"classes/Animal.html":{},"classes/User.html":{}}}],["onetomany(undefined",{"_index":36,"title":{},"body":{"classes/Animal.html":{},"classes/User.html":{}}}],["open",{"_index":824,"title":{},"body":{"index.html":{}}}],["optional",{"_index":97,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["os",{"_index":118,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["ou",{"_index":552,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":198,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["outro",{"_index":775,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overview",{"_index":851,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":733,"title":{"dependencies.html":{}},"body":{}}],["para",{"_index":448,"title":{},"body":{"controllers/NotesController.html":{}}}],["param",{"_index":135,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":96,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["parseuuidpipe",{"_index":137,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["parâmentros",{"_index":683,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["parâmentros'})@get()@apibearerauth('jwt",{"_index":671,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["passport",{"_index":402,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":594,"title":{},"body":{"modules/UsersModule.html":{}}}],["passportmodule.register",{"_index":598,"title":{},"body":{"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":399,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":406,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":339,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":397,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["payload.interface",{"_index":404,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["payload.interface.ts",{"_index":388,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["pelo",{"_index":125,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["pg",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":834,"title":{},"body":{"index.html":{}}}],["port",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["possui",{"_index":113,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["post",{"_index":131,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["post('login",{"_index":584,"title":{},"body":{"controllers/UsersController.html":{}}}],["postgres",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":72,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["primarygeneratedcolumn",{"_index":50,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":30,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["private",{"_index":226,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{}}}],["production",{"_index":814,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":789,"title":{},"body":{"index.html":{}}}],["project",{"_index":825,"title":{},"body":{"index.html":{}}}],["promise",{"_index":99,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/Animal.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["providers",{"_index":189,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["que",{"_index":112,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["query",{"_index":674,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["query.andwhere('vaccines.species",{"_index":705,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["query.getmany",{"_index":707,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["raca",{"_index":28,"title":{},"body":{"classes/Animal.html":{},"classes/Vaccine.html":{}}}],["raça",{"_index":268,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{}}}],["ração",{"_index":328,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["ração'})@isstring()@isnotempty",{"_index":311,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["read",{"_index":835,"title":{},"body":{"index.html":{}}}],["realiza",{"_index":548,"title":{},"body":{"controllers/UsersController.html":{}}}],["reflect",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["repetir",{"_index":784,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["repetição",{"_index":313,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["repository",{"_index":212,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{},"index.html":{}}}],["reset",{"_index":197,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["result",{"_index":65,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":67,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":93,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["return",{"_index":167,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["returns",{"_index":98,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["rimraf",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":809,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":713,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["scalable",{"_index":794,"title":{},"body":{"index.html":{}}}],["secret",{"_index":601,"title":{},"body":{"modules/UsersModule.html":{}}}],["secretorkey",{"_index":411,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["semana",{"_index":779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["senha",{"_index":349,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["server",{"_index":795,"title":{},"body":{"index.html":{}}}],["side",{"_index":796,"title":{},"body":{"index.html":{}}}],["signature",{"_index":519,"title":{},"body":{"classes/User.html":{}}}],["signoptions",{"_index":602,"title":{},"body":{"modules/UsersModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"index.html":{}}}],["species",{"_index":16,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"classes/Vaccine.html":{},"injectables/VaccinesService.html":{}}}],["species.enum",{"_index":288,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["species.enum.ts",{"_index":766,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species.tolowercase",{"_index":231,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["sponsors",{"_index":828,"title":{},"body":{"index.html":{}}}],["src/.../animal",{"_index":765,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":786,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../note",{"_index":767,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../typeorm.config.ts",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/animals/animal.entity",{"_index":433,"title":{},"body":{"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["src/animals/animal.entity.ts",{"_index":6,"title":{},"body":{"classes/Animal.html":{},"coverage.html":{}}}],["src/animals/animal.entity.ts:12",{"_index":34,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animal.entity.ts:15",{"_index":27,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animal.entity.ts:18",{"_index":40,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animal.entity.ts:21",{"_index":29,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animal.entity.ts:25",{"_index":45,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animal.entity.ts:28",{"_index":47,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animal.entity.ts:31",{"_index":38,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animal.entity.ts:9",{"_index":32,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animals.controller.ts",{"_index":71,"title":{},"body":{"controllers/AnimalsController.html":{},"coverage.html":{}}}],["src/animals/animals.controller.ts:20",{"_index":95,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["src/animals/animals.controller.ts:28",{"_index":122,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["src/animals/animals.controller.ts:37",{"_index":129,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["src/animals/animals.controller.ts:46",{"_index":115,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["src/animals/animals.controller.ts:55",{"_index":109,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["src/animals/animals.module",{"_index":488,"title":{},"body":{"modules/NotesModule.html":{},"modules/VaccinesModule.html":{}}}],["src/animals/animals.module.ts",{"_index":199,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["src/animals/animals.service",{"_index":500,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/animals/animals.service.ts",{"_index":208,"title":{},"body":{"injectables/AnimalsService.html":{},"coverage.html":{}}}],["src/animals/animals.service.ts:17",{"_index":217,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/animals/animals.service.ts:30",{"_index":220,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/animals/animals.service.ts:36",{"_index":221,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/animals/animals.service.ts:43",{"_index":219,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/animals/animals.service.ts:49",{"_index":218,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/animals/animals.service.ts:9",{"_index":215,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/animals/dto/create",{"_index":260,"title":{},"body":{"classes/CreateAnimalDto.html":{},"coverage.html":{}}}],["src/animals/enum/animal",{"_index":769,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/typeorm.config.ts",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/notes/dto/create",{"_index":296,"title":{},"body":{"classes/CreateNoteDto.html":{},"coverage.html":{}}}],["src/notes/note",{"_index":776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/notes/note.controller.ts",{"_index":440,"title":{},"body":{"controllers/NotesController.html":{},"coverage.html":{}}}],["src/notes/note.controller.ts:20",{"_index":451,"title":{},"body":{"controllers/NotesController.html":{}}}],["src/notes/note.controller.ts:29",{"_index":465,"title":{},"body":{"controllers/NotesController.html":{}}}],["src/notes/note.controller.ts:38",{"_index":459,"title":{},"body":{"controllers/NotesController.html":{}}}],["src/notes/note.controller.ts:47",{"_index":456,"title":{},"body":{"controllers/NotesController.html":{}}}],["src/notes/note.entity",{"_index":58,"title":{},"body":{"classes/Animal.html":{}}}],["src/notes/note.entity.ts",{"_index":414,"title":{},"body":{"classes/Note.html":{},"coverage.html":{}}}],["src/notes/note.entity.ts:10",{"_index":429,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.entity.ts:13",{"_index":431,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.entity.ts:16",{"_index":422,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.entity.ts:19",{"_index":420,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.entity.ts:22",{"_index":428,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.entity.ts:25",{"_index":424,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.entity.ts:30",{"_index":417,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.entity.ts:7",{"_index":426,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.module.ts",{"_index":486,"title":{},"body":{"modules/NotesModule.html":{}}}],["src/notes/note.service.ts",{"_index":490,"title":{},"body":{"injectables/NotesService.html":{},"coverage.html":{}}}],["src/notes/note.service.ts:17",{"_index":495,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/notes/note.service.ts:33",{"_index":499,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/notes/note.service.ts:41",{"_index":497,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/notes/note.service.ts:49",{"_index":496,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/notes/note.service.ts:9",{"_index":493,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/users/dto/create",{"_index":336,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/jwt",{"_index":387,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/users/jwt.strategy.ts",{"_index":390,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/users/jwt.strategy.ts:10",{"_index":393,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/users/jwt.strategy.ts:21",{"_index":396,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/users/user.entity",{"_index":56,"title":{},"body":{"classes/Animal.html":{}}}],["src/users/user.entity.ts",{"_index":518,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:12",{"_index":522,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:15",{"_index":526,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:18",{"_index":528,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:21",{"_index":521,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:23",{"_index":530,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:9",{"_index":524,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":540,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:15",{"_index":567,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:23",{"_index":564,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:32",{"_index":556,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:40",{"_index":573,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":561,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":204,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/NotesModule.html":{},"modules/VaccinesModule.html":{}}}],["src/users/users.module.ts",{"_index":592,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":224,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/users/users.service.ts",{"_index":606,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":609,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":613,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":612,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":610,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:50",{"_index":615,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:63",{"_index":618,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:74",{"_index":611,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/vaccines/dto/create",{"_index":362,"title":{},"body":{"classes/CreateVaccineDto.html":{},"coverage.html":{}}}],["src/vaccines/dto/get",{"_index":376,"title":{},"body":{"classes/GetVaccinesDto.html":{},"coverage.html":{}}}],["src/vaccines/vaccine.entity",{"_index":57,"title":{},"body":{"classes/Animal.html":{}}}],["src/vaccines/vaccine.entity.ts",{"_index":644,"title":{},"body":{"classes/Vaccine.html":{},"coverage.html":{}}}],["src/vaccines/vaccine.entity.ts:11",{"_index":653,"title":{},"body":{"classes/Vaccine.html":{}}}],["src/vaccines/vaccine.entity.ts:14",{"_index":654,"title":{},"body":{"classes/Vaccine.html":{}}}],["src/vaccines/vaccine.entity.ts:17",{"_index":646,"title":{},"body":{"classes/Vaccine.html":{}}}],["src/vaccines/vaccine.entity.ts:20",{"_index":651,"title":{},"body":{"classes/Vaccine.html":{}}}],["src/vaccines/vaccine.entity.ts:24",{"_index":645,"title":{},"body":{"classes/Vaccine.html":{}}}],["src/vaccines/vaccine.entity.ts:8",{"_index":649,"title":{},"body":{"classes/Vaccine.html":{}}}],["src/vaccines/vaccines.controller.ts",{"_index":658,"title":{},"body":{"controllers/VaccinesController.html":{},"coverage.html":{}}}],["src/vaccines/vaccines.controller.ts:21",{"_index":672,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["src/vaccines/vaccines.controller.ts:29",{"_index":667,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["src/vaccines/vaccines.module.ts",{"_index":693,"title":{},"body":{"modules/VaccinesModule.html":{}}}],["src/vaccines/vaccines.service.ts",{"_index":696,"title":{},"body":{"injectables/VaccinesService.html":{},"coverage.html":{}}}],["src/vaccines/vaccines.service.ts:15",{"_index":701,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["src/vaccines/vaccines.service.ts:33",{"_index":700,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["src/vaccines/vaccines.service.ts:9",{"_index":698,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["start",{"_index":810,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":813,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":815,"title":{},"body":{"index.html":{}}}],["started",{"_index":788,"title":{"index.html":{}},"body":{}}],["starter",{"_index":803,"title":{},"body":{"index.html":{}}}],["statements",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":154,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["stay",{"_index":838,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":401,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":21,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{}}}],["sucesso",{"_index":686,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["sucesso.'})@post()@apibearerauth('jwt",{"_index":666,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["summary",{"_index":161,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["super",{"_index":408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":829,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":849,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["tcc",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":818,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":821,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":820,"title":{},"body":{"index.html":{}}}],["teste123",{"_index":359,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["teste123...'})@isstring()@isnotempty()@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":350,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["tests",{"_index":817,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":827,"title":{},"body":{"index.html":{}}}],["this.animalrepository.create(animal).save",{"_index":237,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["this.animalrepository.createquerybuilder('animal",{"_index":238,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["this.animalrepository.delete(id",{"_index":246,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["this.animalrepository.findone(id",{"_index":242,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["this.animalservice.getanimalbyid(animalid",{"_index":502,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.animalsservice.createanimal(createanimaldto",{"_index":168,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["this.animalsservice.deleteanimal(id",{"_index":181,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["this.animalsservice.getanimalbyid(id",{"_index":177,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["this.animalsservice.getanimals",{"_index":170,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["this.animalsservice.getuseranimals(userid",{"_index":174,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":640,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.noterepository.create(note).save",{"_index":509,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.noterepository.createquerybuilder('note",{"_index":510,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.noterepository.delete(id",{"_index":517,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.noterepository.findone(id",{"_index":514,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.notesservice.createnote(createnotedto",{"_index":473,"title":{},"body":{"controllers/NotesController.html":{}}}],["this.notesservice.deletenote(id",{"_index":482,"title":{},"body":{"controllers/NotesController.html":{}}}],["this.notesservice.getnotebyid(id",{"_index":479,"title":{},"body":{"controllers/NotesController.html":{}}}],["this.notesservice.getnotes(id",{"_index":477,"title":{},"body":{"controllers/NotesController.html":{}}}],["this.password",{"_index":538,"title":{},"body":{"classes/User.html":{}}}],["this.signature",{"_index":537,"title":{},"body":{"classes/User.html":{}}}],["this.userrepository.create(user).save",{"_index":629,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.createquerybuilder('user').getmany",{"_index":621,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.delete(id",{"_index":643,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":413,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["this.userrepository.findone(id",{"_index":622,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.getuserbyid(createanimaldto.userid",{"_index":236,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["this.usersservice.createuser(createuserdto",{"_index":583,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deleteuser(id",{"_index":588,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getuserbyid(id",{"_index":580,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getusers",{"_index":578,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.login(createuserdto",{"_index":586,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.vaccinerepository.create",{"_index":708,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["this.vaccinerepository.createquerybuilder('vaccines",{"_index":703,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["this.vaccinesservice.createvaccine(createvaccinedto",{"_index":688,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["this.vaccinesservice.getvaccines(filterdto",{"_index":685,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["this.validateuserpassword(loginuserdto",{"_index":636,"title":{},"body":{"injectables/UsersService.html":{}}}],["throw",{"_index":243,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{}}}],["timestamp",{"_index":25,"title":{},"body":{"classes/Animal.html":{}}}],["tipo",{"_index":319,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/Note.html":{}}}],["title",{"_index":302,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/Note.html":{},"injectables/NotesService.html":{}}}],["titulo",{"_index":430,"title":{},"body":{"classes/Note.html":{}}}],["todas",{"_index":461,"title":{},"body":{"controllers/NotesController.html":{}}}],["todos",{"_index":117,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{}}}],["token",{"_index":569,"title":{},"body":{"controllers/UsersController.html":{}}}],["topsecret51",{"_index":412,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{}}}],["touch",{"_index":839,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":628,"title":{},"body":{"injectables/UsersService.html":{}}}],["twitter",{"_index":845,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":55,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"injectables/VaccinesService.html":{},"dependencies.html":{}}}],["typeormconfig",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":202,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{}}}],["typeormmodule.forfeature([animal",{"_index":205,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["typeormmodule.forfeature([note",{"_index":489,"title":{},"body":{"modules/NotesModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":605,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([vaccine",{"_index":695,"title":{},"body":{"modules/VaccinesModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":802,"title":{},"body":{"index.html":{}}}],["título",{"_index":323,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["ui",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":87,"title":{},"body":{"controllers/AnimalsController.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["uma",{"_index":449,"title":{},"body":{"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["unauthorizedexception",{"_index":398,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception('o",{"_index":637,"title":{},"body":{"injectables/UsersService.html":{}}}],["undefined",{"_index":37,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["unique",{"_index":531,"title":{},"body":{"classes/User.html":{}}}],["unique(['email",{"_index":534,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":816,"title":{},"body":{"index.html":{}}}],["useguards",{"_index":138,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/VaccinesController.html":{}}}],["useguards(authguard",{"_index":159,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/VaccinesController.html":{}}}],["usepipes",{"_index":134,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["usepipes(validationpipe",{"_index":165,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":17,"title":{"classes/User.html":{}},"body":{"classes/Animal.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.animals",{"_index":61,"title":{},"body":{"classes/Animal.html":{}}}],["user.dto",{"_index":575,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":337,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:15",{"_index":355,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":348,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":624,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.entity",{"_index":405,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.password",{"_index":627,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.signature",{"_index":625,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.validatepassword(password",{"_index":641,"title":{},"body":{"injectables/UsersService.html":{}}}],["usercredentialsdto",{"_index":619,"title":{},"body":{"injectables/UsersService.html":{}}}],["userid",{"_index":130,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{}}}],["username",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepository",{"_index":394,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":541,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":593,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":574,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":539,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":213,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["usersmodule",{"_index":195,"title":{"modules/UsersModule.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":214,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AnimalsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usuario_id_usuario",{"_index":44,"title":{},"body":{"classes/Animal.html":{}}}],["usuário",{"_index":126,"title":{},"body":{"controllers/AnimalsController.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateUserDto.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["usuário'})@apiresponse({status",{"_index":549,"title":{},"body":{"controllers/UsersController.html":{}}}],["usuário'})@delete(':id",{"_index":560,"title":{},"body":{"controllers/UsersController.html":{}}}],["usuário'})@get('/user/:userid')@apibearerauth('jwt",{"_index":128,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["usuário'})@isstring()@isnotempty()@isuuid",{"_index":279,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["usuário.'})@apiresponse({status",{"_index":571,"title":{},"body":{"controllers/UsersController.html":{}}}],["usuário.'})@get(':id",{"_index":563,"title":{},"body":{"controllers/UsersController.html":{}}}],["usuários",{"_index":565,"title":{},"body":{"controllers/UsersController.html":{}}}],["usário",{"_index":635,"title":{},"body":{"injectables/UsersService.html":{}}}],["uuid",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["vaccine",{"_index":46,"title":{"classes/Vaccine.html":{}},"body":{"classes/Animal.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{}}}],["vaccine.animal",{"_index":63,"title":{},"body":{"classes/Animal.html":{}}}],["vaccine.dto",{"_index":675,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["vaccine.dto.ts",{"_index":363,"title":{},"body":{"classes/CreateVaccineDto.html":{},"coverage.html":{}}}],["vaccine.dto.ts:13",{"_index":374,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["vaccine.dto.ts:18",{"_index":365,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["vaccine.dto.ts:22",{"_index":369,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["vaccine.dto.ts:8",{"_index":372,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["vaccine.entity",{"_index":678,"title":{},"body":{"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{}}}],["vaccinerepository",{"_index":699,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["vaccines",{"_index":18,"title":{},"body":{"classes/Animal.html":{},"controllers/VaccinesController.html":{}}}],["vaccines.controller",{"_index":694,"title":{},"body":{"modules/VaccinesModule.html":{}}}],["vaccines.dto",{"_index":677,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["vaccines.dto.ts",{"_index":377,"title":{},"body":{"classes/GetVaccinesDto.html":{},"coverage.html":{}}}],["vaccines.dto.ts:15",{"_index":380,"title":{},"body":{"classes/GetVaccinesDto.html":{}}}],["vaccines.dto.ts:9",{"_index":381,"title":{},"body":{"classes/GetVaccinesDto.html":{}}}],["vaccines.service",{"_index":680,"title":{},"body":{"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{}}}],["vaccines/vaccines.module",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["vaccinescontroller",{"_index":657,"title":{"controllers/VaccinesController.html":{}},"body":{"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"coverage.html":{}}}],["vaccinesmodule",{"_index":251,"title":{"modules/VaccinesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VaccinesModule.html":{},"modules.html":{},"overview.html":{}}}],["vaccinesservice",{"_index":679,"title":{"injectables/VaccinesService.html":{}},"body":{"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{},"overview.html":{}}}],["vacina",{"_index":370,"title":{},"body":{"classes/CreateVaccineDto.html":{},"controllers/VaccinesController.html":{}}}],["vacina'})@isstring()@isnotempty",{"_index":371,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["vacinas",{"_index":663,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["validate",{"_index":391,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":395,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatepassword",{"_index":520,"title":{},"body":{"classes/User.html":{}}}],["validatepassword(password",{"_index":529,"title":{},"body":{"classes/User.html":{}}}],["validateuserpassword",{"_index":607,"title":{},"body":{"injectables/UsersService.html":{}}}],["validateuserpassword(usercredentialsdto",{"_index":617,"title":{},"body":{"injectables/UsersService.html":{}}}],["validationpipe",{"_index":133,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["validator",{"_index":286,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"dependencies.html":{}}}],["value",{"_index":771,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":856,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":480,"title":{},"body":{"controllers/NotesController.html":{}}}],["void'})@delete(':id')@apibearerauth('jwt",{"_index":455,"title":{},"body":{"controllers/NotesController.html":{}}}],["watch",{"_index":811,"title":{},"body":{"index.html":{}}}],["website",{"_index":843,"title":{},"body":{"index.html":{}}}],["week",{"_index":778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["where('animal.user",{"_index":241,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["yasha@gmail.com",{"_index":357,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["yasha@gmail.com'})@isstring()@isnotempty()@matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":340,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["you'd",{"_index":832,"title":{},"body":{"index.html":{}}}],["z",{"_index":344,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":351,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z]{2",{"_index":347,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":343,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":196,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Animal.html":{"url":"classes/Animal.html","title":"class - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animals/animal.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthDate\n                            \n                            \n                                breed\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                notes\n                            \n                            \n                                species\n                            \n                            \n                                user\n                            \n                            \n                                vaccines\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'data_nascimento', type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'raca'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid', {name: 'id_animal'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'nome'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Note[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            species\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'especie_animal'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE'})@JoinColumn({name: 'usuario_id_usuario'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vaccines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Vaccine[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, BaseEntity, PrimaryGeneratedColumn, Column, ManyToOne, OneToMany, JoinColumn } from \"typeorm\";\nimport { User } from \"src/users/user.entity\";\nimport { Vaccine } from \"src/vaccines/vaccine.entity\";\nimport { Note } from \"src/notes/note.entity\";\n\n@Entity('animal')\nexport class Animal extends BaseEntity {\n    @PrimaryGeneratedColumn('uuid', { name: 'id_animal' })\n    id: string;\n\n    @Column({ name: 'nome' })\n    name: string;\n\n    @Column({ name: 'data_nascimento', type: 'timestamp' })\n    birthDate: string;\n\n    @Column({ name: 'especie_animal' })\n    species: string;\n\n    @Column({ name: 'raca' })\n    breed: string;\n\n    @ManyToOne(() => User, user => user.animals, { onDelete: \"CASCADE\" })\n    @JoinColumn({ name: 'usuario_id_usuario' })\n    user: User;\n\n    @OneToMany(() => Vaccine, vaccine => vaccine.animal)\n    vaccines: Vaccine[];\n\n    @OneToMany(() => Note, note => note.animal)\n    notes: Note[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AnimalsController.html":{"url":"controllers/AnimalsController.html","title":"controller - AnimalsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AnimalsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animals/animals.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                animals\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAnimal\n                            \n                            \n                                deleteAnimal\n                            \n                            \n                                getAnimalById\n                            \n                            \n                                getAnimals\n                            \n                            \n                                getUserAnimals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAnimal\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAnimal(createAnimalDto: CreateAnimalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Faz o cadastro de um novo animal no banco de dados.'})@ApiResponse({status: 201, description: 'Retorna o novo animal cadastrado'})@Post()@ApiBearerAuth('jwt')@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/animals/animals.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAnimalDto\n                                    \n                                                CreateAnimalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAnimal\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAnimal(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Exclui um animal do banco de dados.'})@ApiParam({name: 'id', description: 'id do animal.'})@ApiResponse({status: 200, description: 'O animal com dado id foi excluido.'})@Delete(':id')@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/animals/animals.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAnimalById\n                        \n                        \n                    \n                \n            \n            \n                \ngetAnimalById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna o animal com dado id.'})@ApiParam({name: 'id', description: 'id do animal.'})@ApiResponse({status: 200, description: 'Retorna o animal que possui dado id.'})@Get(':id')@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/animals/animals.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAnimals\n                        \n                        \n                    \n                \n            \n            \n                \ngetAnimals()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna a lista com todos os animais cadastrados'})@ApiResponse({status: 200, description: 'Retorna a lista de animais'})@Get()@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/animals/animals.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserAnimals\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserAnimals(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna a lista com todos os animais cadastrados pelo usuário com dado id.'})@ApiResponse({status: 200, description: 'Retorna a lista de animais de dado usuário'})@Get('/user/:userId')@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/animals/animals.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, ValidationPipe, UsePipes, Get, Param, Delete, ParseUUIDPipe, UseGuards } from '@nestjs/common';\nimport { AnimalsService } from './animals.service';\nimport { CreateAnimalDto } from './dto/create-animal.dto';\nimport { Animal } from './animal.entity';\nimport { ApiBearerAuth, ApiOperation, ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Animais')\n@ApiResponse({ status: 401, description: 'Usuário não autorizado' })\n@Controller('animals')\n@UseGuards(AuthGuard())\nexport class AnimalsController {\n    constructor(private animalsService: AnimalsService) { }\n\n    @ApiOperation({ summary: 'Faz o cadastro de um novo animal no banco de dados.' })\n    @ApiResponse({ status: 201, description: 'Retorna o novo animal cadastrado' })\n    @Post()\n    @ApiBearerAuth('jwt')\n    @UsePipes(ValidationPipe)\n    createAnimal(@Body() createAnimalDto: CreateAnimalDto): Promise {\n        return this.animalsService.createAnimal(createAnimalDto);\n    }\n\n    @ApiOperation({ summary: 'Retorna a lista com todos os animais cadastrados' })\n    @ApiResponse({ status: 200, description: 'Retorna a lista de animais' })\n    @Get()\n    @ApiBearerAuth('jwt')\n    getAnimals(): Promise {\n        console.log('request');\n        return this.animalsService.getAnimals();\n    }\n\n    @ApiOperation({ summary: 'Retorna a lista com todos os animais cadastrados pelo usuário com dado id.' })\n    @ApiResponse({ status: 200, description: 'Retorna a lista de animais de dado usuário' })\n    @Get('/user/:userId')\n    @ApiBearerAuth('jwt')\n    getUserAnimals(@Param('userId', new ParseUUIDPipe()) userId: string): Promise {\n        return this.animalsService.getUserAnimals(userId);\n    }\n\n    @ApiOperation({ summary: 'Retorna o animal com dado id.' })\n    @ApiParam({ name: 'id', description: 'id do animal.' })\n    @ApiResponse({ status: 200, description: 'Retorna o animal que possui dado id.' })\n    @Get(':id')\n    @ApiBearerAuth('jwt')\n    getAnimalById(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n        return this.animalsService.getAnimalById(id);\n    }\n\n    @ApiOperation({ summary: 'Exclui um animal do banco de dados.' })\n    @ApiParam({ name: 'id', description: 'id do animal.' })\n    @ApiResponse({ status: 200, description: 'O animal com dado id foi excluido.' })\n    @Delete(':id')\n    @ApiBearerAuth('jwt')\n    deleteAnimal(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n        return this.animalsService.deleteAnimal(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnimalsModule.html":{"url":"modules/AnimalsModule.html","title":"module - AnimalsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnimalsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnimalsModule\n\n\n\ncluster_AnimalsModule_exports\n\n\n\ncluster_AnimalsModule_providers\n\n\n\ncluster_AnimalsModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAnimalsModule\n\nAnimalsModule\n\nAnimalsModule -->\n\nUsersModule->AnimalsModule\n\n\n\n\n\nAnimalsService \n\nAnimalsService \n\nAnimalsService  -->\n\nAnimalsModule->AnimalsService \n\n\n\n\n\nAnimalsService\n\nAnimalsService\n\nAnimalsModule -->\n\nAnimalsService->AnimalsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/animals/animals.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnimalsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AnimalsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AnimalsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AnimalsController } from './animals.controller';\nimport { AnimalsService } from './animals.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from 'src/users/users.module';\nimport { Animal } from './animal.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Animal]),\n    UsersModule,\n  ],\n  controllers: [AnimalsController],\n  providers: [AnimalsService],\n  exports: [AnimalsService],\n})\nexport class AnimalsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalsService.html":{"url":"injectables/AnimalsService.html","title":"injectable - AnimalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnimalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animals/animals.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAnimal\n                            \n                            \n                                    Async\n                                deleteAnimal\n                            \n                            \n                                    Async\n                                getAnimalById\n                            \n                            \n                                    Async\n                                getAnimals\n                            \n                            \n                                    Async\n                                getUserAnimals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(animalRepository: Repository, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/animals/animals.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAnimal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAnimal(createAnimalDto: CreateAnimalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/animals/animals.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAnimalDto\n                                    \n                                                CreateAnimalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAnimal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAnimal(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/animals/animals.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAnimalById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAnimalById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/animals/animals.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAnimals\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAnimals()\n                \n            \n\n\n            \n                \n                    Defined in src/animals/animals.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserAnimals\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserAnimals(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/animals/animals.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateAnimalDto } from './dto/create-animal.dto';\nimport { Animal } from './animal.entity';\nimport { Repository } from 'typeorm';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class AnimalsService {\n\n    constructor(\n        @InjectRepository(Animal)\n        private animalRepository: Repository,\n        private userService: UsersService,\n    ) { }\n\n    async createAnimal(createAnimalDto: CreateAnimalDto): Promise {\n        const { name, birthDate, species, breed } = createAnimalDto;\n\n        const animal = new Animal();\n        animal.name = name;\n        animal.birthDate = birthDate;\n        animal.species = species.toLowerCase();\n        animal.breed = breed.toLowerCase();\n        animal.user = await this.userService.getUserById(createAnimalDto.userId);\n\n        return await this.animalRepository.create(animal).save();\n    }\n\n    async getAnimals(): Promise {\n        return await this.animalRepository.createQueryBuilder('animal')\n            .leftJoinAndSelect('animal.user', 'user')\n            .getMany();\n    }\n\n    async getUserAnimals(userId: string): Promise {\n        return await this.animalRepository.createQueryBuilder('animal')\n            .leftJoinAndSelect('animal.user', 'user')\n            .where('animal.user = :userId', { userId: userId })\n            .getMany();\n    }\n\n    async getAnimalById(id: string): Promise {\n        const animal = await this.animalRepository.findOne(id);\n        if (!animal) throw new NotFoundException(`O animal com id ${id} não foi encontrado`);\n        return animal;\n    }\n\n    async deleteAnimal(id: string): Promise {\n        await this.animalRepository.delete(id);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAnimalsModule\n\nAnimalsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnimalsModule->AppModule\n\n\n\n\n\nNotesModule\n\nNotesModule\n\nAppModule -->\n\nNotesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nVaccinesModule\n\nVaccinesModule\n\nAppModule -->\n\nVaccinesModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AnimalsModule\n                        \n                        \n                            NotesModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            VaccinesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { typeOrmConfig } from './config/typeorm.config';\nimport { UsersModule } from './users/users.module';\nimport { AnimalsModule } from './animals/animals.module';\nimport { VaccinesModule } from './vaccines/vaccines.module';\nimport { NotesModule } from './notes/note.module';\n\n@Module({\n  imports: [TypeOrmModule.forRoot(typeOrmConfig), UsersModule, AnimalsModule, VaccinesModule, NotesModule],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAnimalDto.html":{"url":"classes/CreateAnimalDto.html","title":"class - CreateAnimalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAnimalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animals/dto/create-animal.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthDate\n                            \n                            \n                                breed\n                            \n                            \n                                name\n                            \n                            \n                                species\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Data de nascimento', example: '2/10/2020'})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/dto/create-animal.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Raça do animal', example: 'Raça de um animal'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/dto/create-animal.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Nome do animal', example: 'Omar'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/dto/create-animal.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            species\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AnimalSpecies\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Espécies cadastradas', example: 'Espécie do animal'})@IsString()@IsNotEmpty()@IsIn(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/dto/create-animal.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'id de um usuário', example: 'id de um usuário'})@IsString()@IsNotEmpty()@IsUUID()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/dto/create-animal.dto.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNotEmpty, IsIn, IsUUID } from \"class-validator\";\nimport { AnimalSpecies } from \"../enum/animal-species.enum\";\n\nexport class CreateAnimalDto {\n    @ApiProperty({ description: 'Nome do animal', example: 'Omar' })\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    @ApiProperty({ description: 'Data de nascimento', example: '2/10/2020' })\n    @IsNotEmpty()\n    birthDate: string;\n\n    @ApiProperty({ description: 'Espécies cadastradas', example: 'Espécie do animal' })\n    @IsString()\n    @IsNotEmpty()\n    @IsIn([AnimalSpecies.CACHORRO, AnimalSpecies.GATO, AnimalSpecies.NAO_INFORMAR, AnimalSpecies.OUTRO])\n    species: AnimalSpecies;\n\n    @ApiProperty({ description: 'Raça do animal', example: 'Raça de um animal' })\n    @IsString()\n    @IsNotEmpty()\n    breed: string;\n\n    @ApiProperty({ description: 'id de um usuário', example: 'id de um usuário' })\n    @IsString()\n    @IsNotEmpty()\n    @IsUUID()\n    userId: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNoteDto.html":{"url":"classes/CreateNoteDto.html","title":"class - CreateNoteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNoteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notes/dto/create-note.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animalId\n                            \n                            \n                                description\n                            \n                            \n                                frequency\n                            \n                            \n                                noteDate\n                            \n                            \n                                noteType\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'id do animal.', example: 'id de um animal'})@IsString()@IsNotEmpty()@IsUUID()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/dto/create-note.dto.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Descrição da nota', example: 'Ir no mercado comprar ração'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/dto/create-note.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frequency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Repetição da nota', example: 'Dia'})@IsString()@IsNotEmpty()@IsIn(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/dto/create-note.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noteDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Data da nota', example: '02/10/2020'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/dto/create-note.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noteType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Tipo da nota', example: 'Dar banho'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/dto/create-note.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Título da nota', example: 'Comprar ração'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/dto/create-note.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNotEmpty, IsIn, IsUUID } from \"class-validator\";\nimport { NoteFrequency } from \"../note-frequency.enum\";\n\nexport class CreateNoteDto {\n    @ApiProperty({ description: 'Tipo da nota', example: 'Dar banho' })\n    @IsString()\n    @IsNotEmpty()\n    noteType: string;\n\n    @ApiProperty({ description: 'Título da nota', example: 'Comprar ração' })\n    @IsString()\n    @IsNotEmpty()\n    title: string;\n\n    @ApiProperty({ description: 'Descrição da nota', example: 'Ir no mercado comprar ração' })\n    @IsString()\n    @IsNotEmpty()\n    description: string;\n\n    @ApiProperty({ description: 'Data da nota', example: '02/10/2020' })\n    @IsString()\n    @IsNotEmpty()\n    noteDate: Date;\n\n    @ApiProperty({ description: 'Repetição da nota', example: 'Dia' })\n    @IsString()\n    @IsNotEmpty()\n    @IsIn([NoteFrequency.DAY, NoteFrequency.WEEK, NoteFrequency.MONTH, NoteFrequency.NONE])\n    frequency: string;\n\n    @ApiProperty({ description: 'id do animal.', example: 'id de um animal' })\n    @IsString()\n    @IsNotEmpty()\n    @IsUUID()\n    animalId: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Email do usuário', example: 'yasha@gmail.com'})@IsString()@IsNotEmpty()@Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Senha do usuário', example: 'Teste123...'})@IsString()@IsNotEmpty()@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, Matches } from \"class-validator\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateUserDto {\n    @ApiProperty({ description: 'Email do usuário', example: 'yasha@gmail.com' })\n    @IsString()\n    @IsNotEmpty()\n    @Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n    email: string;\n\n    @ApiProperty({ description: 'Senha do usuário', example: 'Teste123...' })\n    @IsString()\n    @IsNotEmpty()\n    @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, { message: 'Senha muito fraca.' })\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateVaccineDto.html":{"url":"classes/CreateVaccineDto.html","title":"class - CreateVaccineDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateVaccineDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vaccines/dto/create-vaccine.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breed\n                            \n                            \n                                monthsAfterBirth\n                            \n                            \n                                name\n                            \n                            \n                                species\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Raça do animal', example: 'Raça do animal'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/dto/create-vaccine.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthsAfterBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Meses após nascimento', example: 'Meses após nascimento'})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/dto/create-vaccine.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Nome da vacina', example: 'nome da vacina'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/dto/create-vaccine.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            species\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Espécie do animal', example: 'especie do animal'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/dto/create-vaccine.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreateVaccineDto {\n    @ApiProperty({ description: 'Nome da vacina', example: 'nome da vacina' })\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    @ApiProperty({ description: 'Espécie do animal', example: 'especie do animal' })\n    @IsString()\n    @IsNotEmpty()\n    species: string;\n\n    @ApiProperty({ description: 'Raça do animal', example: 'Raça do animal' })\n    @IsString()\n    @IsNotEmpty()\n    breed: string;\n\n    @ApiProperty({ description: 'Meses após nascimento', example: 'Meses após nascimento' })\n    @IsNotEmpty()\n    monthsAfterBirth: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetVaccinesDto.html":{"url":"classes/GetVaccinesDto.html","title":"class - GetVaccinesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetVaccinesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vaccines/dto/get-vaccines.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breed\n                            \n                            \n                                species\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Raça do animal'})@IsString()@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/dto/get-vaccines.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            species\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Espécie do animal'})@IsString()@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/dto/get-vaccines.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsOptional, IsString } from \"class-validator\";\n\nexport class GetVaccinesDto {\n    @ApiPropertyOptional({ description: 'Espécie do animal' })\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    species: string;\n\n    @ApiPropertyOptional({ description: 'Raça do animal' })\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    breed: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/jwt-payload.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n    email: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/users/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { Repository } from \"typeorm\";\nimport { JwtPayload } from \"./jwt-payload.interface\";\nimport { User } from \"./user.entity\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        @InjectRepository(User)\n        private userRepository: Repository,\n    ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            secretOrKey: 'topSecret51',\n        });\n    }\n\n    async validate(payload: JwtPayload): Promise {\n        const { email } = payload;\n        const user = await this.userRepository.findOne({ email });\n\n        if (!user) {\n            throw new UnauthorizedException();\n        }\n\n        return user;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Note.html":{"url":"classes/Note.html","title":"class - Note","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Note\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notes/note.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animal\n                            \n                            \n                                creationDate\n                            \n                            \n                                description\n                            \n                            \n                                frequency\n                            \n                            \n                                id\n                            \n                            \n                                noteDate\n                            \n                            \n                                noteType\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Animal\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE'})@JoinColumn({name: 'animal_id_animal'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'data_criacao'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'descricao'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frequency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'frequencia_de_nota'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid', {name: 'id_nota'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noteDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'data_nota'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noteType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'tipo'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'titulo'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, BaseEntity, PrimaryGeneratedColumn, Column, ManyToOne, CreateDateColumn, JoinColumn } from \"typeorm\";\nimport { Animal } from \"src/animals/animal.entity\";\n\n@Entity('nota')\nexport class Note extends BaseEntity {\n    @PrimaryGeneratedColumn('uuid', { name: 'id_nota' })\n    id: string;\n\n    @Column({ name: 'tipo' })\n    noteType: string;\n\n    @Column({ name: 'titulo' })\n    title: string;\n\n    @Column({ name: 'descricao' })\n    description: string;\n\n    @CreateDateColumn({ name: 'data_criacao' })\n    creationDate: string;\n\n    @Column({ name: 'data_nota' })\n    noteDate: Date;\n\n    @Column({ name: 'frequencia_de_nota' })\n    frequency: string;\n\n    // \"Cascade\" obriga a exclusão de dados conectados\n    @ManyToOne(() => Animal, animal => animal.notes, { onDelete: \"CASCADE\" })\n    @JoinColumn({ name: 'animal_id_animal' })\n    animal: Animal;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotesController.html":{"url":"controllers/NotesController.html","title":"controller - NotesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notes/note.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                notes\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNote\n                            \n                            \n                                deleteNote\n                            \n                            \n                                getNoteById\n                            \n                            \n                                getNotes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNote\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNote(createnoteDto: CreateNoteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Cria nova nota para o animal que possui dado id.'})@ApiResponse({status: 201, description: 'Cria uma nova nota para o animal com dado id.'})@Post()@ApiBearerAuth('jwt')@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/notes/note.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createnoteDto\n                                    \n                                                CreateNoteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteNote\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteNote(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Exclui uma nota que possui dado id'})@ApiParam({name: 'id', description: 'id de uma nota'})@ApiResponse({status: 200, description: 'Retorna void'})@Delete(':id')@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/notes/note.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNoteById\n                        \n                        \n                    \n                \n            \n            \n                \ngetNoteById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna uma nota que possui dado id'})@ApiParam({name: 'id', description: 'id de uma nota'})@ApiResponse({status: 200, description: 'Retorna uma nota'})@Get(':id')@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/notes/note.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNotes\n                        \n                        \n                    \n                \n            \n            \n                \ngetNotes(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna todas as nota de um dado animal'})@ApiParam({name: 'animalId', description: 'id de um animal'})@ApiResponse({status: 200, description: 'Retorna uma lista de notas'})@Get('animal/:animalId')@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/notes/note.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, UsePipes, ValidationPipe, Body, Get, Param, Delete, ParseUUIDPipe, UseGuards } from '@nestjs/common';\nimport { NotesService } from './note.service';\nimport { CreateNoteDto } from './dto/create-note.dto';\nimport { Note } from './note.entity';\nimport { ApiBearerAuth, ApiOperation, ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Notas')\n@ApiResponse({ status: 401, description: 'Usuário não autorizado' })\n@Controller('notes')\n@UseGuards(AuthGuard())\nexport class NotesController {\n    constructor(private notesService: NotesService) { }\n\n    @ApiOperation({ summary: 'Cria nova nota para o animal que possui dado id.' })\n    @ApiResponse({ status: 201, description: 'Cria uma nova nota para o animal com dado id.' })\n    @Post()\n    @ApiBearerAuth('jwt')\n    @UsePipes(ValidationPipe)\n    createNote(@Body() createnoteDto: CreateNoteDto): Promise {\n        return this.notesService.createNote(createnoteDto);\n    }\n\n    @ApiOperation({ summary: 'Retorna todas as nota de um dado animal' })\n    @ApiParam({ name: 'animalId', description: 'id de um animal' })\n    @ApiResponse({ status: 200, description: 'Retorna uma lista de notas' })\n    @Get('animal/:animalId')\n    @ApiBearerAuth('jwt')\n    getNotes(@Param('animalId', new ParseUUIDPipe()) id: string): Promise {\n        return this.notesService.getNotes(id);\n    }\n\n    @ApiOperation({ summary: 'Retorna uma nota que possui dado id' })\n    @ApiParam({ name: 'id', description: 'id de uma nota' })\n    @ApiResponse({ status: 200, description: 'Retorna uma nota' })\n    @Get(':id')\n    @ApiBearerAuth('jwt')\n    getNoteById(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n        return this.notesService.getNoteById(id);\n    }\n\n    @ApiOperation({ summary: 'Exclui uma nota que possui dado id' })\n    @ApiParam({ name: 'id', description: 'id de uma nota' })\n    @ApiResponse({ status: 200, description: 'Retorna void' })\n    @Delete(':id')\n    @ApiBearerAuth('jwt')\n    deleteNote(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n        return this.notesService.deleteNote(id);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotesModule.html":{"url":"modules/NotesModule.html","title":"module - NotesModule","body":"\n                   \n\n\n\n\n    Modules\n    NotesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotesModule\n\n\n\ncluster_NotesModule_imports\n\n\n\ncluster_NotesModule_providers\n\n\n\n\nAnimalsModule\n\nAnimalsModule\n\n\n\nNotesModule\n\nNotesModule\n\nNotesModule -->\n\nAnimalsModule->NotesModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nNotesModule -->\n\nUsersModule->NotesModule\n\n\n\n\n\nNotesService\n\nNotesService\n\nNotesModule -->\n\nNotesService->NotesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/notes/note.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AnimalsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotesController } from './note.controller';\nimport { NotesService } from './note.service';\nimport { AnimalsModule } from 'src/animals/animals.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Note } from './note.entity';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Note]),\n    AnimalsModule,\n    UsersModule,\n  ],\n  controllers: [NotesController],\n  providers: [NotesService]\n})\nexport class NotesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotesService.html":{"url":"injectables/NotesService.html","title":"injectable - NotesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notes/note.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNote\n                            \n                            \n                                    Async\n                                deleteNote\n                            \n                            \n                                    Async\n                                getNoteById\n                            \n                            \n                                    Async\n                                getNotes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(noteRepository: Repository, animalService: AnimalsService)\n                    \n                \n                        \n                            \n                                Defined in src/notes/note.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        noteRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animalService\n                                                  \n                                                        \n                                                                        AnimalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNote\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNote(createnoteDto: CreateNoteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/notes/note.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createnoteDto\n                                    \n                                                CreateNoteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteNote\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteNote(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/notes/note.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNoteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNoteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/notes/note.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNotes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNotes(animalId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/notes/note.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    animalId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateNoteDto } from './dto/create-note.dto';\nimport { Note } from './note.entity';\nimport { Repository } from 'typeorm';\nimport { AnimalsService } from 'src/animals/animals.service';\n\n@Injectable()\nexport class NotesService {\n\n    constructor(\n        @InjectRepository(Note)\n        private noteRepository: Repository,\n        private animalService: AnimalsService,\n    ) { }\n\n    async createNote(createnoteDto: CreateNoteDto): Promise {\n        const { noteType, title, description, noteDate, frequency, animalId } = createnoteDto;\n\n        const animal = await this.animalService.getAnimalById(animalId);\n\n        const note = new Note();\n        note.noteType = noteType.toLowerCase();\n        note.title = title;\n        note.description = description;\n        note.noteDate = noteDate;\n        note.frequency = frequency;\n        note.animal = animal;\n\n        return await this.noteRepository.create(note).save();\n    }\n\n    async getNotes(animalId: string): Promise {\n        return await this.noteRepository.createQueryBuilder('note')\n            .leftJoinAndSelect('note.animal', 'animal')\n            .andWhere('note.animal = :animalId', {\n                animalId: animalId,\n            }).getMany();\n    }\n\n    async getNoteById(id: string): Promise {\n        const found = await this.noteRepository.findOne(id);\n        if (!found) {\n            throw new NotFoundException(`Nota com id ${id} não foi encontrada`);\n        }\n        return found;\n    }\n\n    async deleteNote(id: string): Promise {\n        await this.noteRepository.delete(id);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animals\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                signature\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Animal[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid', {name: 'id_usuario'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'senha', length: 200})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'assinatura'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validatePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.entity.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, BaseEntity, PrimaryGeneratedColumn, Column, OneToMany, Unique } from \"typeorm\";\nimport * as bcrypt from 'bcrypt';\nimport { Animal } from \"src/animals/animal.entity\";\n\n@Entity('usuario')\n@Unique(['email'])\nexport class User extends BaseEntity {\n    @PrimaryGeneratedColumn('uuid', { name: 'id_usuario' })\n    id: string;\n\n    @Column()\n    email: string;\n\n    @Column({ name: 'senha', length: 200 })\n    password: string;\n\n    @Column({ name: 'assinatura' })\n    signature: string;\n\n    @OneToMany(() => Animal, animal => animal.user)\n    animals: Animal[];\n\n    async validatePassword(password: string): Promise {\n        const hash = await bcrypt.hash(password, this.signature);\n        return hash === this.password;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getUserById\n                            \n                            \n                                getUsers\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Realiza o cadastro de um novo usuário'})@ApiResponse({status: 201, description: 'Retorna o usuário cadastrado.'})@ApiResponse({status: 400, description: 'O email ou a senha enviados estão incorretos.'})@Post()@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Exclusão de um usuário cadastrado.'})@ApiParam({name: 'id', description: 'id de identificação de um usuário'})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserById\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna o usuário que possui dado id.'})@ApiParam({name: 'id', description: 'id de identificação de um usuário'})@ApiResponse({status: 200, description: 'Retorna o usuário.'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna todos os usuários cadastrados no banco de dados.'})@ApiResponse({status: 200, description: 'Retorna uma lista com os usuários cadastrados'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Realiza o login do usuário'})@ApiResponse({status: 201, description: 'Retorna o token de acesso do usuário.'})@ApiResponse({status: 401, description: 'O email ou a senha enviados estão incorretos.'})@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Body, ValidationPipe, Post, UsePipes, Get, Param, ParseUUIDPipe, Delete } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ApiOperation, ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { User } from './user.entity';\n\n@ApiTags('Usuários')\n@Controller('users')\nexport class UsersController {\n    constructor(private usersService: UsersService) { }\n\n    @ApiOperation({ summary: 'Retorna todos os usuários cadastrados no banco de dados.' })\n    @ApiResponse({ status: 200, description: 'Retorna uma lista com os usuários cadastrados' })\n    @Get()\n    getUsers(): Promise {\n        return this.usersService.getUsers();\n    }\n\n    @ApiOperation({ summary: 'Retorna o usuário que possui dado id.' })\n    @ApiParam({ name: 'id', description: 'id de identificação de um usuário' })\n    @ApiResponse({ status: 200, description: 'Retorna o usuário.' })\n    @Get(':id')\n    getUserById(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n        return this.usersService.getUserById(id);\n    }\n\n    @ApiOperation({ summary: 'Realiza o cadastro de um novo usuário' })\n    @ApiResponse({ status: 201, description: 'Retorna o usuário cadastrado.' })\n    @ApiResponse({ status: 400, description: 'O email ou a senha enviados estão incorretos.' })\n    @Post()\n    @UsePipes(ValidationPipe)\n    createUser(@Body(ValidationPipe) createUserDto: CreateUserDto): Promise {\n        return this.usersService.createUser(createUserDto);\n    }\n\n    @ApiOperation({ summary: 'Realiza o login do usuário' })\n    @ApiResponse({ status: 201, description: 'Retorna o token de acesso do usuário.' })\n    @ApiResponse({ status: 401, description: 'O email ou a senha enviados estão incorretos.' })\n    @Post('login')\n    login(@Body(ValidationPipe) createUserDto: CreateUserDto): Promise {\n        return this.usersService.login(createUserDto);\n    }\n\n    @ApiOperation({ summary: 'Exclusão de um usuário cadastrado.' })\n    @ApiParam({ name: 'id', description: 'id de identificação de um usuário' })\n    @Delete(':id')\n    deleteUser(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n        return this.usersService.deleteUser(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nJwtStrategy  -->\n\nUsersModule->JwtStrategy \n\n\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './user.entity';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: 'topSecret51',\n      signOptions: {\n        expiresIn: 3600,\n      },\n    }),\n    TypeOrmModule.forFeature([User]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService, JwtStrategy],\n  exports: [UsersService, JwtStrategy, PassportModule],\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUserPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserPassword(userCredentialsDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userCredentialsDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { User } from './user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtPayload } from './jwt-payload.interface';\n\n@Injectable()\nexport class UsersService {\n\n    constructor(\n        @InjectRepository(User)\n        private userRepository: Repository,\n        private jwtService: JwtService,\n    ) { }\n\n    async getUsers(): Promise {\n        return await this.userRepository.createQueryBuilder('user').getMany();\n    }\n\n    async getUserById(id: string): Promise {\n        const found = await this.userRepository.findOne(id);\n        if (!found) {\n            throw new NotFoundException('Usuário com id ' + id + ' não foi encontrado.');\n        }\n        return found;\n    }\n\n    async createUser(createUserDto: CreateUserDto): Promise {\n        const { email, password } = createUserDto;\n\n        const user = new User();\n        user.email = email;\n        user.signature = await bcrypt.genSalt();\n        user.password = await bcrypt.hash(password, user.signature);\n        let result;\n\n        try {\n            result = await this.userRepository.create(user).save();\n        } catch (error) {\n            // console.log(error);\n            throw new ConflictException(`Já existe o cadastro de um usário com o email ${email}`);\n\n        }\n        return result;\n    }\n\n    async login(loginUserDto: CreateUserDto): Promise {\n        const user = await this.validateUserPassword(loginUserDto);\n\n        if (!user.email) {\n            throw new UnauthorizedException('O email ou senha fornecidos estão incorretos');\n        }\n\n        const payload: JwtPayload = { email: user.email };\n        const accessToken = this.jwtService.sign(payload);\n\n        return { accessToken, user };\n    }\n\n    async validateUserPassword(userCredentialsDto: CreateUserDto): Promise {\n        const { email, password } = userCredentialsDto;\n        const user = await this.userRepository.findOne({ email });\n\n        if (user && await user.validatePassword(password)) {\n            return user;\n        } else {\n            return null;\n        }\n    }\n\n    async deleteUser(id: string): Promise {\n        await this.userRepository.delete(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Vaccine.html":{"url":"classes/Vaccine.html","title":"class - Vaccine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Vaccine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vaccines/vaccine.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animal\n                            \n                            \n                                breed\n                            \n                            \n                                id\n                            \n                            \n                                monthsAfterBirth\n                            \n                            \n                                name\n                            \n                            \n                                species\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Animal\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE'})@JoinColumn({name: 'animal_id_animal'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/vaccine.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'raca'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/vaccine.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid', {name: 'id_vacina'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/vaccine.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthsAfterBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'meses_apos_nascimento'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/vaccine.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'nome_vacina'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/vaccine.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            species\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'especie_animal'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/vaccine.entity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, BaseEntity, PrimaryGeneratedColumn, Column, ManyToOne, JoinColumn } from \"typeorm\";\nimport { Animal } from \"src/animals/animal.entity\";\n\n@Entity('vacina')\nexport class Vaccine extends BaseEntity {\n\n    @PrimaryGeneratedColumn('uuid', { name: 'id_vacina' })\n    id: number;\n\n    @Column({ name: 'nome_vacina' })\n    name: string;\n\n    @Column({ name: 'especie_animal' })\n    species: string;\n\n    @Column({ name: 'raca' })\n    breed: string;\n\n    @Column({ name: 'meses_apos_nascimento' })\n    monthsAfterBirth: string;\n\n    @ManyToOne(() => Animal, animal => animal.vaccines, { onDelete: \"CASCADE\" })\n    @JoinColumn({ name: 'animal_id_animal' })\n    animal: Animal;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VaccinesController.html":{"url":"controllers/VaccinesController.html","title":"controller - VaccinesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VaccinesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vaccines/vaccines.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                vaccines\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createVaccine\n                            \n                            \n                                getVaccines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createVaccine\n                        \n                        \n                    \n                \n            \n            \n                \ncreateVaccine(createVaccineDto: CreateVaccineDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Cadastro de novas vacinas no banco de dados'})@ApiResponse({status: 201, description: 'Vacina cadastrada com sucesso.'})@Post()@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/vaccines/vaccines.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createVaccineDto\n                                    \n                                                CreateVaccineDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVaccines\n                        \n                        \n                    \n                \n            \n            \n                \ngetVaccines(filterDto: GetVaccinesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna as vacinas cadastradas'})@ApiResponse({status: 200, description: 'Lista de vacinas cadastradas, de acordo com os parâmentros'})@Get()@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/vaccines/vaccines.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                GetVaccinesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Query, UseGuards, ValidationPipe } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateVaccineDto } from './dto/create-vaccine.dto';\nimport { GetVaccinesDto } from './dto/get-vaccines.dto';\nimport { Vaccine } from './vaccine.entity';\nimport { VaccinesService } from './vaccines.service';\n\n@ApiTags('Vacinas')\n@ApiResponse({ status: 401, description: 'Usuário não autorizado' })\n@Controller('vaccines')\n@UseGuards(AuthGuard())\nexport class VaccinesController {\n\n    constructor(private vaccinesService: VaccinesService) { }\n\n    @ApiOperation({ summary: 'Retorna as vacinas cadastradas' })\n    @ApiResponse({ status: 200, description: 'Lista de vacinas cadastradas, de acordo com os parâmentros' })\n    @Get()\n    @ApiBearerAuth('jwt')\n    getVaccines(@Query(ValidationPipe) filterDto: GetVaccinesDto): Promise {\n        return this.vaccinesService.getVaccines(filterDto);\n    }\n\n    @ApiOperation({ summary: 'Cadastro de novas vacinas no banco de dados' })\n    @ApiResponse({ status: 201, description: 'Vacina cadastrada com sucesso.' })\n    @Post()\n    @ApiBearerAuth('jwt')\n    createVaccine(@Body(ValidationPipe) createVaccineDto: CreateVaccineDto): Promise {\n        return this.vaccinesService.createVaccine(createVaccineDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VaccinesModule.html":{"url":"modules/VaccinesModule.html","title":"module - VaccinesModule","body":"\n                   \n\n\n\n\n    Modules\n    VaccinesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VaccinesModule\n\n\n\ncluster_VaccinesModule_providers\n\n\n\ncluster_VaccinesModule_imports\n\n\n\ncluster_VaccinesModule_exports\n\n\n\n\nAnimalsModule\n\nAnimalsModule\n\n\n\nVaccinesModule\n\nVaccinesModule\n\nVaccinesModule -->\n\nAnimalsModule->VaccinesModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nVaccinesModule -->\n\nUsersModule->VaccinesModule\n\n\n\n\n\nVaccinesService \n\nVaccinesService \n\nVaccinesService  -->\n\nVaccinesModule->VaccinesService \n\n\n\n\n\nVaccinesService\n\nVaccinesService\n\nVaccinesModule -->\n\nVaccinesService->VaccinesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/vaccines/vaccines.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VaccinesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VaccinesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AnimalsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VaccinesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VaccinesController } from './vaccines.controller';\nimport { VaccinesService } from './vaccines.service';\nimport { AnimalsModule } from 'src/animals/animals.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Vaccine } from './vaccine.entity';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Vaccine]),\n    AnimalsModule,\n    UsersModule,\n  ],\n  controllers: [VaccinesController],\n  providers: [VaccinesService],\n  exports: [VaccinesService]\n})\nexport class VaccinesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VaccinesService.html":{"url":"injectables/VaccinesService.html","title":"injectable - VaccinesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VaccinesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vaccines/vaccines.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createVaccine\n                            \n                            \n                                    Async\n                                getVaccines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaccineRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/vaccines/vaccines.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaccineRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createVaccine\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVaccine(createVaccineDto: CreateVaccineDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vaccines/vaccines.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createVaccineDto\n                                    \n                                                CreateVaccineDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getVaccines\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVaccines(filterDto: GetVaccinesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vaccines/vaccines.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                GetVaccinesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateVaccineDto } from './dto/create-vaccine.dto';\nimport { GetVaccinesDto } from './dto/get-vaccines.dto';\nimport { Vaccine } from './vaccine.entity';\n\n@Injectable()\nexport class VaccinesService {\n    constructor(\n        @InjectRepository(Vaccine)\n        private vaccineRepository: Repository,\n    ) { }\n\n    async getVaccines(filterDto: GetVaccinesDto): Promise {\n        const query = await this.vaccineRepository.createQueryBuilder('vaccines');\n\n        if (filterDto.species) {\n            query.andWhere('vaccines.species LIKE :species', {\n                species: filterDto.species,\n            });\n        }\n\n        if (filterDto.breed) {\n            query.andWhere('vaccines.species LIKE :species', {\n                species: filterDto.species,\n            });\n        }\n\n        return await query.getMany();\n    }\n\n    async createVaccine(createVaccineDto: CreateVaccineDto): Promise {\n        return await this.vaccineRepository.create({\n            name: createVaccineDto.name,\n            species: createVaccineDto.species,\n            breed: createVaccineDto.breed,\n            monthsAfterBirth: createVaccineDto.monthsAfterBirth,\n        }).save();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/animals/animal.entity.ts\n            \n            class\n            Animal\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/animals/animals.controller.ts\n            \n            controller\n            AnimalsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/animals/animals.service.ts\n            \n            injectable\n            AnimalsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/animals/dto/create-animal.dto.ts\n            \n            class\n            CreateAnimalDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            typeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notes/dto/create-note.dto.ts\n            \n            class\n            CreateNoteDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/notes/note.controller.ts\n            \n            controller\n            NotesController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/notes/note.entity.ts\n            \n            class\n            Note\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/notes/note.service.ts\n            \n            injectable\n            NotesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/jwt-payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/vaccines/dto/create-vaccine.dto.ts\n            \n            class\n            CreateVaccineDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/vaccines/dto/get-vaccines.dto.ts\n            \n            class\n            GetVaccinesDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/vaccines/vaccine.entity.ts\n            \n            class\n            Vaccine\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/vaccines/vaccines.controller.ts\n            \n            controller\n            VaccinesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/vaccines/vaccines.service.ts\n            \n            injectable\n            VaccinesService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.6.1\n        \n            @nestjs/typeorm : ^7.1.0\n        \n            bcrypt : ^5.0.0\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.3.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n        \n            typeorm : ^0.2.25\n        \n            uuid : ^8.3.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalSpecies   (src/.../animal-species.enum.ts)\n                        \n                        \n                            NoteFrequency   (src/.../note-frequency.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/animals/enum/animal-species.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AnimalSpecies\n                    \n                \n                        \n                            \n                                 CACHORRO\n                            \n                        \n                        \n                            \n                                Value : Cachorro\n                            \n                        \n                        \n                            \n                                 GATO\n                            \n                        \n                        \n                            \n                                Value : Gato\n                            \n                        \n                        \n                            \n                                 NAO_INFORMAR\n                            \n                        \n                        \n                            \n                                Value : Não Informar\n                            \n                        \n                        \n                            \n                                 OUTRO\n                            \n                        \n                        \n                            \n                                Value : Outro\n                            \n                        \n            \n        \n\n    src/notes/note-frequency.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NoteFrequency\n                    \n                \n                        \n                            \n                                 DAY\n                            \n                        \n                        \n                            \n                                Value : Dia\n                            \n                        \n                        \n                            \n                                 WEEK\n                            \n                        \n                        \n                            \n                                Value : Semana\n                            \n                        \n                        \n                            \n                                 MONTH\n                            \n                        \n                        \n                            \n                                Value : Mês\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : Nao repetir\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnimalsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VaccinesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnimalsModule\n\n\n\ncluster_AnimalsModule_imports\n\n\n\ncluster_AnimalsModule_exports\n\n\n\ncluster_AnimalsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_NotesModule\n\n\n\ncluster_NotesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_VaccinesModule\n\n\n\ncluster_VaccinesModule_exports\n\n\n\ncluster_VaccinesModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAnimalsModule\n\nAnimalsModule\n\nAnimalsModule -->\n\nUsersModule->AnimalsModule\n\n\n\n\n\nNotesModule\n\nNotesModule\n\nNotesModule -->\n\nUsersModule->NotesModule\n\n\n\n\n\nVaccinesModule\n\nVaccinesModule\n\nVaccinesModule -->\n\nUsersModule->VaccinesModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nUsersModule->JwtStrategy \n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAnimalsService \n\nAnimalsService \n\nAnimalsService  -->\n\nAnimalsModule->AnimalsService \n\n\n\nNotesModule -->\n\nAnimalsModule->NotesModule\n\n\n\nVaccinesModule -->\n\nAnimalsModule->VaccinesModule\n\n\n\nAppModule -->\n\nAnimalsModule->AppModule\n\n\n\n\n\nAnimalsService\n\nAnimalsService\n\nAnimalsModule -->\n\nAnimalsService->AnimalsModule\n\n\n\nAppModule -->\n\nNotesModule->AppModule\n\n\n\nAppModule -->\n\nVaccinesModule->AppModule\n\n\n\n\n\nVaccinesService \n\nVaccinesService \n\nVaccinesService  -->\n\nVaccinesModule->VaccinesService \n\n\n\n\n\nNotesService\n\nNotesService\n\nNotesModule -->\n\nNotesService->NotesModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nVaccinesService\n\nVaccinesService\n\nVaccinesModule -->\n\nVaccinesService->VaccinesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            typeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/typeorm.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            typeOrmConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: 'postgres',\n    host: 'localhost',\n    port: 5432,\n    username: 'postgres',\n    password: 'password',\n    database: 'tcc',\n    entities: [__dirname + '/../**/*.entity.{js,ts}'],\n    synchronize: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
