var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Animal.html",[0,0.044,1,0.779]],["body/classes/Animal.html",[0,0.039,1,0.974,2,1.044,3,0.272,4,0.235,5,0.235,6,2.353,7,2.311,8,2.98,9,0.31,10,1.477,11,3.356,12,2.216,13,1.452,14,1.457,15,3.86,16,2.216,17,2.328,18,3.86,19,0.801,20,0.033,21,2.569,22,1.671,23,3.24,24,3.986,25,1.082,26,2.819,27,1.296,28,3.327,29,2.819,30,2.569,31,3.986,32,2.819,33,2.893,34,2.819,35,2.327,36,3.327,37,2.98,38,2.819,39,3.327,40,2.819,41,2.046,42,2.893,43,2.046,44,3.986,45,2.819,46,2.542,47,2.819,48,0.552,49,1.817,50,1.817,51,3.418,52,2.893,53,3.86,54,2.893,55,1.044,56,2.819,57,2.819,58,2.819,59,2.819,60,0.272,61,2.819,62,2.046,63,2.819,64,2.353,65,0.014,66,0.02,67,0.014]],["title/controllers/AnimalsController.html",[68,1.283,69,2.053]],["body/controllers/AnimalsController.html",[0,0.026,1,1.413,3,0.179,4,0.155,5,0.155,9,0.204,13,1.847,14,1.153,19,0.567,20,0.032,22,1.285,25,0.832,27,1.178,48,0.518,60,0.179,65,0.009,66,0.014,67,0.009,68,0.75,69,1.884,70,0.75,71,1.554,72,1.2,73,1.554,74,1.083,75,2.44,76,2.44,77,2.44,78,3.413,79,2.44,80,1.554,81,2.733,82,2.864,83,2.923,84,3.464,85,1.884,86,2.444,87,2.149,88,3.413,89,2.968,90,1.554,91,1.884,92,1.815,93,3.685,94,1.861,95,1.861,96,1.515,97,1.515,98,1.646,99,1.991,100,1.554,101,2.44,102,1.861,103,2.923,104,2.96,105,2.576,106,3.901,107,1.884,108,1.861,109,1.861,110,1.554,111,1.554,112,2.121,113,2.121,114,1.861,115,1.861,116,3.292,117,3.413,118,2.968,119,4.931,120,1.861,121,1.861,122,1.861,123,1.554,124,3.012,125,2.923,126,2.149,127,1.554,128,1.861,129,1.861,130,2.121,131,1.884,132,1.2,133,1.2,134,1.351,135,1.351,136,1.351,137,2.968,138,1.351,139,0.455,140,1.73,141,1.554,142,0.817,143,1.554,144,1.351,145,1.351,146,3.039,147,2.619,148,3.178,149,1.2,150,0.69,151,1.351,152,0.978,153,1.861,154,3.039,155,1.2,156,0.892,157,1.351,158,1.861,159,1.351,160,1.2,161,2.864,162,1.884,163,1.554,164,3.225,165,1.351,166,1.861,167,1.646,168,1.861,169,1.861,170,1.861,171,1.861,172,1.583,173,1.861,174,1.351,175,1.861,176,1.861,177,1.861,178,1.351,179,1.861,180,1.861]],["title/modules/AnimalsModule.html",[181,1.086,182,1.527]],["body/modules/AnimalsModule.html",[0,0.05,1,0.896,3,0.353,4,0.306,5,0.306,20,0.032,48,0.654,60,0.353,65,0.018,66,0.024,67,0.018,69,3.41,70,1.918,139,0.896,140,3.042,141,3.058,144,2.66,181,1.804,182,2.976,183,1.608,184,1.608,185,1.926,186,1.926,187,1.608,188,2.781,189,2.781,190,3.058,191,3.058,192,3.058,193,3.058,194,2.612,195,2.503,196,1.926,197,1.926,198,3.664,199,2.76,200,3.664,201,2.124,202,1.25,203,2.66,204,3.664]],["title/injectables/AnimalsService.html",[140,1.527,205,1.086]],["body/injectables/AnimalsService.html",[0,0.034,1,1.335,3,0.241,4,0.209,5,0.209,9,0.275,11,2.654,12,1.198,13,1.494,14,1.335,16,1.198,17,1.473,19,0.701,20,0.033,25,0.99,27,1.28,48,0.581,55,0.926,60,0.241,65,0.012,66,0.018,67,0.012,74,1.355,75,3.052,76,3.052,77,3.052,78,3.97,79,3.052,80,3.052,81,3.064,96,1.875,97,1.875,98,1.875,99,2.15,100,3.052,105,1.198,107,1.612,110,3.052,123,3.052,130,3.452,139,0.611,140,1.753,142,1.097,143,2.087,144,1.815,156,1.198,167,1.762,172,1.604,202,0.853,205,1.247,206,1.314,207,2.087,208,3.207,209,2.119,210,2.5,211,2.5,212,4.322,213,2.279,214,2.5,215,3.656,216,2.5,217,2.5,218,2.5,219,2.5,220,2.5,221,1.815,222,1.449,223,2.5,224,2.5,225,2.119,226,2.272,227,2.5,228,2.5,229,2.5,230,2.5,231,2.5,232,2.5,233,2.087,234,2.778,235,2.5,236,2.5,237,3.656,238,3.656,239,3.052,240,2.5,241,2.5,242,1.612,243,2.5,244,2.087,245,2.5]],["title/modules/AppModule.html",[181,1.086,246,2.053]],["body/modules/AppModule.html",[0,0.05,3,0.352,4,0.305,5,0.305,20,0.032,48,0.665,60,0.352,65,0.018,66,0.023,67,0.018,139,0.893,181,1.802,182,2.85,183,1.603,184,1.603,185,1.92,186,1.92,187,1.603,188,1.92,189,1.92,194,2.61,195,2.498,196,1.92,197,1.92,199,2.755,201,2.118,202,1.246,246,4.09,247,3.05,248,3.05,249,3.447,250,3.447,251,3.653,252,2.652,253,3.653,254,3.653,255,3.653,256,3.653,257,3.653,258,3.653]],["title/classes/CreateAnimalDto.html",[0,0.044,81,1.846]],["body/classes/CreateAnimalDto.html",[0,0.056,1,1.356,2,1.068,3,0.278,4,0.241,5,0.241,9,0.317,10,1.5,11,3.398,12,2.244,13,1.594,14,1.144,16,2.244,19,0.741,20,0.032,21,2.611,22,1.546,25,1.001,27,1.243,33,2.94,48,0.514,60,0.278,65,0.014,66,0.02,67,0.014,81,2.348,86,2.551,87,2.915,92,1.68,126,2.461,130,3.398,150,1.068,259,4.629,260,2.407,261,3.447,262,3.381,263,3.381,264,3.859,265,2.884,266,2.884,267,3.685,268,2.407,269,2.884,270,2.884,271,2.884,272,3.908,273,4.05,274,3.381,275,2.94,276,2.884,277,2.884,278,2.884,279,2.884,280,3.574,281,3.214,282,3.214,283,2.407,284,3.381,285,1.516,286,2.884,287,2.884,288,2.884,289,2.884,290,2.884,291,2.884,292,2.884,293,2.884]],["title/classes/CreateNoteDto.html",[0,0.044,294,1.846]],["body/classes/CreateNoteDto.html",[0,0.053,1,1.101,2,0.995,3,0.259,4,0.224,5,0.224,9,0.295,10,1.427,13,1.545,19,0.751,20,0.032,21,2.483,22,1.567,25,1.014,27,1.322,35,1.179,48,0.495,60,0.259,65,0.013,66,0.019,67,0.013,86,1.69,87,2.025,92,1.825,150,0.995,261,3.492,262,3.215,264,3.887,280,3.597,281,3.235,282,3.235,283,2.243,284,3.215,285,1.412,294,2.233,295,4.658,296,2.243,297,3.268,298,3.268,299,3.268,300,3.268,301,3.268,302,2.687,303,2.687,304,3.852,305,4.923,306,4.923,307,3.852,308,3.852,309,4.918,310,3.852,311,2.687,312,3.852,313,2.687,314,2.687,315,2.687,316,2.687,317,3.215,318,3.852,319,2.687,320,2.687,321,3.852,322,2.687,323,2.243,324,2.687,325,2.687,326,3.852,327,2.687,328,2.243,329,2.687,330,2.687,331,2.687,332,2.687]],["title/classes/CreateUserDto.html",[0,0.044,333,1.846]],["body/classes/CreateUserDto.html",[0,0.063,2,1.286,3,0.335,4,0.29,5,0.29,9,0.381,10,1.703,19,0.637,20,0.032,22,1.329,25,0.861,27,1.23,48,0.505,60,0.335,65,0.017,66,0.023,67,0.017,92,1.444,126,2.883,150,1.286,261,2.963,264,3.536,280,3.322,281,2.987,282,2.987,285,1.825,333,2.665,334,4.302,335,2.898,336,2.999,337,3.322,338,3.472,339,5.864,340,4.597,341,5.486,342,5.486,343,3.837,344,4.597,345,4.597,346,3.472,347,3.536,348,3.472,349,4.597,350,4.597,351,4.597,352,4.597,353,3.472,354,3.472,355,3.472,356,3.472,357,3.472,358,3.472]],["title/classes/CreateVaccineDto.html",[0,0.044,359,1.846]],["body/classes/CreateVaccineDto.html",[0,0.06,1,1.401,2,1.188,3,0.309,4,0.267,5,0.267,9,0.352,10,1.615,12,2.373,14,1.21,16,2.373,19,0.736,20,0.032,22,1.536,25,0.995,27,1.338,33,3.856,48,0.479,60,0.309,65,0.016,66,0.022,67,0.016,92,1.668,150,1.188,261,3.424,263,4.133,264,3.845,267,3.856,268,3.638,275,3.164,280,3.581,281,3.079,282,3.22,285,1.686,305,4.434,359,2.526,360,4.637,361,2.677,362,3.594,363,3.207,364,5.312,365,5.312,366,3.207,367,3.207,368,4.133,369,3.207,370,3.207,371,4.358,372,3.207]],["title/classes/GetVaccinesDto.html",[0,0.044,373,1.846]],["body/classes/GetVaccinesDto.html",[0,0.069,1,1.217,2,1.455,3,0.378,4,0.328,5,0.328,9,0.431,10,1.844,12,2.62,16,2.62,19,0.69,20,0.032,22,1.44,25,0.932,27,1.289,48,0.547,60,0.378,65,0.019,66,0.025,67,0.019,92,1.564,150,1.455,267,3.614,275,3.614,281,3.169,282,3.169,285,2.064,373,2.886,374,4.563,375,3.278,376,4.978,377,4.978,378,3.927,379,3.927,380,5.467,381,5.467]],["title/interfaces/JwtPayload.html",[382,2.053,383,1.846]],["body/interfaces/JwtPayload.html",[3,0.448,4,0.388,5,0.388,9,0.511,10,2.047,19,0.645,20,0.031,27,1.321,60,0.448,65,0.023,66,0.027,67,0.023,336,3.204,382,2.998,383,3.202,384,4.652,385,3.883,386,3.883]],["title/injectables/JwtStrategy.html",[205,1.086,387,1.846]],["body/injectables/JwtStrategy.html",[0,0.046,3,0.325,4,0.281,5,0.281,7,1.953,9,0.37,14,1.102,17,2.184,19,0.625,20,0.033,25,0.844,48,0.652,55,1.248,60,0.325,65,0.017,66,0.022,67,0.017,74,1.67,96,1.67,97,1.67,98,1.248,99,1.67,139,0.824,152,1.771,167,1.248,172,1.479,202,1.149,205,1.537,206,1.771,208,2.669,209,2.612,211,2.849,222,1.953,225,1.953,226,2.369,234,1.771,242,2.172,336,2.369,383,3.142,387,2.612,388,2.813,389,4.507,390,2.813,391,3.37,392,3.762,393,4.507,394,3.37,395,3.762,396,3.762,397,3.37,398,3.37,399,3.37,400,2.813,401,2.905,402,2.813,403,2.172,404,3.37,405,2.813,406,3.37,407,3.37,408,3.37,409,3.37,410,2.813,411,2.813]],["title/classes/Note.html",[0,0.044,35,1.398]],["body/classes/Note.html",[0,0.039,1,1.419,2,1.061,3,0.276,4,0.239,5,0.239,7,2.336,8,3.006,9,0.315,10,1.493,13,1.465,14,1.442,19,0.804,20,0.032,21,2.598,22,1.678,23,3.438,25,1.087,27,1.368,30,2.598,35,1.769,37,1.846,41,2.079,42,2.926,43,2.079,48,0.443,49,1.846,50,1.846,51,3.566,52,2.926,54,2.926,55,1.061,60,0.276,62,2.926,65,0.014,66,0.02,67,0.014,86,1.257,92,1.465,162,1.846,298,3.385,299,3.385,300,3.385,301,3.385,317,3.365,412,2.391,413,4.664,414,3.365,415,2.864,416,2.864,417,4.031,418,2.864,419,4.031,420,2.864,421,4.031,422,2.864,423,4.031,424,2.864,425,4.031,426,2.864,427,2.864,428,4.031,429,2.864,430,4.031,431,2.079,432,2.864,433,2.864,434,2.391,435,2.864,436,2.864]],["title/controllers/NotesController.html",[68,1.283,437,2.053]],["body/controllers/NotesController.html",[0,0.027,1,1.186,3,0.192,4,0.166,5,0.166,9,0.219,13,1.906,14,1.237,15,1.664,19,0.588,20,0.032,22,1.227,25,0.794,27,1.203,35,0.875,48,0.533,60,0.192,65,0.01,66,0.015,67,0.01,68,0.803,70,0.803,72,1.285,74,1.142,82,2.735,84,2.735,86,2.405,87,2.23,91,1.988,92,1.84,93,3.532,96,1.572,97,1.572,98,1.572,99,1.936,101,2.574,104,2.812,105,1.478,106,3.977,112,3.521,113,3.521,116,1.988,126,1.048,127,1.664,131,1.988,132,1.285,133,1.285,134,1.447,135,1.447,136,1.447,137,3.08,138,1.447,139,0.487,142,0.875,145,1.447,146,2.957,147,3.08,148,3.127,149,1.285,150,0.739,151,1.447,152,1.048,154,2.957,155,1.285,156,0.956,157,1.447,159,1.447,160,1.285,161,2.735,164,3.08,165,1.447,167,1.572,172,1.655,174,1.447,178,1.447,294,2.812,297,2.238,306,4.788,437,1.988,438,1.664,439,2.574,440,2.574,441,2.574,442,2.574,443,1.664,444,4.243,445,4.243,446,4.243,447,4.843,448,1.994,449,1.994,450,1.664,451,3.084,452,3.084,453,1.994,454,1.994,455,1.664,456,1.994,457,1.994,458,1.994,459,3.084,460,1.994,461,1.994,462,1.994,463,1.994,464,1.982,465,1.664,466,1.664,467,1.447,468,1.994,469,1.994,470,1.994,471,1.994,472,1.994,473,1.994,474,1.994,475,1.994,476,1.994,477,1.994,478,1.994,479,1.994,480,1.994]],["title/modules/NotesModule.html",[181,1.086,249,1.846]],["body/modules/NotesModule.html",[0,0.05,3,0.351,4,0.304,5,0.304,20,0.032,35,1.599,48,0.665,60,0.351,65,0.018,66,0.023,67,0.018,70,1.911,139,0.891,181,1.799,182,2.848,183,1.599,184,1.599,185,1.915,186,1.915,187,1.599,188,2.773,189,1.915,194,2.607,195,2.494,196,1.915,197,1.915,199,2.75,201,2.112,202,1.242,203,2.644,249,3.627,437,3.401,464,3.123,465,3.041,467,2.644,481,3.041,482,3.643,483,3.041,484,3.643,485,3.643,486,3.041,487,3.643]],["title/injectables/NotesService.html",[205,1.086,464,1.674]],["body/injectables/NotesService.html",[0,0.035,1,1.071,3,0.247,4,0.214,5,0.214,9,0.281,13,1.511,14,1.249,19,0.708,20,0.033,25,0.957,27,1.288,35,1.923,48,0.585,55,0.949,60,0.247,64,2.138,65,0.013,66,0.018,67,0.013,74,1.379,92,1.169,96,1.893,97,1.893,98,1.782,99,2.087,105,1.228,107,1.651,139,0.626,140,2.306,142,1.124,156,1.228,167,1.624,172,1.633,202,0.874,205,1.269,206,1.346,208,3.141,209,2.157,211,2.528,221,1.859,222,1.485,225,2.157,226,2.528,234,2.685,239,2.138,242,1.651,294,3.09,297,3.709,298,2.701,299,2.701,300,1.859,301,2.701,439,3.106,440,3.106,441,3.106,442,3.106,443,3.106,450,3.106,455,3.106,464,1.956,466,2.138,467,1.859,488,2.138,489,2.561,490,4.383,491,2.561,492,3.721,493,2.561,494,2.561,495,2.561,496,3.721,497,2.561,498,2.561,499,2.561,500,2.561,501,2.561,502,2.561,503,2.561,504,2.561,505,2.561,506,2.561,507,2.561,508,2.561,509,2.561,510,2.561,511,3.658,512,2.561,513,2.561,514,2.561,515,2.561]],["title/classes/User.html",[0,0.044,17,1.283]],["body/classes/User.html",[0,0.042,1,1.337,2,1.136,3,0.295,4,0.256,5,0.256,7,2.45,8,3.118,9,0.337,10,1.566,13,1.519,14,1.337,17,1.703,19,0.784,20,0.032,22,1.581,23,2.725,25,1.058,27,1.373,30,2.725,36,2.56,37,1.977,48,0.531,49,1.977,50,1.977,51,3.525,53,3.528,55,1.136,60,0.295,65,0.015,66,0.021,67,0.015,73,4.038,74,1.566,96,1.136,97,1.136,98,1.136,99,1.566,104,2.45,167,1.136,208,2.542,226,1.612,233,2.56,234,1.612,336,2.542,337,3.36,347,2.725,431,2.226,516,2.56,517,4.837,518,4.227,519,3.066,520,3.066,521,4.227,522,3.066,523,4.227,524,3.066,525,4.227,526,3.066,527,4.227,528,3.066,529,3.066,530,3.068,531,3.066,532,3.066,533,4.227,534,2.56,535,3.066,536,3.066]],["title/controllers/UsersController.html",[68,1.283,537,2.053]],["body/controllers/UsersController.html",[0,0.026,3,0.183,4,0.158,5,0.158,9,0.208,13,1.781,14,1.161,17,0.763,19,0.572,20,0.032,22,1.296,25,0.839,27,1.065,48,0.492,60,0.183,65,0.009,66,0.015,67,0.009,68,0.763,70,0.763,72,1.221,74,1.098,82,2.888,84,3.773,85,1.91,86,2.569,87,2.7,88,2.474,89,2.151,90,1.582,91,2.661,92,1.838,93,3.605,96,1.529,97,1.529,98,1.66,99,2.001,104,2.393,105,1.421,106,2.151,111,1.582,112,2.151,113,2.151,116,1.91,117,2.474,118,2.997,124,3.047,126,2.94,131,1.91,132,1.221,133,1.221,134,1.375,135,1.375,136,1.375,137,2.65,139,0.463,142,0.832,146,3.062,147,2.65,148,3.2,149,1.221,150,0.702,154,3.062,155,1.91,160,1.221,161,2.888,162,1.221,163,2.474,165,1.375,167,1.66,172,1.301,174,1.375,178,1.375,213,1.75,333,3.191,336,2.17,347,2.661,403,1.221,434,2.474,447,2.474,537,1.91,538,1.582,539,1.895,540,2.474,541,2.474,542,2.474,543,3.446,544,3.446,545,1.582,546,4.128,547,3.65,548,1.895,549,2.964,550,3.446,551,4.128,552,3.446,553,1.895,554,1.895,555,1.582,556,1.895,557,4.128,558,1.895,559,1.895,560,1.582,561,1.895,562,1.895,563,4.128,564,1.895,565,1.895,566,1.895,567,2.964,568,2.964,569,1.895,570,1.895,571,1.895,572,1.582,573,1.582,574,1.895,575,1.895,576,1.895,577,1.895,578,1.895,579,2.474,580,1.895,581,1.895,582,1.895,583,1.895,584,1.895,585,1.895,586,1.895]],["title/modules/UsersModule.html",[181,1.086,194,1.398]],["body/modules/UsersModule.html",[0,0.046,3,0.325,4,0.281,5,0.281,17,1.358,20,0.033,48,0.663,60,0.325,65,0.017,66,0.022,67,0.017,70,1.815,139,0.824,152,1.771,181,1.732,183,1.479,184,1.479,185,1.771,186,1.771,187,1.479,188,2.669,189,2.669,194,2.708,195,2.369,196,1.771,197,1.771,199,1.953,201,1.953,202,1.149,213,3.005,387,3.634,401,2.172,403,2.172,410,2.813,537,3.273,572,2.813,587,2.813,588,2.813,589,2.813,590,3.37,591,3.37,592,4.507,593,3.37,594,2.446,595,3.37,596,3.37,597,3.37,598,3.37,599,3.37,600,3.37,601,3.37,602,3.37,603,3.37]],["title/injectables/UsersService.html",[205,1.086,213,1.527]],["body/injectables/UsersService.html",[0,0.029,3,0.2,4,0.173,5,0.173,9,0.228,13,1.361,14,1.205,17,1.883,19,0.683,20,0.033,25,0.961,27,1.106,48,0.581,55,0.769,60,0.2,65,0.021,66,0.016,67,0.01,74,1.178,84,2.05,85,1.338,86,0.911,87,1.091,96,1.827,97,1.827,98,1.827,99,2.118,105,1.525,107,1.338,139,0.508,142,0.911,156,0.995,167,1.827,172,1.902,202,0.708,205,1.085,206,1.091,208,3.173,209,1.844,211,2.278,213,1.525,221,1.507,222,1.203,225,1.844,226,2.783,234,2.853,242,2.493,244,1.733,333,3.313,336,2.912,337,2.05,347,1.338,383,1.844,390,1.733,392,2.655,395,1.733,396,1.733,401,1.338,402,1.733,403,1.338,405,1.733,411,1.733,511,3.228,530,2.309,534,1.733,540,2.655,541,2.655,542,2.655,543,3.618,544,2.655,545,2.655,550,1.733,552,1.733,555,2.655,560,2.655,573,1.733,579,1.733,594,1.507,604,1.733,605,3.181,606,5.132,607,2.076,608,2.076,609,2.076,610,2.076,611,2.076,612,3.181,613,2.076,614,2.076,615,3.181,616,2.076,617,3.181,618,2.076,619,2.076,620,2.076,621,2.076,622,3.181,623,3.181,624,2.076,625,2.076,626,2.076,627,2.076,628,2.076,629,2.076,630,2.076,631,2.076,632,2.076,633,2.076,634,2.076,635,2.076,636,2.076,637,3.181,638,2.076,639,2.076,640,2.076,641,2.076]],["title/classes/Vaccine.html",[0,0.044,46,1.527]],["body/classes/Vaccine.html",[0,0.044,1,1.454,2,1.173,3,0.305,4,0.264,5,0.264,7,2.505,8,3.171,9,0.348,10,1.601,12,2.358,13,1.545,14,1.491,16,2.358,19,0.791,20,0.032,22,1.651,23,3.406,25,1.069,27,1.334,28,3.607,30,2.785,37,2.041,39,3.607,41,2.299,42,3.137,43,2.299,46,2.071,48,0.475,49,2.041,50,2.041,51,3.565,52,3.137,54,3.137,55,1.173,60,0.305,62,2.299,65,0.016,66,0.021,67,0.016,362,3.57,414,3.607,431,2.299,642,2.643,643,3.167,644,3.167,645,4.321,646,4.321,647,3.167,648,4.321,649,3.167,650,4.321,651,3.167,652,3.167,653,3.167,654,3.167]],["title/controllers/VaccinesController.html",[68,1.283,655,2.053]],["body/controllers/VaccinesController.html",[0,0.039,3,0.272,4,0.235,5,0.235,9,0.31,14,0.974,18,2.353,19,0.553,20,0.032,22,1.153,25,0.746,46,1.351,48,0.622,60,0.272,65,0.014,66,0.02,67,0.014,68,1.136,70,1.136,72,1.817,74,1.477,82,2.569,85,2.569,86,2.536,89,2.893,91,2.569,92,1.665,93,2.569,96,1.477,97,1.477,98,1.477,99,1.862,104,2.311,105,2.409,116,2.569,118,2.893,126,1.482,131,2.569,132,1.817,133,1.817,138,2.046,139,0.689,142,1.237,145,2.046,146,2.98,148,3.24,149,1.817,150,1.044,151,2.046,152,1.482,154,2.98,155,1.817,156,1.351,157,2.046,159,2.046,160,1.817,161,2.569,162,1.817,164,2.893,167,1.477,274,3.86,359,3.191,368,3.327,373,2.913,655,2.569,656,2.353,657,3.327,658,3.327,659,2.353,660,3.986,661,5.505,662,2.819,663,3.986,664,2.819,665,2.819,666,2.353,667,2.819,668,3.986,669,2.819,670,2.819,671,3.327,672,2.353,673,2.353,674,2.353,675,2.353,676,2.046,677,2.43,678,2.353,679,2.819,680,2.819,681,2.819,682,2.819,683,2.819,684,2.819,685,2.819,686,2.819]],["title/modules/VaccinesModule.html",[181,1.086,250,1.846]],["body/modules/VaccinesModule.html",[0,0.049,3,0.34,4,0.294,5,0.294,20,0.032,46,1.692,48,0.66,60,0.34,65,0.017,66,0.023,67,0.017,70,1.872,139,0.863,181,1.772,182,2.824,183,1.549,184,1.549,185,1.856,186,1.856,187,1.549,188,2.731,189,2.731,194,2.585,195,2.443,196,1.856,197,1.856,199,2.694,201,2.046,202,1.204,203,2.563,250,3.636,486,2.947,655,3.349,676,2.563,677,3.318,678,2.947,687,2.947,688,3.53,689,2.947,690,2.947,691,3.53,692,3.53,693,3.53]],["title/injectables/VaccinesService.html",[205,1.086,677,1.674]],["body/injectables/VaccinesService.html",[0,0.043,3,0.304,4,0.263,5,0.263,9,0.346,12,1.51,14,1.289,16,2.646,19,0.68,20,0.033,25,0.919,46,1.51,48,0.626,55,1.167,60,0.304,65,0.016,66,0.021,67,0.016,74,1.595,96,1.818,97,1.818,98,1.595,99,1.954,139,0.77,142,1.383,167,1.595,202,1.075,205,1.469,206,1.656,208,2.996,209,2.496,211,2.772,222,1.826,225,1.826,226,1.656,234,2.579,359,3.2,362,2.287,373,3.057,657,3.595,658,3.595,659,3.595,666,3.595,671,2.63,672,2.63,673,2.63,674,2.63,675,2.63,676,2.287,677,2.263,694,2.63,695,3.151,696,3.151,697,4.306,698,3.151,699,3.151,700,3.151,701,3.151,702,4.906,703,4.306,704,3.151,705,3.151,706,3.151,707,3.151,708,3.151,709,3.151,710,3.151,711,3.151]],["title/coverage.html",[712,3.149]],["body/coverage.html",[0,0.083,1,0.794,5,0.271,6,2.711,17,1.309,19,0.45,20,0.032,35,1.425,46,1.557,65,0.016,66,0.022,67,0.016,68,2.151,69,2.094,71,2.711,81,1.883,140,1.557,172,1.425,187,1.425,205,1.903,207,2.711,213,1.557,252,2.358,259,2.711,260,2.711,294,1.883,295,2.711,296,2.711,333,1.883,334,2.711,335,2.711,343,5.396,359,1.883,360,2.711,361,2.711,373,1.883,374,2.711,375,2.711,382,2.094,383,1.883,385,2.711,386,2.711,387,1.883,388,2.711,412,2.711,437,2.094,438,2.711,464,1.707,488,2.711,516,2.711,537,2.094,538,2.711,604,2.711,642,2.711,655,2.094,656,2.711,677,1.707,694,2.711,712,2.358,713,3.248,714,3.248,715,3.248,716,4.396,717,5.34,718,5.34,719,2.711,720,3.248,721,4.396,722,2.711,723,3.248,724,4.396,725,5.34,726,3.248,727,3.248,728,3.248,729,3.248,730,3.248]],["title/dependencies.html",[184,1.68,731,2.665]],["body/dependencies.html",[0,0.069,20,0.033,55,1.478,65,0.02,66,0.025,67,0.02,139,0.975,150,1.478,152,2.097,184,1.75,202,1.36,285,2.097,400,4.596,401,2.571,530,2.895,594,2.895,732,5.506,733,3.989,734,5.506,735,3.989,736,5.028,737,3.989,738,3.989,739,3.989,740,3.989,741,3.989,742,3.989,743,3.989,744,3.989,745,3.989,746,3.989,747,3.989,748,3.989,749,3.989,750,3.989,751,3.989,752,3.989,753,3.989,754,3.989,755,3.989,756,3.989,757,3.989,758,3.989,759,3.989,760,3.989]],["title/miscellaneous/enumerations.html",[761,1.401,762,3.196]],["body/miscellaneous/enumerations.html",[9,0.468,20,0.032,65,0.021,66,0.026,67,0.021,156,2.041,272,4.372,323,4.372,328,3.555,761,2.238,762,3.555,763,4.258,764,5.237,765,4.258,766,5.237,767,4.258,768,5.237,769,5.282,770,5.237,771,4.258,772,4.258,773,5.237,774,4.258,775,4.258,776,4.258,777,4.258,778,4.258,779,4.258,780,4.258,781,4.258,782,4.258]],["title/miscellaneous/functions.html",[761,1.401,783,3.196]],["body/miscellaneous/functions.html",[9,0.543,20,0.028,65,0.024,66,0.028,67,0.024,187,2.652,722,4.127,761,2.598,783,4.127,784,4.944]],["title/index.html",[9,0.293,785,2.665,786,2.665]],["body/index.html",[4,0.307,20,0.032,65,0.018,66,0.024,67,0.018,92,1.157,211,1.937,712,2.675,787,3.685,788,3.685,789,4.78,790,3.685,791,3.685,792,3.685,793,3.685,794,3.685,795,3.685,796,3.685,797,3.685,798,3.685,799,5.306,800,3.685,801,3.685,802,3.685,803,6.068,804,3.685,805,3.685,806,3.685,807,5.961,808,3.685,809,3.685,810,4.78,811,3.685,812,3.685,813,3.685,814,3.685,815,4.78,816,4.78,817,3.685,818,3.685,819,3.685,820,4.78,821,4.78,822,3.685,823,3.685,824,3.685,825,3.685,826,3.685,827,3.076,828,3.685,829,3.685,830,3.685,831,3.685,832,3.685,833,3.685,834,3.685,835,3.685,836,3.685,837,3.685,838,3.685,839,3.685,840,3.685,841,3.685,842,3.685,843,3.685,844,3.685,845,3.685]],["title/modules.html",[183,1.904]],["body/modules.html",[20,0.027,65,0.023,66,0.027,67,0.023,182,2.213,183,2.026,194,2.026,246,2.976,249,2.677,250,2.677,827,5.186,846,6.213,847,6.213,848,6.213]],["title/overview.html",[849,3.622]],["body/overview.html",[2,1.219,20,0.032,65,0.016,66,0.022,67,0.016,70,1.326,140,2.829,181,1.122,182,2.945,183,1.444,184,1.444,185,1.73,186,1.73,187,1.444,188,1.73,189,1.73,190,2.747,191,2.747,192,2.747,193,2.747,194,2.741,195,2.331,196,1.73,197,1.73,206,1.73,213,2.829,246,3.961,247,2.747,248,2.747,249,3.524,250,3.562,382,2.121,387,3.421,464,2.637,481,2.747,483,2.747,587,2.747,588,2.747,589,2.747,677,3.102,687,2.747,689,2.747,690,2.747,849,2.747,850,4.435,851,3.291,852,3.291,853,3.291]],["title/miscellaneous/variables.html",[761,1.401,854,3.196]],["body/miscellaneous/variables.html",[9,0.494,19,0.751,20,0.031,65,0.022,66,0.027,67,0.022,252,3.932,337,3.492,719,3.758,761,2.366,769,3.758,854,3.758,855,4.502,856,4.502,857,4.502,858,5.417,859,4.502,860,4.502,861,4.502,862,4.502,863,4.502,864,4.502,865,4.502,866,4.502,867,4.502,868,4.502,869,4.502,870,4.502]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":343,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["0.1.13",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["0.2.25",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["02/10/2020",{"_index":327,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["02/10/2020'})@isstring()@isnotempty",{"_index":315,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["1",{"_index":853,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["2/10/2020",{"_index":289,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["2/10/2020'})@isstring()@isnotempty",{"_index":265,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["200",{"_index":104,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["201",{"_index":91,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["3.0.2",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["3600",{"_index":602,"title":{},"body":{"modules/UsersModule.html":{}}}],["4",{"_index":851,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["4.6.1",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":549,"title":{},"body":{"controllers/UsersController.html":{}}}],["401",{"_index":155,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["5",{"_index":850,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.5.4",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":852,"title":{},"body":{"overview.html":{}}}],["9]+\\.)+[a",{"_index":344,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9]{1,3}\\.[0",{"_index":339,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9]{1,3}\\])|(([a",{"_index":340,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["__dirname",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":637,"title":{},"body":{"injectables/UsersService.html":{}}}],["acesso",{"_index":568,"title":{},"body":{"controllers/UsersController.html":{}}}],["acordo",{"_index":668,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["amazing",{"_index":828,"title":{},"body":{"index.html":{}}}],["andwhere('note.animal",{"_index":510,"title":{},"body":{"injectables/NotesService.html":{}}}],["angular",{"_index":798,"title":{},"body":{"index.html":{}}}],["animais",{"_index":119,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["animais'})@get()@apibearerauth('jwt",{"_index":121,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["animal",{"_index":1,"title":{"classes/Animal.html":{}},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"classes/Vaccine.html":{},"coverage.html":{}}}],["animal'})@apiparam({name",{"_index":460,"title":{},"body":{"controllers/NotesController.html":{}}}],["animal'})@apiresponse({status",{"_index":461,"title":{},"body":{"controllers/NotesController.html":{}}}],["animal'})@isstring()@isnotempty",{"_index":268,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{}}}],["animal'})@isstring()@isnotempty()@isin(undefined",{"_index":276,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animal'})@isstring()@isnotempty()@isuuid",{"_index":302,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["animal'})@isstring()@isoptional()@isnotempty",{"_index":377,"title":{},"body":{"classes/GetVaccinesDto.html":{}}}],["animal.'})@apiresponse({status",{"_index":103,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["animal.birthdate",{"_index":228,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["animal.breed",{"_index":231,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["animal.dto",{"_index":143,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["animal.dto.ts",{"_index":260,"title":{},"body":{"classes/CreateAnimalDto.html":{},"coverage.html":{}}}],["animal.dto.ts:14",{"_index":266,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animal.dto.ts:20",{"_index":277,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animal.dto.ts:25",{"_index":269,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animal.dto.ts:31",{"_index":279,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animal.dto.ts:9",{"_index":271,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animal.entity",{"_index":144,"title":{},"body":{"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{}}}],["animal.name",{"_index":227,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["animal.notes",{"_index":436,"title":{},"body":{"classes/Note.html":{}}}],["animal.species",{"_index":229,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["animal.user",{"_index":233,"title":{},"body":{"injectables/AnimalsService.html":{},"classes/User.html":{}}}],["animal.vaccines",{"_index":654,"title":{},"body":{"classes/Vaccine.html":{}}}],["animal_id_animal",{"_index":414,"title":{},"body":{"classes/Note.html":{},"classes/Vaccine.html":{}}}],["animalid",{"_index":297,"title":{},"body":{"classes/CreateNoteDto.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["animalrepository",{"_index":215,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["animals",{"_index":73,"title":{},"body":{"controllers/AnimalsController.html":{},"classes/User.html":{}}}],["animals.controller",{"_index":200,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["animals.service",{"_index":141,"title":{},"body":{"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{}}}],["animals/animals.module",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["animalscontroller",{"_index":69,"title":{"controllers/AnimalsController.html":{}},"body":{"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"coverage.html":{}}}],["animalservice",{"_index":490,"title":{},"body":{"injectables/NotesService.html":{}}}],["animalsmodule",{"_index":182,"title":{"modules/AnimalsModule.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/VaccinesModule.html":{},"modules.html":{},"overview.html":{}}}],["animalspecies",{"_index":272,"title":{},"body":{"classes/CreateAnimalDto.html":{},"miscellaneous/enumerations.html":{}}}],["animalspecies.gato",{"_index":291,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animalspecies.nao_informar",{"_index":292,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animalspecies.outro",{"_index":293,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["animalsservice",{"_index":140,"title":{"injectables/AnimalsService.html":{}},"body":{"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"injectables/NotesService.html":{},"coverage.html":{},"overview.html":{}}}],["apibearerauth",{"_index":145,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/VaccinesController.html":{}}}],["apibearerauth('jwt",{"_index":164,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/VaccinesController.html":{}}}],["apioperation",{"_index":146,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["apioperation({summary",{"_index":82,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["apiparam",{"_index":147,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":280,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{}}}],["apiproperty({description",{"_index":261,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{}}}],["apipropertyoptional",{"_index":380,"title":{},"body":{"classes/GetVaccinesDto.html":{}}}],["apipropertyoptional({description",{"_index":376,"title":{},"body":{"classes/GetVaccinesDto.html":{}}}],["apiresponse",{"_index":148,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["apitags",{"_index":149,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["apitags('animais",{"_index":153,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["apitags('notas",{"_index":468,"title":{},"body":{"controllers/NotesController.html":{}}}],["apitags('usuários",{"_index":574,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('vacinas",{"_index":679,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["app",{"_index":805,"title":{},"body":{"index.html":{}}}],["applications",{"_index":795,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":246,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["após",{"_index":365,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["assinatura",{"_index":525,"title":{},"body":{"classes/User.html":{}}}],["async",{"_index":208,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{}}}],["authguard",{"_index":151,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/VaccinesController.html":{}}}],["author",{"_index":838,"title":{},"body":{"index.html":{}}}],["autorizado",{"_index":157,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/VaccinesController.html":{}}}],["await",{"_index":234,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{}}}],["backers",{"_index":829,"title":{},"body":{"index.html":{}}}],["banco",{"_index":89,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["banho",{"_index":325,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["banho'})@isstring()@isnotempty",{"_index":319,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["baseentity",{"_index":8,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["bcrypt",{"_index":530,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.gensalt",{"_index":624,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(password",{"_index":534,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["birthdate",{"_index":11,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{}}}],["body",{"_index":132,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["bootstrap",{"_index":187,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":12,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"classes/Vaccine.html":{},"injectables/VaccinesService.html":{}}}],["breed.tolowercase",{"_index":232,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["browse",{"_index":848,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":846,"title":{},"body":{"modules.html":{}}}],["building",{"_index":790,"title":{},"body":{"index.html":{}}}],["cachorro",{"_index":768,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cadastrada",{"_index":663,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["cadastradas",{"_index":274,"title":{},"body":{"classes/CreateAnimalDto.html":{},"controllers/VaccinesController.html":{}}}],["cadastradas'})@apiresponse({status",{"_index":667,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["cadastrado",{"_index":163,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{}}}],["cadastrado'})@post()@apibearerauth('jwt')@usepipes(validationpipe",{"_index":94,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["cadastrado.'})@apiparam({name",{"_index":556,"title":{},"body":{"controllers/UsersController.html":{}}}],["cadastrado.'})@apiresponse({status",{"_index":548,"title":{},"body":{"controllers/UsersController.html":{}}}],["cadastrados",{"_index":124,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{}}}],["cadastrados'})@apiresponse({status",{"_index":120,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["cadastrados'})@get",{"_index":564,"title":{},"body":{"controllers/UsersController.html":{}}}],["cadastro",{"_index":85,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{}}}],["cascade",{"_index":62,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/Vaccine.html":{}}}],["cascade'})@joincolumn({name",{"_index":43,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/Vaccine.html":{}}}],["catch",{"_index":628,"title":{},"body":{"injectables/UsersService.html":{}}}],["class",{"_index":0,"title":{"classes/Animal.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Animal.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{},"overview.html":{}}}],["cluster_animalsmodule",{"_index":190,"title":{},"body":{"modules/AnimalsModule.html":{},"overview.html":{}}}],["cluster_animalsmodule_exports",{"_index":191,"title":{},"body":{"modules/AnimalsModule.html":{},"overview.html":{}}}],["cluster_animalsmodule_imports",{"_index":193,"title":{},"body":{"modules/AnimalsModule.html":{},"overview.html":{}}}],["cluster_animalsmodule_providers",{"_index":192,"title":{},"body":{"modules/AnimalsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_notesmodule",{"_index":481,"title":{},"body":{"modules/NotesModule.html":{},"overview.html":{}}}],["cluster_notesmodule_imports",{"_index":482,"title":{},"body":{"modules/NotesModule.html":{}}}],["cluster_notesmodule_providers",{"_index":483,"title":{},"body":{"modules/NotesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":587,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":588,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":589,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_vaccinesmodule",{"_index":687,"title":{},"body":{"modules/VaccinesModule.html":{},"overview.html":{}}}],["cluster_vaccinesmodule_exports",{"_index":689,"title":{},"body":{"modules/VaccinesModule.html":{},"overview.html":{}}}],["cluster_vaccinesmodule_imports",{"_index":688,"title":{},"body":{"modules/VaccinesModule.html":{}}}],["cluster_vaccinesmodule_providers",{"_index":690,"title":{},"body":{"modules/VaccinesModule.html":{},"overview.html":{}}}],["column",{"_index":51,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["column({name",{"_index":23,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["com",{"_index":105,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{}}}],["comprar",{"_index":309,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["conectados",{"_index":435,"title":{},"body":{"classes/Note.html":{}}}],["config/typeorm.config",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":618,"title":{},"body":{"injectables/UsersService.html":{}}}],["conflictexception(`j",{"_index":631,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(error",{"_index":630,"title":{},"body":{"injectables/UsersService.html":{}}}],["const",{"_index":226,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{}}}],["constructor",{"_index":209,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{}}}],["constructor(animalrepository",{"_index":210,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["constructor(noterepository",{"_index":489,"title":{},"body":{"injectables/NotesService.html":{}}}],["constructor(private",{"_index":160,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["constructor(userrepository",{"_index":390,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(vaccinerepository",{"_index":695,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["controller",{"_index":68,"title":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{},"coverage.html":{}}}],["controller('animals",{"_index":158,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["controller('notes",{"_index":469,"title":{},"body":{"controllers/NotesController.html":{}}}],["controller('users",{"_index":575,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('vaccines",{"_index":680,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["controllers",{"_index":70,"title":{},"body":{"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["coverage",{"_index":712,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createanimal",{"_index":75,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["createanimal(@body",{"_index":166,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["createanimal(createanimaldto",{"_index":80,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["createanimaldto",{"_index":81,"title":{"classes/CreateAnimalDto.html":{}},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"coverage.html":{}}}],["createdatecolumn",{"_index":430,"title":{},"body":{"classes/Note.html":{}}}],["createdatecolumn({name",{"_index":416,"title":{},"body":{"classes/Note.html":{}}}],["createnote",{"_index":439,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["createnote(@body",{"_index":470,"title":{},"body":{"controllers/NotesController.html":{}}}],["createnote(createnotedto",{"_index":443,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["createnotedto",{"_index":294,"title":{"classes/CreateNoteDto.html":{}},"body":{"classes/CreateNoteDto.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"coverage.html":{}}}],["createuser",{"_index":540,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser(@body",{"_index":580,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(createuserdto",{"_index":545,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":333,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createvaccine",{"_index":657,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["createvaccine(@body(validationpipe",{"_index":685,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["createvaccine(createvaccinedto",{"_index":659,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["createvaccinedto",{"_index":359,"title":{"classes/CreateVaccineDto.html":{}},"body":{"classes/CreateVaccineDto.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{},"coverage.html":{}}}],["createvaccinedto.breed",{"_index":709,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["createvaccinedto.monthsafterbirth",{"_index":710,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["createvaccinedto.name",{"_index":707,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["createvaccinedto.species",{"_index":708,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["creationdate",{"_index":413,"title":{},"body":{"classes/Note.html":{}}}],["cria",{"_index":444,"title":{},"body":{"controllers/NotesController.html":{}}}],["da",{"_index":305,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/CreateVaccineDto.html":{}}}],["dado",{"_index":106,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["dados",{"_index":162,"title":{},"body":{"controllers/AnimalsController.html":{},"classes/Note.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["dados'})@apiresponse({status",{"_index":662,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["dados.'})@apiparam({name",{"_index":102,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["dados.'})@apiresponse({status",{"_index":90,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{}}}],["dar",{"_index":318,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["data",{"_index":262,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{}}}],["data_criacao",{"_index":417,"title":{},"body":{"classes/Note.html":{}}}],["data_nascimento",{"_index":24,"title":{},"body":{"classes/Animal.html":{}}}],["data_nota",{"_index":425,"title":{},"body":{"classes/Note.html":{}}}],["database",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":21,"title":{},"body":{"classes/Animal.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/Note.html":{}}}],["day",{"_index":775,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["de",{"_index":86,"title":{},"body":{"controllers/AnimalsController.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{}}}],["declarations",{"_index":186,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["decorators",{"_index":22,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{}}}],["default",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":597,"title":{},"body":{"modules/UsersModule.html":{}}}],["defined",{"_index":25,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["delete",{"_index":136,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":178,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["deleteanimal",{"_index":76,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["deleteanimal(@param('id",{"_index":179,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["deleteanimal(id",{"_index":100,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["deletenote",{"_index":440,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["deletenote(@param('id",{"_index":479,"title":{},"body":{"controllers/NotesController.html":{}}}],["deletenote(id",{"_index":450,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["deleteuser",{"_index":541,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@param('id",{"_index":585,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(id",{"_index":555,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":184,"title":{"dependencies.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descricao",{"_index":419,"title":{},"body":{"classes/Note.html":{}}}],["description",{"_index":92,"title":{},"body":{"controllers/AnimalsController.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{},"index.html":{}}}],["descrição",{"_index":304,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["development",{"_index":806,"title":{},"body":{"index.html":{}}}],["dia",{"_index":328,"title":{},"body":{"classes/CreateNoteDto.html":{},"miscellaneous/enumerations.html":{}}}],["dia'})@isstring()@isnotempty()@isin(undefined",{"_index":313,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["documentation",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":142,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["dto/get",{"_index":674,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["e2e",{"_index":817,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":791,"title":{},"body":{"index.html":{}}}],["email",{"_index":336,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["encontrada",{"_index":514,"title":{},"body":{"injectables/NotesService.html":{}}}],["encontrado",{"_index":244,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/UsersService.html":{}}}],["entities",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":49,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["entity('animal",{"_index":59,"title":{},"body":{"classes/Animal.html":{}}}],["entity('nota",{"_index":432,"title":{},"body":{"classes/Note.html":{}}}],["entity('usuario",{"_index":531,"title":{},"body":{"classes/User.html":{}}}],["entity('vacina",{"_index":653,"title":{},"body":{"classes/Vaccine.html":{}}}],["entity.{js,ts",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum/animal",{"_index":286,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["enumerations",{"_index":762,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviados",{"_index":551,"title":{},"body":{"controllers/UsersController.html":{}}}],["error",{"_index":629,"title":{},"body":{"injectables/UsersService.html":{}}}],["especie",{"_index":371,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["especie_animal",{"_index":39,"title":{},"body":{"classes/Animal.html":{},"classes/Vaccine.html":{}}}],["espécie",{"_index":275,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{}}}],["espécies",{"_index":273,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["estão",{"_index":552,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["example",{"_index":264,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{}}}],["exclui",{"_index":101,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{}}}],["excluido",{"_index":177,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["excluido.'})@delete(':id')@apibearerauth('jwt",{"_index":108,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["exclusão",{"_index":434,"title":{},"body":{"classes/Note.html":{},"controllers/UsersController.html":{}}}],["existe",{"_index":632,"title":{},"body":{"injectables/UsersService.html":{}}}],["expiresin",{"_index":601,"title":{},"body":{"modules/UsersModule.html":{}}}],["export",{"_index":60,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{}}}],["exports",{"_index":189,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["express",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Animal.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["extractjwt",{"_index":398,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["faz",{"_index":83,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{}}}],["filterdto",{"_index":671,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["filterdto.breed",{"_index":704,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["filterdto.species",{"_index":702,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["foi",{"_index":107,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{}}}],["fornecidos",{"_index":636,"title":{},"body":{"injectables/UsersService.html":{}}}],["found",{"_index":511,"title":{},"body":{"injectables/NotesService.html":{},"injectables/UsersService.html":{}}}],["fraca",{"_index":352,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":789,"title":{},"body":{"index.html":{}}}],["frequencia_de_nota",{"_index":421,"title":{},"body":{"classes/Note.html":{}}}],["frequency",{"_index":298,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/Note.html":{},"injectables/NotesService.html":{}}}],["frequency.enum",{"_index":324,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["frequency.enum.ts",{"_index":766,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["function",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":783,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gato",{"_index":770,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get('/user/:userid",{"_index":170,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["get(':id",{"_index":174,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["get('animal/:animalid",{"_index":473,"title":{},"body":{"controllers/NotesController.html":{}}}],["getanimalbyid",{"_index":77,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["getanimalbyid(@param('id",{"_index":175,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["getanimalbyid(id",{"_index":110,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["getanimals",{"_index":78,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["getmany",{"_index":239,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/NotesService.html":{}}}],["getnotebyid",{"_index":441,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["getnotebyid(@param('id",{"_index":476,"title":{},"body":{"controllers/NotesController.html":{}}}],["getnotebyid(id",{"_index":455,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["getnotes",{"_index":442,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["getnotes(@param('animalid",{"_index":474,"title":{},"body":{"controllers/NotesController.html":{}}}],["getnotes(animalid",{"_index":496,"title":{},"body":{"injectables/NotesService.html":{}}}],["getnotes(id",{"_index":458,"title":{},"body":{"controllers/NotesController.html":{}}}],["getting",{"_index":785,"title":{"index.html":{}},"body":{}}],["getuseranimals",{"_index":79,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["getuseranimals(@param('userid",{"_index":171,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["getuseranimals(userid",{"_index":123,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{}}}],["getuserbyid",{"_index":542,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuserbyid(@param('id",{"_index":577,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(id",{"_index":560,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getusers",{"_index":543,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getvaccines",{"_index":658,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["getvaccines(@query(validationpipe",{"_index":682,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["getvaccines(filterdto",{"_index":666,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["getvaccinesdto",{"_index":373,"title":{"classes/GetVaccinesDto.html":{}},"body":{"classes/GetVaccinesDto.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{},"coverage.html":{}}}],["grow",{"_index":824,"title":{},"body":{"index.html":{}}}],["hash",{"_index":533,"title":{},"body":{"classes/User.html":{}}}],["heavily",{"_index":796,"title":{},"body":{"index.html":{}}}],["here",{"_index":835,"title":{},"body":{"index.html":{}}}],["host",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":842,"title":{},"body":{"index.html":{}}}],["id",{"_index":13,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{}}}],["id'})@apiparam({name",{"_index":451,"title":{},"body":{"controllers/NotesController.html":{}}}],["id.'})@apiparam({name",{"_index":111,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{}}}],["id.'})@apiresponse({status",{"_index":127,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{}}}],["id.'})@get(':id')@apibearerauth('jwt",{"_index":114,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["id.'})@post()@apibearerauth('jwt')@usepipes(validationpipe",{"_index":448,"title":{},"body":{"controllers/NotesController.html":{}}}],["id_animal",{"_index":31,"title":{},"body":{"classes/Animal.html":{}}}],["id_nota",{"_index":423,"title":{},"body":{"classes/Note.html":{}}}],["id_usuario",{"_index":521,"title":{},"body":{"classes/User.html":{}}}],["id_vacina",{"_index":646,"title":{},"body":{"classes/Vaccine.html":{}}}],["identificação",{"_index":557,"title":{},"body":{"controllers/UsersController.html":{}}}],["identifier",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":48,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{}}}],["imports",{"_index":199,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{}}}],["incorretos",{"_index":579,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["incorretos.'})@post('login",{"_index":570,"title":{},"body":{"controllers/UsersController.html":{}}}],["incorretos.'})@post()@usepipes(validationpipe",{"_index":553,"title":{},"body":{"controllers/UsersController.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{}}}],["informar",{"_index":772,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["injectable",{"_index":205,"title":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{}},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{},"coverage.html":{}}}],["injectables",{"_index":206,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{},"overview.html":{}}}],["injectrepository",{"_index":222,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{}}}],["injectrepository(animal",{"_index":224,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["injectrepository(note",{"_index":499,"title":{},"body":{"injectables/NotesService.html":{}}}],["injectrepository(user",{"_index":405,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["injectrepository(vaccine",{"_index":700,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["inspired",{"_index":797,"title":{},"body":{"index.html":{}}}],["installation",{"_index":802,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":804,"title":{},"body":{"index.html":{}}}],["interface",{"_index":382,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":384,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["ir",{"_index":307,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["isin",{"_index":283,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{}}}],["isin([animalspecies.cachorro",{"_index":290,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["isin([notefrequency.day",{"_index":329,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["isnotempty",{"_index":282,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{}}}],["isoptional",{"_index":381,"title":{},"body":{"classes/GetVaccinesDto.html":{}}}],["isstring",{"_index":281,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{}}}],["isuuid",{"_index":284,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{}}}],["join",{"_index":831,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":54,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/Vaccine.html":{}}}],["jwt",{"_index":401,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":595,"title":{},"body":{"modules/UsersModule.html":{}}}],["jwtfromrequest",{"_index":407,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":593,"title":{},"body":{"modules/UsersModule.html":{}}}],["jwtmodule.register",{"_index":598,"title":{},"body":{"modules/UsersModule.html":{}}}],["jwtpayload",{"_index":383,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["jwtservice",{"_index":606,"title":{},"body":{"injectables/UsersService.html":{}}}],["jwtstrategy",{"_index":387,"title":{"injectables/JwtStrategy.html":{}},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":839,"title":{},"body":{"index.html":{}}}],["leftjoinandselect('animal.user",{"_index":238,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["leftjoinandselect('note.animal",{"_index":509,"title":{},"body":{"injectables/NotesService.html":{}}}],["legend",{"_index":185,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["length",{"_index":523,"title":{},"body":{"classes/User.html":{}}}],["license",{"_index":845,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":821,"title":{},"body":{"index.html":{}}}],["lista",{"_index":116,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["local",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["localhost",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":544,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["login(@body(validationpipe",{"_index":583,"title":{},"body":{"controllers/UsersController.html":{}}}],["login(createuserdto",{"_index":566,"title":{},"body":{"controllers/UsersController.html":{}}}],["login(loginuserdto",{"_index":612,"title":{},"body":{"injectables/UsersService.html":{}}}],["loginuserdto",{"_index":614,"title":{},"body":{"injectables/UsersService.html":{}}}],["manytoone",{"_index":52,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/Vaccine.html":{}}}],["manytoone(undefined",{"_index":41,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/Vaccine.html":{}}}],["matches",{"_index":354,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":358,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":356,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":66,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mercado",{"_index":308,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["meses",{"_index":364,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["meses_apos_nascimento",{"_index":648,"title":{},"body":{"classes/Vaccine.html":{}}}],["message",{"_index":350,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":74,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["miscellaneous",{"_index":761,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":820,"title":{},"body":{"index.html":{}}}],["mode",{"_index":810,"title":{},"body":{"index.html":{}}}],["module",{"_index":181,"title":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["modules",{"_index":183,"title":{"modules.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["monthsafterbirth",{"_index":362,"title":{},"body":{"classes/CreateVaccineDto.html":{},"classes/Vaccine.html":{},"injectables/VaccinesService.html":{}}}],["more",{"_index":834,"title":{},"body":{"index.html":{}}}],["muito",{"_index":351,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["myśliwiec",{"_index":840,"title":{},"body":{"index.html":{}}}],["mês",{"_index":779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["name",{"_index":14,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["nao",{"_index":781,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nao_informar",{"_index":771,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nascimento",{"_index":263,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{}}}],["nascimento'})@isnotempty",{"_index":366,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["nest",{"_index":799,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":844,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":139,"title":{},"body":{"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":594,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":152,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"modules/UsersModule.html":{},"controllers/VaccinesController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":150,"title":{},"body":{"controllers/AnimalsController.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":202,"title":{},"body":{"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"dependencies.html":{}}}],["new",{"_index":172,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":788,"title":{},"body":{"index.html":{}}}],["nome",{"_index":33,"title":{},"body":{"classes/Animal.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{}}}],["nome_vacina",{"_index":650,"title":{},"body":{"classes/Vaccine.html":{}}}],["none",{"_index":780,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nota",{"_index":306,"title":{},"body":{"classes/CreateNoteDto.html":{},"controllers/NotesController.html":{}}}],["nota'})@apiresponse({status",{"_index":452,"title":{},"body":{"controllers/NotesController.html":{}}}],["nota'})@get(':id')@apibearerauth('jwt",{"_index":456,"title":{},"body":{"controllers/NotesController.html":{}}}],["notas",{"_index":472,"title":{},"body":{"controllers/NotesController.html":{}}}],["notas'})@get('animal/:animalid')@apibearerauth('jwt",{"_index":462,"title":{},"body":{"controllers/NotesController.html":{}}}],["note",{"_index":35,"title":{"classes/Note.html":{}},"body":{"classes/Animal.html":{},"classes/CreateNoteDto.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"coverage.html":{}}}],["note.animal",{"_index":64,"title":{},"body":{"classes/Animal.html":{},"injectables/NotesService.html":{}}}],["note.controller",{"_index":485,"title":{},"body":{"modules/NotesModule.html":{}}}],["note.description",{"_index":504,"title":{},"body":{"injectables/NotesService.html":{}}}],["note.dto",{"_index":466,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["note.dto.ts",{"_index":296,"title":{},"body":{"classes/CreateNoteDto.html":{},"coverage.html":{}}}],["note.dto.ts:14",{"_index":322,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:19",{"_index":311,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:24",{"_index":316,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:30",{"_index":314,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:36",{"_index":303,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:9",{"_index":320,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.entity",{"_index":467,"title":{},"body":{"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{}}}],["note.frequency",{"_index":506,"title":{},"body":{"injectables/NotesService.html":{}}}],["note.notedate",{"_index":505,"title":{},"body":{"injectables/NotesService.html":{}}}],["note.notetype",{"_index":501,"title":{},"body":{"injectables/NotesService.html":{}}}],["note.service",{"_index":465,"title":{},"body":{"controllers/NotesController.html":{},"modules/NotesModule.html":{}}}],["note.title",{"_index":503,"title":{},"body":{"injectables/NotesService.html":{}}}],["notedate",{"_index":299,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/Note.html":{},"injectables/NotesService.html":{}}}],["notefrequency",{"_index":323,"title":{},"body":{"classes/CreateNoteDto.html":{},"miscellaneous/enumerations.html":{}}}],["notefrequency.month",{"_index":331,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["notefrequency.none",{"_index":332,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["notefrequency.week",{"_index":330,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["noterepository",{"_index":492,"title":{},"body":{"injectables/NotesService.html":{}}}],["notes",{"_index":15,"title":{},"body":{"classes/Animal.html":{},"controllers/NotesController.html":{}}}],["notes/note.module",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["notescontroller",{"_index":437,"title":{"controllers/NotesController.html":{}},"body":{"controllers/NotesController.html":{},"modules/NotesModule.html":{},"coverage.html":{}}}],["notesmodule",{"_index":249,"title":{"modules/NotesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules.html":{},"overview.html":{}}}],["notesservice",{"_index":464,"title":{"injectables/NotesService.html":{}},"body":{"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"coverage.html":{},"overview.html":{}}}],["notetype",{"_index":300,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/Note.html":{},"injectables/NotesService.html":{}}}],["notetype.tolowercase",{"_index":502,"title":{},"body":{"injectables/NotesService.html":{}}}],["notfoundexception",{"_index":221,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('usuário",{"_index":621,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception(`nota",{"_index":513,"title":{},"body":{"injectables/NotesService.html":{}}}],["notfoundexception(`o",{"_index":243,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["nova",{"_index":445,"title":{},"body":{"controllers/NotesController.html":{}}}],["novas",{"_index":660,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["novo",{"_index":88,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{}}}],["npm",{"_index":803,"title":{},"body":{"index.html":{}}}],["null",{"_index":640,"title":{},"body":{"injectables/UsersService.html":{}}}],["number",{"_index":645,"title":{},"body":{"classes/Vaccine.html":{}}}],["não",{"_index":156,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"miscellaneous/enumerations.html":{}}}],["o",{"_index":84,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["obriga",{"_index":433,"title":{},"body":{"classes/Note.html":{}}}],["omar",{"_index":288,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["omar'})@isstring()@isnotempty",{"_index":270,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["ondelete",{"_index":42,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/Vaccine.html":{}}}],["onetomany",{"_index":53,"title":{},"body":{"classes/Animal.html":{},"classes/User.html":{}}}],["onetomany(undefined",{"_index":36,"title":{},"body":{"classes/Animal.html":{},"classes/User.html":{}}}],["open",{"_index":822,"title":{},"body":{"index.html":{}}}],["optional",{"_index":97,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["os",{"_index":118,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["ou",{"_index":550,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":197,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["outro",{"_index":773,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overview",{"_index":849,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":731,"title":{"dependencies.html":{}},"body":{}}],["para",{"_index":446,"title":{},"body":{"controllers/NotesController.html":{}}}],["param",{"_index":135,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":96,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["parseuuidpipe",{"_index":137,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["parâmentros",{"_index":681,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["parâmentros'})@get()@apibearerauth('jwt",{"_index":669,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["passport",{"_index":400,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":592,"title":{},"body":{"modules/UsersModule.html":{}}}],["passportmodule.register",{"_index":596,"title":{},"body":{"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":397,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":404,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":337,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":395,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["payload.interface",{"_index":402,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["payload.interface.ts",{"_index":386,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["pelo",{"_index":125,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["pg",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":832,"title":{},"body":{"index.html":{}}}],["port",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["possui",{"_index":113,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["post",{"_index":131,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["post('login",{"_index":582,"title":{},"body":{"controllers/UsersController.html":{}}}],["postgres",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":72,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["primarygeneratedcolumn",{"_index":50,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":30,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["private",{"_index":225,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{}}}],["production",{"_index":812,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":787,"title":{},"body":{"index.html":{}}}],["project",{"_index":823,"title":{},"body":{"index.html":{}}}],["promise",{"_index":99,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/Animal.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["providers",{"_index":188,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["que",{"_index":112,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["query",{"_index":672,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["query.andwhere('vaccines.species",{"_index":703,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["query.getmany",{"_index":705,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["raca",{"_index":28,"title":{},"body":{"classes/Animal.html":{},"classes/Vaccine.html":{}}}],["raça",{"_index":267,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{}}}],["ração",{"_index":326,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["ração'})@isstring()@isnotempty",{"_index":310,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["read",{"_index":833,"title":{},"body":{"index.html":{}}}],["realiza",{"_index":546,"title":{},"body":{"controllers/UsersController.html":{}}}],["reflect",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["repetir",{"_index":782,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["repetição",{"_index":312,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["repository",{"_index":211,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{},"injectables/VaccinesService.html":{},"index.html":{}}}],["reset",{"_index":196,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}],["result",{"_index":65,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":67,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":93,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["return",{"_index":167,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["returns",{"_index":98,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["rimraf",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":807,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":711,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["scalable",{"_index":792,"title":{},"body":{"index.html":{}}}],["secret",{"_index":599,"title":{},"body":{"modules/UsersModule.html":{}}}],["secretorkey",{"_index":409,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["semana",{"_index":777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["senha",{"_index":347,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["server",{"_index":793,"title":{},"body":{"index.html":{}}}],["side",{"_index":794,"title":{},"body":{"index.html":{}}}],["signature",{"_index":517,"title":{},"body":{"classes/User.html":{}}}],["signoptions",{"_index":600,"title":{},"body":{"modules/UsersModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"index.html":{}}}],["species",{"_index":16,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"classes/Vaccine.html":{},"injectables/VaccinesService.html":{}}}],["species.enum",{"_index":287,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["species.enum.ts",{"_index":764,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species.tolowercase",{"_index":230,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["sponsors",{"_index":826,"title":{},"body":{"index.html":{}}}],["src/.../animal",{"_index":763,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":784,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../note",{"_index":765,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../typeorm.config.ts",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/animals/animal.entity",{"_index":431,"title":{},"body":{"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["src/animals/animal.entity.ts",{"_index":6,"title":{},"body":{"classes/Animal.html":{},"coverage.html":{}}}],["src/animals/animal.entity.ts:12",{"_index":34,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animal.entity.ts:15",{"_index":26,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animal.entity.ts:18",{"_index":40,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animal.entity.ts:21",{"_index":29,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animal.entity.ts:25",{"_index":45,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animal.entity.ts:28",{"_index":47,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animal.entity.ts:31",{"_index":38,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animal.entity.ts:9",{"_index":32,"title":{},"body":{"classes/Animal.html":{}}}],["src/animals/animals.controller.ts",{"_index":71,"title":{},"body":{"controllers/AnimalsController.html":{},"coverage.html":{}}}],["src/animals/animals.controller.ts:20",{"_index":95,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["src/animals/animals.controller.ts:28",{"_index":122,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["src/animals/animals.controller.ts:36",{"_index":129,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["src/animals/animals.controller.ts:45",{"_index":115,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["src/animals/animals.controller.ts:54",{"_index":109,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["src/animals/animals.module",{"_index":486,"title":{},"body":{"modules/NotesModule.html":{},"modules/VaccinesModule.html":{}}}],["src/animals/animals.module.ts",{"_index":198,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["src/animals/animals.service",{"_index":498,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/animals/animals.service.ts",{"_index":207,"title":{},"body":{"injectables/AnimalsService.html":{},"coverage.html":{}}}],["src/animals/animals.service.ts:17",{"_index":216,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/animals/animals.service.ts:30",{"_index":219,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/animals/animals.service.ts:36",{"_index":220,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/animals/animals.service.ts:43",{"_index":218,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/animals/animals.service.ts:49",{"_index":217,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/animals/animals.service.ts:9",{"_index":214,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/animals/dto/create",{"_index":259,"title":{},"body":{"classes/CreateAnimalDto.html":{},"coverage.html":{}}}],["src/animals/enum/animal",{"_index":767,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/typeorm.config.ts",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/notes/dto/create",{"_index":295,"title":{},"body":{"classes/CreateNoteDto.html":{},"coverage.html":{}}}],["src/notes/note",{"_index":774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/notes/note.controller.ts",{"_index":438,"title":{},"body":{"controllers/NotesController.html":{},"coverage.html":{}}}],["src/notes/note.controller.ts:20",{"_index":449,"title":{},"body":{"controllers/NotesController.html":{}}}],["src/notes/note.controller.ts:29",{"_index":463,"title":{},"body":{"controllers/NotesController.html":{}}}],["src/notes/note.controller.ts:38",{"_index":457,"title":{},"body":{"controllers/NotesController.html":{}}}],["src/notes/note.controller.ts:47",{"_index":454,"title":{},"body":{"controllers/NotesController.html":{}}}],["src/notes/note.entity",{"_index":58,"title":{},"body":{"classes/Animal.html":{}}}],["src/notes/note.entity.ts",{"_index":412,"title":{},"body":{"classes/Note.html":{},"coverage.html":{}}}],["src/notes/note.entity.ts:10",{"_index":427,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.entity.ts:13",{"_index":429,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.entity.ts:16",{"_index":420,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.entity.ts:19",{"_index":418,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.entity.ts:22",{"_index":426,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.entity.ts:25",{"_index":422,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.entity.ts:30",{"_index":415,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.entity.ts:7",{"_index":424,"title":{},"body":{"classes/Note.html":{}}}],["src/notes/note.module.ts",{"_index":484,"title":{},"body":{"modules/NotesModule.html":{}}}],["src/notes/note.service.ts",{"_index":488,"title":{},"body":{"injectables/NotesService.html":{},"coverage.html":{}}}],["src/notes/note.service.ts:17",{"_index":493,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/notes/note.service.ts:33",{"_index":497,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/notes/note.service.ts:41",{"_index":495,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/notes/note.service.ts:49",{"_index":494,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/notes/note.service.ts:9",{"_index":491,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/users/dto/create",{"_index":334,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/jwt",{"_index":385,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/users/jwt.strategy.ts",{"_index":388,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/users/jwt.strategy.ts:10",{"_index":391,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/users/jwt.strategy.ts:21",{"_index":394,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/users/user.entity",{"_index":56,"title":{},"body":{"classes/Animal.html":{}}}],["src/users/user.entity.ts",{"_index":516,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:12",{"_index":520,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:15",{"_index":524,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:18",{"_index":526,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:21",{"_index":519,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:23",{"_index":528,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:9",{"_index":522,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":538,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:15",{"_index":565,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:23",{"_index":562,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:32",{"_index":554,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:40",{"_index":571,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":559,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":203,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/NotesModule.html":{},"modules/VaccinesModule.html":{}}}],["src/users/users.module.ts",{"_index":590,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":223,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/users/users.service.ts",{"_index":604,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":607,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":611,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":610,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":608,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:50",{"_index":613,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:63",{"_index":616,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:74",{"_index":609,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/vaccines/dto/create",{"_index":360,"title":{},"body":{"classes/CreateVaccineDto.html":{},"coverage.html":{}}}],["src/vaccines/dto/get",{"_index":374,"title":{},"body":{"classes/GetVaccinesDto.html":{},"coverage.html":{}}}],["src/vaccines/vaccine.entity",{"_index":57,"title":{},"body":{"classes/Animal.html":{}}}],["src/vaccines/vaccine.entity.ts",{"_index":642,"title":{},"body":{"classes/Vaccine.html":{},"coverage.html":{}}}],["src/vaccines/vaccine.entity.ts:11",{"_index":651,"title":{},"body":{"classes/Vaccine.html":{}}}],["src/vaccines/vaccine.entity.ts:14",{"_index":652,"title":{},"body":{"classes/Vaccine.html":{}}}],["src/vaccines/vaccine.entity.ts:17",{"_index":644,"title":{},"body":{"classes/Vaccine.html":{}}}],["src/vaccines/vaccine.entity.ts:20",{"_index":649,"title":{},"body":{"classes/Vaccine.html":{}}}],["src/vaccines/vaccine.entity.ts:24",{"_index":643,"title":{},"body":{"classes/Vaccine.html":{}}}],["src/vaccines/vaccine.entity.ts:8",{"_index":647,"title":{},"body":{"classes/Vaccine.html":{}}}],["src/vaccines/vaccines.controller.ts",{"_index":656,"title":{},"body":{"controllers/VaccinesController.html":{},"coverage.html":{}}}],["src/vaccines/vaccines.controller.ts:21",{"_index":670,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["src/vaccines/vaccines.controller.ts:29",{"_index":665,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["src/vaccines/vaccines.module.ts",{"_index":691,"title":{},"body":{"modules/VaccinesModule.html":{}}}],["src/vaccines/vaccines.service.ts",{"_index":694,"title":{},"body":{"injectables/VaccinesService.html":{},"coverage.html":{}}}],["src/vaccines/vaccines.service.ts:15",{"_index":699,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["src/vaccines/vaccines.service.ts:33",{"_index":698,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["src/vaccines/vaccines.service.ts:9",{"_index":696,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["start",{"_index":808,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":811,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":813,"title":{},"body":{"index.html":{}}}],["started",{"_index":786,"title":{"index.html":{}},"body":{}}],["starter",{"_index":801,"title":{},"body":{"index.html":{}}}],["statements",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":154,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["stay",{"_index":836,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":399,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":27,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{}}}],["sucesso",{"_index":684,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["sucesso.'})@post()@apibearerauth('jwt",{"_index":664,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["summary",{"_index":161,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["super",{"_index":406,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":827,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":847,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["tcc",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":816,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":819,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":818,"title":{},"body":{"index.html":{}}}],["teste123",{"_index":357,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["teste123...'})@isstring()@isnotempty()@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":348,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["tests",{"_index":815,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":825,"title":{},"body":{"index.html":{}}}],["this.animalrepository.create(animal).save",{"_index":236,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["this.animalrepository.createquerybuilder('animal",{"_index":237,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["this.animalrepository.delete(id",{"_index":245,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["this.animalrepository.findone(id",{"_index":241,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["this.animalservice.getanimalbyid(animalid",{"_index":500,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.animalsservice.createanimal(createanimaldto",{"_index":168,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["this.animalsservice.deleteanimal(id",{"_index":180,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["this.animalsservice.getanimalbyid(id",{"_index":176,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["this.animalsservice.getanimals",{"_index":169,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["this.animalsservice.getuseranimals(userid",{"_index":173,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":638,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.noterepository.create(note).save",{"_index":507,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.noterepository.createquerybuilder('note",{"_index":508,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.noterepository.delete(id",{"_index":515,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.noterepository.findone(id",{"_index":512,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.notesservice.createnote(createnotedto",{"_index":471,"title":{},"body":{"controllers/NotesController.html":{}}}],["this.notesservice.deletenote(id",{"_index":480,"title":{},"body":{"controllers/NotesController.html":{}}}],["this.notesservice.getnotebyid(id",{"_index":477,"title":{},"body":{"controllers/NotesController.html":{}}}],["this.notesservice.getnotes(id",{"_index":475,"title":{},"body":{"controllers/NotesController.html":{}}}],["this.password",{"_index":536,"title":{},"body":{"classes/User.html":{}}}],["this.signature",{"_index":535,"title":{},"body":{"classes/User.html":{}}}],["this.userrepository.create(user).save",{"_index":627,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.createquerybuilder('user').getmany",{"_index":619,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.delete(id",{"_index":641,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":411,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["this.userrepository.findone(id",{"_index":620,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.getuserbyid(createanimaldto.userid",{"_index":235,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["this.usersservice.createuser(createuserdto",{"_index":581,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deleteuser(id",{"_index":586,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getuserbyid(id",{"_index":578,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getusers",{"_index":576,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.login(createuserdto",{"_index":584,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.vaccinerepository.create",{"_index":706,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["this.vaccinerepository.createquerybuilder('vaccines",{"_index":701,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["this.vaccinesservice.createvaccine(createvaccinedto",{"_index":686,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["this.vaccinesservice.getvaccines(filterdto",{"_index":683,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["this.validateuserpassword(loginuserdto",{"_index":634,"title":{},"body":{"injectables/UsersService.html":{}}}],["throw",{"_index":242,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{}}}],["tipo",{"_index":317,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/Note.html":{}}}],["title",{"_index":301,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/Note.html":{},"injectables/NotesService.html":{}}}],["titulo",{"_index":428,"title":{},"body":{"classes/Note.html":{}}}],["todas",{"_index":459,"title":{},"body":{"controllers/NotesController.html":{}}}],["todos",{"_index":117,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/UsersController.html":{}}}],["token",{"_index":567,"title":{},"body":{"controllers/UsersController.html":{}}}],["topsecret51",{"_index":410,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{}}}],["touch",{"_index":837,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":626,"title":{},"body":{"injectables/UsersService.html":{}}}],["twitter",{"_index":843,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"classes/Animal.html":{},"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":55,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Vaccine.html":{},"injectables/VaccinesService.html":{},"dependencies.html":{}}}],["typeormconfig",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":201,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{}}}],["typeormmodule.forfeature([animal",{"_index":204,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["typeormmodule.forfeature([note",{"_index":487,"title":{},"body":{"modules/NotesModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":603,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([vaccine",{"_index":693,"title":{},"body":{"modules/VaccinesModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":800,"title":{},"body":{"index.html":{}}}],["título",{"_index":321,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["ui",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":87,"title":{},"body":{"controllers/AnimalsController.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["uma",{"_index":447,"title":{},"body":{"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["unauthorizedexception",{"_index":396,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception('o",{"_index":635,"title":{},"body":{"injectables/UsersService.html":{}}}],["undefined",{"_index":37,"title":{},"body":{"classes/Animal.html":{},"classes/Note.html":{},"classes/User.html":{},"classes/Vaccine.html":{}}}],["unique",{"_index":529,"title":{},"body":{"classes/User.html":{}}}],["unique(['email",{"_index":532,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":814,"title":{},"body":{"index.html":{}}}],["useguards",{"_index":138,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/VaccinesController.html":{}}}],["useguards(authguard",{"_index":159,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/VaccinesController.html":{}}}],["usepipes",{"_index":134,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["usepipes(validationpipe",{"_index":165,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":17,"title":{"classes/User.html":{}},"body":{"classes/Animal.html":{},"injectables/AnimalsService.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.animals",{"_index":61,"title":{},"body":{"classes/Animal.html":{}}}],["user.dto",{"_index":573,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":335,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:15",{"_index":353,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":346,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":622,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.entity",{"_index":403,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.password",{"_index":625,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.signature",{"_index":623,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.validatepassword(password",{"_index":639,"title":{},"body":{"injectables/UsersService.html":{}}}],["usercredentialsdto",{"_index":617,"title":{},"body":{"injectables/UsersService.html":{}}}],["userid",{"_index":130,"title":{},"body":{"controllers/AnimalsController.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalDto.html":{}}}],["username",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepository",{"_index":392,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":539,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":591,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":572,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":537,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":212,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["usersmodule",{"_index":194,"title":{"modules/UsersModule.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":213,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AnimalsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usuario_id_usuario",{"_index":44,"title":{},"body":{"classes/Animal.html":{}}}],["usuário",{"_index":126,"title":{},"body":{"controllers/AnimalsController.html":{},"classes/CreateAnimalDto.html":{},"classes/CreateUserDto.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["usuário'})@apiresponse({status",{"_index":547,"title":{},"body":{"controllers/UsersController.html":{}}}],["usuário'})@delete(':id",{"_index":558,"title":{},"body":{"controllers/UsersController.html":{}}}],["usuário'})@get('/user/:userid')@apibearerauth('jwt",{"_index":128,"title":{},"body":{"controllers/AnimalsController.html":{}}}],["usuário'})@isstring()@isnotempty()@isuuid",{"_index":278,"title":{},"body":{"classes/CreateAnimalDto.html":{}}}],["usuário.'})@apiresponse({status",{"_index":569,"title":{},"body":{"controllers/UsersController.html":{}}}],["usuário.'})@get(':id",{"_index":561,"title":{},"body":{"controllers/UsersController.html":{}}}],["usuários",{"_index":563,"title":{},"body":{"controllers/UsersController.html":{}}}],["usário",{"_index":633,"title":{},"body":{"injectables/UsersService.html":{}}}],["uuid",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["vaccine",{"_index":46,"title":{"classes/Vaccine.html":{}},"body":{"classes/Animal.html":{},"classes/Vaccine.html":{},"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{}}}],["vaccine.animal",{"_index":63,"title":{},"body":{"classes/Animal.html":{}}}],["vaccine.dto",{"_index":673,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["vaccine.dto.ts",{"_index":361,"title":{},"body":{"classes/CreateVaccineDto.html":{},"coverage.html":{}}}],["vaccine.dto.ts:13",{"_index":372,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["vaccine.dto.ts:18",{"_index":363,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["vaccine.dto.ts:22",{"_index":367,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["vaccine.dto.ts:8",{"_index":370,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["vaccine.entity",{"_index":676,"title":{},"body":{"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{}}}],["vaccinerepository",{"_index":697,"title":{},"body":{"injectables/VaccinesService.html":{}}}],["vaccines",{"_index":18,"title":{},"body":{"classes/Animal.html":{},"controllers/VaccinesController.html":{}}}],["vaccines.controller",{"_index":692,"title":{},"body":{"modules/VaccinesModule.html":{}}}],["vaccines.dto",{"_index":675,"title":{},"body":{"controllers/VaccinesController.html":{},"injectables/VaccinesService.html":{}}}],["vaccines.dto.ts",{"_index":375,"title":{},"body":{"classes/GetVaccinesDto.html":{},"coverage.html":{}}}],["vaccines.dto.ts:15",{"_index":378,"title":{},"body":{"classes/GetVaccinesDto.html":{}}}],["vaccines.dto.ts:9",{"_index":379,"title":{},"body":{"classes/GetVaccinesDto.html":{}}}],["vaccines.service",{"_index":678,"title":{},"body":{"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{}}}],["vaccines/vaccines.module",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["vaccinescontroller",{"_index":655,"title":{"controllers/VaccinesController.html":{}},"body":{"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"coverage.html":{}}}],["vaccinesmodule",{"_index":250,"title":{"modules/VaccinesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VaccinesModule.html":{},"modules.html":{},"overview.html":{}}}],["vaccinesservice",{"_index":677,"title":{"injectables/VaccinesService.html":{}},"body":{"controllers/VaccinesController.html":{},"modules/VaccinesModule.html":{},"injectables/VaccinesService.html":{},"coverage.html":{},"overview.html":{}}}],["vacina",{"_index":368,"title":{},"body":{"classes/CreateVaccineDto.html":{},"controllers/VaccinesController.html":{}}}],["vacina'})@isstring()@isnotempty",{"_index":369,"title":{},"body":{"classes/CreateVaccineDto.html":{}}}],["vacinas",{"_index":661,"title":{},"body":{"controllers/VaccinesController.html":{}}}],["validate",{"_index":389,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":393,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatepassword",{"_index":518,"title":{},"body":{"classes/User.html":{}}}],["validatepassword(password",{"_index":527,"title":{},"body":{"classes/User.html":{}}}],["validateuserpassword",{"_index":605,"title":{},"body":{"injectables/UsersService.html":{}}}],["validateuserpassword(usercredentialsdto",{"_index":615,"title":{},"body":{"injectables/UsersService.html":{}}}],["validationpipe",{"_index":133,"title":{},"body":{"controllers/AnimalsController.html":{},"controllers/NotesController.html":{},"controllers/UsersController.html":{},"controllers/VaccinesController.html":{}}}],["validator",{"_index":285,"title":{},"body":{"classes/CreateAnimalDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVaccineDto.html":{},"classes/GetVaccinesDto.html":{},"dependencies.html":{}}}],["value",{"_index":769,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":854,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":478,"title":{},"body":{"controllers/NotesController.html":{}}}],["void'})@delete(':id')@apibearerauth('jwt",{"_index":453,"title":{},"body":{"controllers/NotesController.html":{}}}],["watch",{"_index":809,"title":{},"body":{"index.html":{}}}],["website",{"_index":841,"title":{},"body":{"index.html":{}}}],["week",{"_index":776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["where('animal.user",{"_index":240,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["yasha@gmail.com",{"_index":355,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["yasha@gmail.com'})@isstring()@isnotempty()@matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":338,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["you'd",{"_index":830,"title":{},"body":{"index.html":{}}}],["z",{"_index":342,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":349,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z]{2",{"_index":345,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":341,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":195,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/UsersModule.html":{},"modules/VaccinesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Animal.html":{"url":"classes/Animal.html","title":"class - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animals/animal.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthDate\n                            \n                            \n                                breed\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                notes\n                            \n                            \n                                species\n                            \n                            \n                                user\n                            \n                            \n                                vaccines\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'data_nascimento'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'raca'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid', {name: 'id_animal'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'nome'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Note[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            species\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'especie_animal'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE'})@JoinColumn({name: 'usuario_id_usuario'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vaccines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Vaccine[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/animal.entity.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, BaseEntity, PrimaryGeneratedColumn, Column, ManyToOne, OneToMany, JoinColumn } from \"typeorm\";\nimport { User } from \"src/users/user.entity\";\nimport { Vaccine } from \"src/vaccines/vaccine.entity\";\nimport { Note } from \"src/notes/note.entity\";\n\n@Entity('animal')\nexport class Animal extends BaseEntity {\n    @PrimaryGeneratedColumn('uuid', { name: 'id_animal' })\n    id: string;\n\n    @Column({ name: 'nome' })\n    name: string;\n\n    @Column({ name: 'data_nascimento' })\n    birthDate: Date;\n\n    @Column({ name: 'especie_animal' })\n    species: string;\n\n    @Column({ name: 'raca' })\n    breed: string;\n\n    @ManyToOne(() => User, user => user.animals, { onDelete: \"CASCADE\" })\n    @JoinColumn({ name: 'usuario_id_usuario' })\n    user: User;\n\n    @OneToMany(() => Vaccine, vaccine => vaccine.animal)\n    vaccines: Vaccine[];\n\n    @OneToMany(() => Note, note => note.animal)\n    notes: Note[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AnimalsController.html":{"url":"controllers/AnimalsController.html","title":"controller - AnimalsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AnimalsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animals/animals.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                animals\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAnimal\n                            \n                            \n                                deleteAnimal\n                            \n                            \n                                getAnimalById\n                            \n                            \n                                getAnimals\n                            \n                            \n                                getUserAnimals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAnimal\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAnimal(createAnimalDto: CreateAnimalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Faz o cadastro de um novo animal no banco de dados.'})@ApiResponse({status: 201, description: 'Retorna o novo animal cadastrado'})@Post()@ApiBearerAuth('jwt')@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/animals/animals.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAnimalDto\n                                    \n                                                CreateAnimalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAnimal\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAnimal(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Exclui um animal do banco de dados.'})@ApiParam({name: 'id', description: 'id do animal.'})@ApiResponse({status: 200, description: 'O animal com dado id foi excluido.'})@Delete(':id')@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/animals/animals.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAnimalById\n                        \n                        \n                    \n                \n            \n            \n                \ngetAnimalById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna o animal com dado id.'})@ApiParam({name: 'id', description: 'id do animal.'})@ApiResponse({status: 200, description: 'Retorna o animal que possui dado id.'})@Get(':id')@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/animals/animals.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAnimals\n                        \n                        \n                    \n                \n            \n            \n                \ngetAnimals()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna a lista com todos os animais cadastrados'})@ApiResponse({status: 200, description: 'Retorna a lista de animais'})@Get()@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/animals/animals.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserAnimals\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserAnimals(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna a lista com todos os animais cadastrados pelo usuário com dado id.'})@ApiResponse({status: 200, description: 'Retorna a lista de animais de dado usuário'})@Get('/user/:userId')@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/animals/animals.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, ValidationPipe, UsePipes, Get, Param, Delete, ParseUUIDPipe, UseGuards } from '@nestjs/common';\nimport { AnimalsService } from './animals.service';\nimport { CreateAnimalDto } from './dto/create-animal.dto';\nimport { Animal } from './animal.entity';\nimport { ApiBearerAuth, ApiOperation, ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Animais')\n@ApiResponse({ status: 401, description: 'Usuário não autorizado' })\n@Controller('animals')\n@UseGuards(AuthGuard())\nexport class AnimalsController {\n    constructor(private animalsService: AnimalsService) { }\n\n    @ApiOperation({ summary: 'Faz o cadastro de um novo animal no banco de dados.' })\n    @ApiResponse({ status: 201, description: 'Retorna o novo animal cadastrado' })\n    @Post()\n    @ApiBearerAuth('jwt')\n    @UsePipes(ValidationPipe)\n    createAnimal(@Body() createAnimalDto: CreateAnimalDto): Promise {\n        return this.animalsService.createAnimal(createAnimalDto);\n    }\n\n    @ApiOperation({ summary: 'Retorna a lista com todos os animais cadastrados' })\n    @ApiResponse({ status: 200, description: 'Retorna a lista de animais' })\n    @Get()\n    @ApiBearerAuth('jwt')\n    getAnimals(): Promise {\n        return this.animalsService.getAnimals();\n    }\n\n    @ApiOperation({ summary: 'Retorna a lista com todos os animais cadastrados pelo usuário com dado id.' })\n    @ApiResponse({ status: 200, description: 'Retorna a lista de animais de dado usuário' })\n    @Get('/user/:userId')\n    @ApiBearerAuth('jwt')\n    getUserAnimals(@Param('userId', new ParseUUIDPipe()) userId: string): Promise {\n        return this.animalsService.getUserAnimals(userId);\n    }\n\n    @ApiOperation({ summary: 'Retorna o animal com dado id.' })\n    @ApiParam({ name: 'id', description: 'id do animal.' })\n    @ApiResponse({ status: 200, description: 'Retorna o animal que possui dado id.' })\n    @Get(':id')\n    @ApiBearerAuth('jwt')\n    getAnimalById(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n        return this.animalsService.getAnimalById(id);\n    }\n\n    @ApiOperation({ summary: 'Exclui um animal do banco de dados.' })\n    @ApiParam({ name: 'id', description: 'id do animal.' })\n    @ApiResponse({ status: 200, description: 'O animal com dado id foi excluido.' })\n    @Delete(':id')\n    @ApiBearerAuth('jwt')\n    deleteAnimal(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n        return this.animalsService.deleteAnimal(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnimalsModule.html":{"url":"modules/AnimalsModule.html","title":"module - AnimalsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnimalsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnimalsModule\n\n\n\ncluster_AnimalsModule_exports\n\n\n\ncluster_AnimalsModule_providers\n\n\n\ncluster_AnimalsModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAnimalsModule\n\nAnimalsModule\n\nAnimalsModule -->\n\nUsersModule->AnimalsModule\n\n\n\n\n\nAnimalsService \n\nAnimalsService \n\nAnimalsService  -->\n\nAnimalsModule->AnimalsService \n\n\n\n\n\nAnimalsService\n\nAnimalsService\n\nAnimalsModule -->\n\nAnimalsService->AnimalsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/animals/animals.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnimalsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AnimalsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AnimalsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AnimalsController } from './animals.controller';\nimport { AnimalsService } from './animals.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from 'src/users/users.module';\nimport { Animal } from './animal.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Animal]),\n    UsersModule,\n  ],\n  controllers: [AnimalsController],\n  providers: [AnimalsService],\n  exports: [AnimalsService],\n})\nexport class AnimalsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalsService.html":{"url":"injectables/AnimalsService.html","title":"injectable - AnimalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnimalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animals/animals.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAnimal\n                            \n                            \n                                    Async\n                                deleteAnimal\n                            \n                            \n                                    Async\n                                getAnimalById\n                            \n                            \n                                    Async\n                                getAnimals\n                            \n                            \n                                    Async\n                                getUserAnimals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(animalRepository: Repository, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/animals/animals.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAnimal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAnimal(createAnimalDto: CreateAnimalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/animals/animals.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAnimalDto\n                                    \n                                                CreateAnimalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAnimal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAnimal(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/animals/animals.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAnimalById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAnimalById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/animals/animals.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAnimals\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAnimals()\n                \n            \n\n\n            \n                \n                    Defined in src/animals/animals.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserAnimals\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserAnimals(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/animals/animals.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateAnimalDto } from './dto/create-animal.dto';\nimport { Animal } from './animal.entity';\nimport { Repository } from 'typeorm';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class AnimalsService {\n\n    constructor(\n        @InjectRepository(Animal)\n        private animalRepository: Repository,\n        private userService: UsersService,\n    ) { }\n\n    async createAnimal(createAnimalDto: CreateAnimalDto): Promise {\n        const { name, birthDate, species, breed } = createAnimalDto;\n\n        const animal = new Animal();\n        animal.name = name;\n        animal.birthDate = birthDate;\n        animal.species = species.toLowerCase();\n        animal.breed = breed.toLowerCase();\n        animal.user = await this.userService.getUserById(createAnimalDto.userId);\n\n        return await this.animalRepository.create(animal).save();\n    }\n\n    async getAnimals(): Promise {\n        return await this.animalRepository.createQueryBuilder('animal')\n            .leftJoinAndSelect('animal.user', 'user')\n            .getMany();\n    }\n\n    async getUserAnimals(userId: string): Promise {\n        return await this.animalRepository.createQueryBuilder('animal')\n            .leftJoinAndSelect('animal.user', 'user')\n            .where('animal.user = :userId', { userId: userId })\n            .getMany();\n    }\n\n    async getAnimalById(id: string): Promise {\n        const animal = await this.animalRepository.findOne(id);\n        if (!animal) throw new NotFoundException(`O animal com id ${id} não foi encontrado`);\n        return animal;\n    }\n\n    async deleteAnimal(id: string): Promise {\n        await this.animalRepository.delete(id);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAnimalsModule\n\nAnimalsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnimalsModule->AppModule\n\n\n\n\n\nNotesModule\n\nNotesModule\n\nAppModule -->\n\nNotesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nVaccinesModule\n\nVaccinesModule\n\nAppModule -->\n\nVaccinesModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AnimalsModule\n                        \n                        \n                            NotesModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            VaccinesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { typeOrmConfig } from './config/typeorm.config';\nimport { UsersModule } from './users/users.module';\nimport { AnimalsModule } from './animals/animals.module';\nimport { VaccinesModule } from './vaccines/vaccines.module';\nimport { NotesModule } from './notes/note.module';\n\n@Module({\n  imports: [TypeOrmModule.forRoot(typeOrmConfig), UsersModule, AnimalsModule, VaccinesModule, NotesModule],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAnimalDto.html":{"url":"classes/CreateAnimalDto.html","title":"class - CreateAnimalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAnimalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animals/dto/create-animal.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthDate\n                            \n                            \n                                breed\n                            \n                            \n                                name\n                            \n                            \n                                species\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Data de nascimento', example: '2/10/2020'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/dto/create-animal.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Raça do animal', example: 'Raça de um animal'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/dto/create-animal.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Nome do animal', example: 'Omar'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/dto/create-animal.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            species\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AnimalSpecies\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Espécies cadastradas', example: 'Espécie do animal'})@IsString()@IsNotEmpty()@IsIn(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/dto/create-animal.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'id de um usuário', example: 'id de um usuário'})@IsString()@IsNotEmpty()@IsUUID()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/animals/dto/create-animal.dto.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNotEmpty, IsIn, IsUUID } from \"class-validator\";\nimport { AnimalSpecies } from \"../enum/animal-species.enum\";\n\nexport class CreateAnimalDto {\n    @ApiProperty({ description: 'Nome do animal', example: 'Omar' })\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    @ApiProperty({ description: 'Data de nascimento', example: '2/10/2020' })\n    @IsString()\n    @IsNotEmpty()\n    birthDate: Date;\n\n    @ApiProperty({ description: 'Espécies cadastradas', example: 'Espécie do animal' })\n    @IsString()\n    @IsNotEmpty()\n    @IsIn([AnimalSpecies.CACHORRO, AnimalSpecies.GATO, AnimalSpecies.NAO_INFORMAR, AnimalSpecies.OUTRO])\n    species: AnimalSpecies;\n\n    @ApiProperty({ description: 'Raça do animal', example: 'Raça de um animal' })\n    @IsString()\n    @IsNotEmpty()\n    breed: string;\n\n    @ApiProperty({ description: 'id de um usuário', example: 'id de um usuário' })\n    @IsString()\n    @IsNotEmpty()\n    @IsUUID()\n    userId: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNoteDto.html":{"url":"classes/CreateNoteDto.html","title":"class - CreateNoteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNoteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notes/dto/create-note.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animalId\n                            \n                            \n                                description\n                            \n                            \n                                frequency\n                            \n                            \n                                noteDate\n                            \n                            \n                                noteType\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'id do animal.', example: 'id de um animal'})@IsString()@IsNotEmpty()@IsUUID()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/dto/create-note.dto.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Descrição da nota', example: 'Ir no mercado comprar ração'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/dto/create-note.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frequency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Repetição da nota', example: 'Dia'})@IsString()@IsNotEmpty()@IsIn(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/dto/create-note.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noteDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Data da nota', example: '02/10/2020'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/dto/create-note.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noteType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Tipo da nota', example: 'Dar banho'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/dto/create-note.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Título da nota', example: 'Comprar ração'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/dto/create-note.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNotEmpty, IsIn, IsUUID } from \"class-validator\";\nimport { NoteFrequency } from \"../note-frequency.enum\";\n\nexport class CreateNoteDto {\n    @ApiProperty({ description: 'Tipo da nota', example: 'Dar banho' })\n    @IsString()\n    @IsNotEmpty()\n    noteType: string;\n\n    @ApiProperty({ description: 'Título da nota', example: 'Comprar ração' })\n    @IsString()\n    @IsNotEmpty()\n    title: string;\n\n    @ApiProperty({ description: 'Descrição da nota', example: 'Ir no mercado comprar ração' })\n    @IsString()\n    @IsNotEmpty()\n    description: string;\n\n    @ApiProperty({ description: 'Data da nota', example: '02/10/2020' })\n    @IsString()\n    @IsNotEmpty()\n    noteDate: Date;\n\n    @ApiProperty({ description: 'Repetição da nota', example: 'Dia' })\n    @IsString()\n    @IsNotEmpty()\n    @IsIn([NoteFrequency.DAY, NoteFrequency.WEEK, NoteFrequency.MONTH, NoteFrequency.NONE])\n    frequency: string;\n\n    @ApiProperty({ description: 'id do animal.', example: 'id de um animal' })\n    @IsString()\n    @IsNotEmpty()\n    @IsUUID()\n    animalId: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Email do usuário', example: 'yasha@gmail.com'})@IsString()@IsNotEmpty()@Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Senha do usuário', example: 'Teste123...'})@IsString()@IsNotEmpty()@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, Matches } from \"class-validator\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateUserDto {\n    @ApiProperty({ description: 'Email do usuário', example: 'yasha@gmail.com' })\n    @IsString()\n    @IsNotEmpty()\n    @Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n    email: string;\n\n    @ApiProperty({ description: 'Senha do usuário', example: 'Teste123...' })\n    @IsString()\n    @IsNotEmpty()\n    @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, { message: 'Senha muito fraca.' })\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateVaccineDto.html":{"url":"classes/CreateVaccineDto.html","title":"class - CreateVaccineDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateVaccineDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vaccines/dto/create-vaccine.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breed\n                            \n                            \n                                monthsAfterBirth\n                            \n                            \n                                name\n                            \n                            \n                                species\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Raça do animal', example: 'Raça do animal'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/dto/create-vaccine.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthsAfterBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Meses após nascimento', example: 'Meses após nascimento'})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/dto/create-vaccine.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Nome da vacina', example: 'nome da vacina'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/dto/create-vaccine.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            species\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Espécie do animal', example: 'especie do animal'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/dto/create-vaccine.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreateVaccineDto {\n    @ApiProperty({ description: 'Nome da vacina', example: 'nome da vacina' })\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    @ApiProperty({ description: 'Espécie do animal', example: 'especie do animal' })\n    @IsString()\n    @IsNotEmpty()\n    species: string;\n\n    @ApiProperty({ description: 'Raça do animal', example: 'Raça do animal' })\n    @IsString()\n    @IsNotEmpty()\n    breed: string;\n\n    @ApiProperty({ description: 'Meses após nascimento', example: 'Meses após nascimento' })\n    @IsNotEmpty()\n    monthsAfterBirth: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetVaccinesDto.html":{"url":"classes/GetVaccinesDto.html","title":"class - GetVaccinesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetVaccinesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vaccines/dto/get-vaccines.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breed\n                            \n                            \n                                species\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Raça do animal'})@IsString()@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/dto/get-vaccines.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            species\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Espécie do animal'})@IsString()@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/dto/get-vaccines.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsOptional, IsString } from \"class-validator\";\n\nexport class GetVaccinesDto {\n    @ApiPropertyOptional({ description: 'Espécie do animal' })\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    species: string;\n\n    @ApiPropertyOptional({ description: 'Raça do animal' })\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    breed: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/jwt-payload.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n    email: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/users/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { Repository } from \"typeorm\";\nimport { JwtPayload } from \"./jwt-payload.interface\";\nimport { User } from \"./user.entity\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        @InjectRepository(User)\n        private userRepository: Repository,\n    ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            secretOrKey: 'topSecret51',\n        });\n    }\n\n    async validate(payload: JwtPayload): Promise {\n        const { email } = payload;\n        const user = await this.userRepository.findOne({ email });\n\n        if (!user) {\n            throw new UnauthorizedException();\n        }\n\n        return user;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Note.html":{"url":"classes/Note.html","title":"class - Note","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Note\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notes/note.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animal\n                            \n                            \n                                creationDate\n                            \n                            \n                                description\n                            \n                            \n                                frequency\n                            \n                            \n                                id\n                            \n                            \n                                noteDate\n                            \n                            \n                                noteType\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Animal\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE'})@JoinColumn({name: 'animal_id_animal'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'data_criacao'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'descricao'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frequency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'frequencia_de_nota'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid', {name: 'id_nota'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noteDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'data_nota'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noteType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'tipo'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'titulo'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notes/note.entity.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, BaseEntity, PrimaryGeneratedColumn, Column, ManyToOne, CreateDateColumn, JoinColumn } from \"typeorm\";\nimport { Animal } from \"src/animals/animal.entity\";\n\n@Entity('nota')\nexport class Note extends BaseEntity {\n    @PrimaryGeneratedColumn('uuid', { name: 'id_nota' })\n    id: string;\n\n    @Column({ name: 'tipo' })\n    noteType: string;\n\n    @Column({ name: 'titulo' })\n    title: string;\n\n    @Column({ name: 'descricao' })\n    description: string;\n\n    @CreateDateColumn({ name: 'data_criacao' })\n    creationDate: string;\n\n    @Column({ name: 'data_nota' })\n    noteDate: Date;\n\n    @Column({ name: 'frequencia_de_nota' })\n    frequency: string;\n\n    // \"Cascade\" obriga a exclusão de dados conectados\n    @ManyToOne(() => Animal, animal => animal.notes, { onDelete: \"CASCADE\" })\n    @JoinColumn({ name: 'animal_id_animal' })\n    animal: Animal;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotesController.html":{"url":"controllers/NotesController.html","title":"controller - NotesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notes/note.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                notes\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNote\n                            \n                            \n                                deleteNote\n                            \n                            \n                                getNoteById\n                            \n                            \n                                getNotes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNote\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNote(createnoteDto: CreateNoteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Cria nova nota para o animal que possui dado id.'})@ApiResponse({status: 201, description: 'Cria uma nova nota para o animal com dado id.'})@Post()@ApiBearerAuth('jwt')@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/notes/note.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createnoteDto\n                                    \n                                                CreateNoteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteNote\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteNote(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Exclui uma nota que possui dado id'})@ApiParam({name: 'id', description: 'id de uma nota'})@ApiResponse({status: 200, description: 'Retorna void'})@Delete(':id')@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/notes/note.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNoteById\n                        \n                        \n                    \n                \n            \n            \n                \ngetNoteById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna uma nota que possui dado id'})@ApiParam({name: 'id', description: 'id de uma nota'})@ApiResponse({status: 200, description: 'Retorna uma nota'})@Get(':id')@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/notes/note.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNotes\n                        \n                        \n                    \n                \n            \n            \n                \ngetNotes(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna todas as nota de um dado animal'})@ApiParam({name: 'animalId', description: 'id de um animal'})@ApiResponse({status: 200, description: 'Retorna uma lista de notas'})@Get('animal/:animalId')@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/notes/note.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, UsePipes, ValidationPipe, Body, Get, Param, Delete, ParseUUIDPipe, UseGuards } from '@nestjs/common';\nimport { NotesService } from './note.service';\nimport { CreateNoteDto } from './dto/create-note.dto';\nimport { Note } from './note.entity';\nimport { ApiBearerAuth, ApiOperation, ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Notas')\n@ApiResponse({ status: 401, description: 'Usuário não autorizado' })\n@Controller('notes')\n@UseGuards(AuthGuard())\nexport class NotesController {\n    constructor(private notesService: NotesService) { }\n\n    @ApiOperation({ summary: 'Cria nova nota para o animal que possui dado id.' })\n    @ApiResponse({ status: 201, description: 'Cria uma nova nota para o animal com dado id.' })\n    @Post()\n    @ApiBearerAuth('jwt')\n    @UsePipes(ValidationPipe)\n    createNote(@Body() createnoteDto: CreateNoteDto): Promise {\n        return this.notesService.createNote(createnoteDto);\n    }\n\n    @ApiOperation({ summary: 'Retorna todas as nota de um dado animal' })\n    @ApiParam({ name: 'animalId', description: 'id de um animal' })\n    @ApiResponse({ status: 200, description: 'Retorna uma lista de notas' })\n    @Get('animal/:animalId')\n    @ApiBearerAuth('jwt')\n    getNotes(@Param('animalId', new ParseUUIDPipe()) id: string): Promise {\n        return this.notesService.getNotes(id);\n    }\n\n    @ApiOperation({ summary: 'Retorna uma nota que possui dado id' })\n    @ApiParam({ name: 'id', description: 'id de uma nota' })\n    @ApiResponse({ status: 200, description: 'Retorna uma nota' })\n    @Get(':id')\n    @ApiBearerAuth('jwt')\n    getNoteById(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n        return this.notesService.getNoteById(id);\n    }\n\n    @ApiOperation({ summary: 'Exclui uma nota que possui dado id' })\n    @ApiParam({ name: 'id', description: 'id de uma nota' })\n    @ApiResponse({ status: 200, description: 'Retorna void' })\n    @Delete(':id')\n    @ApiBearerAuth('jwt')\n    deleteNote(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n        return this.notesService.deleteNote(id);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotesModule.html":{"url":"modules/NotesModule.html","title":"module - NotesModule","body":"\n                   \n\n\n\n\n    Modules\n    NotesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotesModule\n\n\n\ncluster_NotesModule_imports\n\n\n\ncluster_NotesModule_providers\n\n\n\n\nAnimalsModule\n\nAnimalsModule\n\n\n\nNotesModule\n\nNotesModule\n\nNotesModule -->\n\nAnimalsModule->NotesModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nNotesModule -->\n\nUsersModule->NotesModule\n\n\n\n\n\nNotesService\n\nNotesService\n\nNotesModule -->\n\nNotesService->NotesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/notes/note.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AnimalsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotesController } from './note.controller';\nimport { NotesService } from './note.service';\nimport { AnimalsModule } from 'src/animals/animals.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Note } from './note.entity';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Note]),\n    AnimalsModule,\n    UsersModule,\n  ],\n  controllers: [NotesController],\n  providers: [NotesService]\n})\nexport class NotesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotesService.html":{"url":"injectables/NotesService.html","title":"injectable - NotesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notes/note.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNote\n                            \n                            \n                                    Async\n                                deleteNote\n                            \n                            \n                                    Async\n                                getNoteById\n                            \n                            \n                                    Async\n                                getNotes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(noteRepository: Repository, animalService: AnimalsService)\n                    \n                \n                        \n                            \n                                Defined in src/notes/note.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        noteRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animalService\n                                                  \n                                                        \n                                                                        AnimalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNote\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNote(createnoteDto: CreateNoteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/notes/note.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createnoteDto\n                                    \n                                                CreateNoteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteNote\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteNote(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/notes/note.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNoteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNoteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/notes/note.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNotes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNotes(animalId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/notes/note.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    animalId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateNoteDto } from './dto/create-note.dto';\nimport { Note } from './note.entity';\nimport { Repository } from 'typeorm';\nimport { AnimalsService } from 'src/animals/animals.service';\n\n@Injectable()\nexport class NotesService {\n\n    constructor(\n        @InjectRepository(Note)\n        private noteRepository: Repository,\n        private animalService: AnimalsService,\n    ) { }\n\n    async createNote(createnoteDto: CreateNoteDto): Promise {\n        const { noteType, title, description, noteDate, frequency, animalId } = createnoteDto;\n\n        const animal = await this.animalService.getAnimalById(animalId);\n\n        const note = new Note();\n        note.noteType = noteType.toLowerCase();\n        note.title = title;\n        note.description = description;\n        note.noteDate = noteDate;\n        note.frequency = frequency;\n        note.animal = animal;\n\n        return await this.noteRepository.create(note).save();\n    }\n\n    async getNotes(animalId: string): Promise {\n        return await this.noteRepository.createQueryBuilder('note')\n            .leftJoinAndSelect('note.animal', 'animal')\n            .andWhere('note.animal = :animalId', {\n                animalId: animalId,\n            }).getMany();\n    }\n\n    async getNoteById(id: string): Promise {\n        const found = await this.noteRepository.findOne(id);\n        if (!found) {\n            throw new NotFoundException(`Nota com id ${id} não foi encontrada`);\n        }\n        return found;\n    }\n\n    async deleteNote(id: string): Promise {\n        await this.noteRepository.delete(id);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animals\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                signature\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Animal[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid', {name: 'id_usuario'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'senha', length: 200})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'assinatura'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validatePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.entity.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, BaseEntity, PrimaryGeneratedColumn, Column, OneToMany, Unique } from \"typeorm\";\nimport * as bcrypt from 'bcrypt';\nimport { Animal } from \"src/animals/animal.entity\";\n\n@Entity('usuario')\n@Unique(['email'])\nexport class User extends BaseEntity {\n    @PrimaryGeneratedColumn('uuid', { name: 'id_usuario' })\n    id: string;\n\n    @Column()\n    email: string;\n\n    @Column({ name: 'senha', length: 200 })\n    password: string;\n\n    @Column({ name: 'assinatura' })\n    signature: string;\n\n    @OneToMany(() => Animal, animal => animal.user)\n    animals: Animal[];\n\n    async validatePassword(password: string): Promise {\n        const hash = await bcrypt.hash(password, this.signature);\n        return hash === this.password;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getUserById\n                            \n                            \n                                getUsers\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Realiza o cadastro de um novo usuário'})@ApiResponse({status: 201, description: 'Retorna o usuário cadastrado.'})@ApiResponse({status: 400, description: 'O email ou a senha enviados estão incorretos.'})@Post()@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Exclusão de um usuário cadastrado.'})@ApiParam({name: 'id', description: 'id de identificação de um usuário'})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserById\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna o usuário que possui dado id.'})@ApiParam({name: 'id', description: 'id de identificação de um usuário'})@ApiResponse({status: 200, description: 'Retorna o usuário.'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna todos os usuários cadastrados no banco de dados.'})@ApiResponse({status: 200, description: 'Retorna uma lista com os usuários cadastrados'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Realiza o login do usuário'})@ApiResponse({status: 201, description: 'Retorna o token de acesso do usuário.'})@ApiResponse({status: 401, description: 'O email ou a senha enviados estão incorretos.'})@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Body, ValidationPipe, Post, UsePipes, Get, Param, ParseUUIDPipe, Delete } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ApiOperation, ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { User } from './user.entity';\n\n@ApiTags('Usuários')\n@Controller('users')\nexport class UsersController {\n    constructor(private usersService: UsersService) { }\n\n    @ApiOperation({ summary: 'Retorna todos os usuários cadastrados no banco de dados.' })\n    @ApiResponse({ status: 200, description: 'Retorna uma lista com os usuários cadastrados' })\n    @Get()\n    getUsers(): Promise {\n        return this.usersService.getUsers();\n    }\n\n    @ApiOperation({ summary: 'Retorna o usuário que possui dado id.' })\n    @ApiParam({ name: 'id', description: 'id de identificação de um usuário' })\n    @ApiResponse({ status: 200, description: 'Retorna o usuário.' })\n    @Get(':id')\n    getUserById(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n        return this.usersService.getUserById(id);\n    }\n\n    @ApiOperation({ summary: 'Realiza o cadastro de um novo usuário' })\n    @ApiResponse({ status: 201, description: 'Retorna o usuário cadastrado.' })\n    @ApiResponse({ status: 400, description: 'O email ou a senha enviados estão incorretos.' })\n    @Post()\n    @UsePipes(ValidationPipe)\n    createUser(@Body() createUserDto: CreateUserDto): Promise {\n        return this.usersService.createUser(createUserDto);\n    }\n\n    @ApiOperation({ summary: 'Realiza o login do usuário' })\n    @ApiResponse({ status: 201, description: 'Retorna o token de acesso do usuário.' })\n    @ApiResponse({ status: 401, description: 'O email ou a senha enviados estão incorretos.' })\n    @Post('login')\n    login(@Body(ValidationPipe) createUserDto: CreateUserDto): Promise {\n        return this.usersService.login(createUserDto);\n    }\n\n    @ApiOperation({ summary: 'Exclusão de um usuário cadastrado.' })\n    @ApiParam({ name: 'id', description: 'id de identificação de um usuário' })\n    @Delete(':id')\n    deleteUser(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n        return this.usersService.deleteUser(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nJwtStrategy  -->\n\nUsersModule->JwtStrategy \n\n\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './user.entity';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: 'topSecret51',\n      signOptions: {\n        expiresIn: 3600,\n      },\n    }),\n    TypeOrmModule.forFeature([User]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService, JwtStrategy],\n  exports: [UsersService, JwtStrategy, PassportModule],\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUserPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserPassword(userCredentialsDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userCredentialsDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { User } from './user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtPayload } from './jwt-payload.interface';\n\n@Injectable()\nexport class UsersService {\n\n    constructor(\n        @InjectRepository(User)\n        private userRepository: Repository,\n        private jwtService: JwtService,\n    ) { }\n\n    async getUsers(): Promise {\n        return await this.userRepository.createQueryBuilder('user').getMany();\n    }\n\n    async getUserById(id: string): Promise {\n        const found = await this.userRepository.findOne(id);\n        if (!found) {\n            throw new NotFoundException('Usuário com id ' + id + ' não foi encontrado.');\n        }\n        return found;\n    }\n\n    async createUser(createUserDto: CreateUserDto): Promise {\n        const { email, password } = createUserDto;\n\n        const user = new User();\n        user.email = email;\n        user.signature = await bcrypt.genSalt();\n        user.password = await bcrypt.hash(password, user.signature);\n        let result;\n\n        try {\n            result = await this.userRepository.create(user).save();\n        } catch (error) {\n            // console.log(error);\n            throw new ConflictException(`Já existe o cadastro de um usário com o email ${email}`);\n\n        }\n        return result;\n    }\n\n    async login(loginUserDto: CreateUserDto): Promise {\n        const email = await this.validateUserPassword(loginUserDto);\n\n        if (!email) {\n            throw new UnauthorizedException('O email ou senha fornecidos estão incorretos');\n        }\n\n        const payload: JwtPayload = { email };\n        const accessToken = this.jwtService.sign(payload);\n\n        return { accessToken };\n    }\n\n    async validateUserPassword(userCredentialsDto: CreateUserDto): Promise {\n        const { email, password } = userCredentialsDto;\n        const user = await this.userRepository.findOne({ email });\n\n        if (user && await user.validatePassword(password)) {\n            return user.email;\n        } else {\n            return null;\n        }\n    }\n\n    async deleteUser(id: string): Promise {\n        await this.userRepository.delete(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Vaccine.html":{"url":"classes/Vaccine.html","title":"class - Vaccine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Vaccine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vaccines/vaccine.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animal\n                            \n                            \n                                breed\n                            \n                            \n                                id\n                            \n                            \n                                monthsAfterBirth\n                            \n                            \n                                name\n                            \n                            \n                                species\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Animal\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE'})@JoinColumn({name: 'animal_id_animal'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/vaccine.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'raca'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/vaccine.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid', {name: 'id_vacina'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/vaccine.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthsAfterBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'meses_apos_nascimento'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/vaccine.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'nome_vacina'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/vaccine.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            species\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'especie_animal'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/vaccines/vaccine.entity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, BaseEntity, PrimaryGeneratedColumn, Column, ManyToOne, JoinColumn } from \"typeorm\";\nimport { Animal } from \"src/animals/animal.entity\";\n\n@Entity('vacina')\nexport class Vaccine extends BaseEntity {\n\n    @PrimaryGeneratedColumn('uuid', { name: 'id_vacina' })\n    id: number;\n\n    @Column({ name: 'nome_vacina' })\n    name: string;\n\n    @Column({ name: 'especie_animal' })\n    species: string;\n\n    @Column({ name: 'raca' })\n    breed: string;\n\n    @Column({ name: 'meses_apos_nascimento' })\n    monthsAfterBirth: string;\n\n    @ManyToOne(() => Animal, animal => animal.vaccines, { onDelete: \"CASCADE\" })\n    @JoinColumn({ name: 'animal_id_animal' })\n    animal: Animal;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VaccinesController.html":{"url":"controllers/VaccinesController.html","title":"controller - VaccinesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VaccinesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vaccines/vaccines.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                vaccines\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createVaccine\n                            \n                            \n                                getVaccines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createVaccine\n                        \n                        \n                    \n                \n            \n            \n                \ncreateVaccine(createVaccineDto: CreateVaccineDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Cadastro de novas vacinas no banco de dados'})@ApiResponse({status: 201, description: 'Vacina cadastrada com sucesso.'})@Post()@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/vaccines/vaccines.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createVaccineDto\n                                    \n                                                CreateVaccineDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVaccines\n                        \n                        \n                    \n                \n            \n            \n                \ngetVaccines(filterDto: GetVaccinesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retorna as vacinas cadastradas'})@ApiResponse({status: 200, description: 'Lista de vacinas cadastradas, de acordo com os parâmentros'})@Get()@ApiBearerAuth('jwt')\n                \n            \n\n            \n                \n                    Defined in src/vaccines/vaccines.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                GetVaccinesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Query, UseGuards, ValidationPipe } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateVaccineDto } from './dto/create-vaccine.dto';\nimport { GetVaccinesDto } from './dto/get-vaccines.dto';\nimport { Vaccine } from './vaccine.entity';\nimport { VaccinesService } from './vaccines.service';\n\n@ApiTags('Vacinas')\n@ApiResponse({ status: 401, description: 'Usuário não autorizado' })\n@Controller('vaccines')\n@UseGuards(AuthGuard())\nexport class VaccinesController {\n\n    constructor(private vaccinesService: VaccinesService) { }\n\n    @ApiOperation({ summary: 'Retorna as vacinas cadastradas' })\n    @ApiResponse({ status: 200, description: 'Lista de vacinas cadastradas, de acordo com os parâmentros' })\n    @Get()\n    @ApiBearerAuth('jwt')\n    getVaccines(@Query(ValidationPipe) filterDto: GetVaccinesDto): Promise {\n        return this.vaccinesService.getVaccines(filterDto);\n    }\n\n    @ApiOperation({ summary: 'Cadastro de novas vacinas no banco de dados' })\n    @ApiResponse({ status: 201, description: 'Vacina cadastrada com sucesso.' })\n    @Post()\n    @ApiBearerAuth('jwt')\n    createVaccine(@Body(ValidationPipe) createVaccineDto: CreateVaccineDto): Promise {\n        return this.vaccinesService.createVaccine(createVaccineDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VaccinesModule.html":{"url":"modules/VaccinesModule.html","title":"module - VaccinesModule","body":"\n                   \n\n\n\n\n    Modules\n    VaccinesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VaccinesModule\n\n\n\ncluster_VaccinesModule_imports\n\n\n\ncluster_VaccinesModule_exports\n\n\n\ncluster_VaccinesModule_providers\n\n\n\n\nAnimalsModule\n\nAnimalsModule\n\n\n\nVaccinesModule\n\nVaccinesModule\n\nVaccinesModule -->\n\nAnimalsModule->VaccinesModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nVaccinesModule -->\n\nUsersModule->VaccinesModule\n\n\n\n\n\nVaccinesService \n\nVaccinesService \n\nVaccinesService  -->\n\nVaccinesModule->VaccinesService \n\n\n\n\n\nVaccinesService\n\nVaccinesService\n\nVaccinesModule -->\n\nVaccinesService->VaccinesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/vaccines/vaccines.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VaccinesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VaccinesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AnimalsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VaccinesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VaccinesController } from './vaccines.controller';\nimport { VaccinesService } from './vaccines.service';\nimport { AnimalsModule } from 'src/animals/animals.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Vaccine } from './vaccine.entity';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Vaccine]),\n    AnimalsModule,\n    UsersModule,\n  ],\n  controllers: [VaccinesController],\n  providers: [VaccinesService],\n  exports: [VaccinesService]\n})\nexport class VaccinesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VaccinesService.html":{"url":"injectables/VaccinesService.html","title":"injectable - VaccinesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VaccinesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vaccines/vaccines.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createVaccine\n                            \n                            \n                                    Async\n                                getVaccines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaccineRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/vaccines/vaccines.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaccineRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createVaccine\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVaccine(createVaccineDto: CreateVaccineDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vaccines/vaccines.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createVaccineDto\n                                    \n                                                CreateVaccineDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getVaccines\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVaccines(filterDto: GetVaccinesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vaccines/vaccines.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                GetVaccinesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateVaccineDto } from './dto/create-vaccine.dto';\nimport { GetVaccinesDto } from './dto/get-vaccines.dto';\nimport { Vaccine } from './vaccine.entity';\n\n@Injectable()\nexport class VaccinesService {\n    constructor(\n        @InjectRepository(Vaccine)\n        private vaccineRepository: Repository,\n    ) { }\n\n    async getVaccines(filterDto: GetVaccinesDto): Promise {\n        const query = await this.vaccineRepository.createQueryBuilder('vaccines');\n\n        if (filterDto.species) {\n            query.andWhere('vaccines.species LIKE :species', {\n                species: filterDto.species,\n            });\n        }\n\n        if (filterDto.breed) {\n            query.andWhere('vaccines.species LIKE :species', {\n                species: filterDto.species,\n            });\n        }\n\n        return await query.getMany();\n    }\n\n    async createVaccine(createVaccineDto: CreateVaccineDto): Promise {\n        return await this.vaccineRepository.create({\n            name: createVaccineDto.name,\n            species: createVaccineDto.species,\n            breed: createVaccineDto.breed,\n            monthsAfterBirth: createVaccineDto.monthsAfterBirth,\n        }).save();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/animals/animal.entity.ts\n            \n            class\n            Animal\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/animals/animals.controller.ts\n            \n            controller\n            AnimalsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/animals/animals.service.ts\n            \n            injectable\n            AnimalsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/animals/dto/create-animal.dto.ts\n            \n            class\n            CreateAnimalDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            typeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notes/dto/create-note.dto.ts\n            \n            class\n            CreateNoteDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/notes/note.controller.ts\n            \n            controller\n            NotesController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/notes/note.entity.ts\n            \n            class\n            Note\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/notes/note.service.ts\n            \n            injectable\n            NotesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/jwt-payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/vaccines/dto/create-vaccine.dto.ts\n            \n            class\n            CreateVaccineDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/vaccines/dto/get-vaccines.dto.ts\n            \n            class\n            GetVaccinesDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/vaccines/vaccine.entity.ts\n            \n            class\n            Vaccine\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/vaccines/vaccines.controller.ts\n            \n            controller\n            VaccinesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/vaccines/vaccines.service.ts\n            \n            injectable\n            VaccinesService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.6.1\n        \n            @nestjs/typeorm : ^7.1.0\n        \n            bcrypt : ^5.0.0\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.3.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n        \n            typeorm : ^0.2.25\n        \n            uuid : ^8.3.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalSpecies   (src/.../animal-species.enum.ts)\n                        \n                        \n                            NoteFrequency   (src/.../note-frequency.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/animals/enum/animal-species.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AnimalSpecies\n                    \n                \n                        \n                            \n                                 CACHORRO\n                            \n                        \n                        \n                            \n                                Value : Cachorro\n                            \n                        \n                        \n                            \n                                 GATO\n                            \n                        \n                        \n                            \n                                Value : Gato\n                            \n                        \n                        \n                            \n                                 NAO_INFORMAR\n                            \n                        \n                        \n                            \n                                Value : Não Informar\n                            \n                        \n                        \n                            \n                                 OUTRO\n                            \n                        \n                        \n                            \n                                Value : Outro\n                            \n                        \n            \n        \n\n    src/notes/note-frequency.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NoteFrequency\n                    \n                \n                        \n                            \n                                 DAY\n                            \n                        \n                        \n                            \n                                Value : Dia\n                            \n                        \n                        \n                            \n                                 WEEK\n                            \n                        \n                        \n                            \n                                Value : Semana\n                            \n                        \n                        \n                            \n                                 MONTH\n                            \n                        \n                        \n                            \n                                Value : Mês\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : Nao repetir\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnimalsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VaccinesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnimalsModule\n\n\n\ncluster_AnimalsModule_imports\n\n\n\ncluster_AnimalsModule_exports\n\n\n\ncluster_AnimalsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_NotesModule\n\n\n\ncluster_NotesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_VaccinesModule\n\n\n\ncluster_VaccinesModule_exports\n\n\n\ncluster_VaccinesModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAnimalsModule\n\nAnimalsModule\n\nAnimalsModule -->\n\nUsersModule->AnimalsModule\n\n\n\n\n\nNotesModule\n\nNotesModule\n\nNotesModule -->\n\nUsersModule->NotesModule\n\n\n\n\n\nVaccinesModule\n\nVaccinesModule\n\nVaccinesModule -->\n\nUsersModule->VaccinesModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nUsersModule->JwtStrategy \n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAnimalsService \n\nAnimalsService \n\nAnimalsService  -->\n\nAnimalsModule->AnimalsService \n\n\n\nNotesModule -->\n\nAnimalsModule->NotesModule\n\n\n\nVaccinesModule -->\n\nAnimalsModule->VaccinesModule\n\n\n\nAppModule -->\n\nAnimalsModule->AppModule\n\n\n\n\n\nAnimalsService\n\nAnimalsService\n\nAnimalsModule -->\n\nAnimalsService->AnimalsModule\n\n\n\nAppModule -->\n\nNotesModule->AppModule\n\n\n\nAppModule -->\n\nVaccinesModule->AppModule\n\n\n\n\n\nVaccinesService \n\nVaccinesService \n\nVaccinesService  -->\n\nVaccinesModule->VaccinesService \n\n\n\n\n\nNotesService\n\nNotesService\n\nNotesModule -->\n\nNotesService->NotesModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nVaccinesService\n\nVaccinesService\n\nVaccinesModule -->\n\nVaccinesService->VaccinesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            typeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/typeorm.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            typeOrmConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: 'postgres',\n    host: 'localhost',\n    port: 5432,\n    username: 'postgres',\n    password: 'password',\n    database: 'tcc',\n    entities: [__dirname + '/../**/*.entity.{js,ts}'],\n    synchronize: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
